//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;

        apicontract UniversalApiContract;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct WindowId WindowId;
    }
}
namespace Windows
{
    namespace System
    {
        namespace RemoteDesktop
        {
            namespace Provider
            {
                typedef enum RemoteDesktopConnectionStatus RemoteDesktopConnectionStatus;

                interface ICloudPCDisplayInfo;

                interface ICloudPCDisplayInfoFactory;

                interface ICloudPCHostService;

                interface ICloudPCHostServiceStatics;

                interface IRemoteDesktopConnectionInfo;

                interface IRemoteDesktopConnectionInfo2;

                interface IRemoteDesktopConnectionInfoStatics;

                interface IRemoteDesktopConnectionRemoteInfo;

                interface IRemoteDesktopConnectionRemoteInfoStatics;

                interface IRemoteDesktopInfo;

                interface IRemoteDesktopInfoFactory;

                interface IRemoteDesktopRegistrarStatics;

                runtimeclass CloudPCDisplayInfo;

                runtimeclass CloudPCHostService;

                runtimeclass RemoteDesktopConnectionInfo;

                runtimeclass RemoteDesktopConnectionRemoteInfo;

                runtimeclass RemoteDesktopInfo;

                runtimeclass RemoteDesktopRegistrar;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace System
    {
        namespace RemoteDesktop
        {
            namespace Provider
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo*>;

                    interface Windows.Foundation.Collections.IVector<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo*, IInspectable*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace System
    {
        namespace RemoteDesktop
        {
            namespace Provider
            {
                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                enum RemoteDesktopConnectionStatus
                {
                    Connecting      = 0,
                    Connected       = 1,
                    UserInputNeeded = 2,
                    Disconnected    = 3
                };

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo)]
                [experimental]
                [uuid(6C858DE8-1095-5C6E-913F-2E800C29FC53)]
                interface ICloudPCDisplayInfo : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propput] HRESULT Name([in] HSTRING value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo)]
                [experimental]
                [uuid(97DB7D7D-90D7-5A31-814D-1E9AED6586AE)]
                interface ICloudPCDisplayInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING name, [out] [retval] Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.CloudPCHostService)]
                [experimental]
                [uuid(593AA68B-29E0-5C1B-A9DB-F6D58EAAC33F)]
                interface ICloudPCHostService : IInspectable
                {
                    [propget] HRESULT DisplayInfo([out] [retval] Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo** value);
                    [propput] HRESULT DisplayInfo([in] Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo* value);
                    HRESULT SwitchToCloudPC();
                    [eventadd] HRESULT SwitchToLocalPC([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SwitchToLocalPC([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.CloudPCHostService)]
                [experimental]
                [uuid(B756145E-85C0-5D54-8A68-4D92BBA93365)]
                interface ICloudPCHostServiceStatics : IInspectable
                {
                    HRESULT GetForWindow([in] Windows.UI.WindowId windowId, [out] [retval] Windows.System.RemoteDesktop.Provider.CloudPCHostService** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo)]
                [uuid(886BDE2A-46AD-5A25-9348-03E801C78575)]
                interface IRemoteDesktopConnectionInfo : IInspectable
                {
                    HRESULT SetConnectionStatus([in] Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionStatus value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo)]
                [experimental]
                [uuid(8A260CF2-195D-5CD8-97FB-A2B1C5E51261)]
                interface IRemoteDesktopConnectionInfo2 : IInspectable
                {
                    [propget] HRESULT DisplayInfo([out] [retval] Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo** value);
                    [propput] HRESULT DisplayInfo([in] Windows.System.RemoteDesktop.Provider.CloudPCDisplayInfo* value);
                    [eventadd] HRESULT SwitchToCloudPC([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SwitchToCloudPC([in] EventRegistrationToken token);
                    HRESULT SwitchToLocalPC();
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo)]
                [uuid(4A7DC5A1-3368-5A75-BB78-807DF7EBC439)]
                interface IRemoteDesktopConnectionInfoStatics : IInspectable
                {
                    HRESULT GetForLaunchUri([in] Windows.Foundation.Uri* launchUri, [in] Windows.UI.WindowId windowId, [out] [retval] Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionInfo** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo)]
                [uuid(E50E00E5-010D-5CAB-B468-CF871A8543B5)]
                interface IRemoteDesktopConnectionRemoteInfo : IInspectable
                {
                    HRESULT ReportSwitched();
                    [eventadd] HRESULT SwitchToLocalSessionRequested([in] Windows.Foundation.TypedEventHandler<Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SwitchToLocalSessionRequested([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo)]
                [uuid(9AD68472-CD92-537A-8309-639CE2CF940F)]
                interface IRemoteDesktopConnectionRemoteInfoStatics : IInspectable
                {
                    HRESULT Current([out] [retval] Windows.System.RemoteDesktop.Provider.RemoteDesktopConnectionRemoteInfo** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo)]
                [uuid(D185BB25-2F1E-5098-B9E0-F46D6358C5C4)]
                interface IRemoteDesktopInfo : IInspectable
                {
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propget] HRESULT Id([out] [retval] HSTRING* value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo)]
                [uuid(AD0E8D58-B56F-5A8B-B419-8002EE0C5EE9)]
                interface IRemoteDesktopInfoFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING id, [in] HSTRING displayName, [out] [retval] Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [exclusiveto(Windows.System.RemoteDesktop.Provider.RemoteDesktopRegistrar)]
                [uuid(687C2750-46D9-5DE3-8DC3-84A9202CECFB)]
                interface IRemoteDesktopRegistrarStatics : IInspectable
                {
                    [propget] HRESULT DesktopInfos([out] [retval] Windows.Foundation.Collections.IVector<Windows.System.RemoteDesktop.Provider.RemoteDesktopInfo*>** value);
                    HRESULT IsSwitchToLocalSessionEnabled([out] [retval] boolean* result);
                }

                [activatable(Windows.System.RemoteDesktop.Provider.ICloudPCDisplayInfoFactory, Windows.Foundation.UniversalApiContract, 15.0)]
                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CloudPCDisplayInfo
                {
                    [default] [experimental] interface Windows.System.RemoteDesktop.Provider.ICloudPCDisplayInfo;
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [static(Windows.System.RemoteDesktop.Provider.ICloudPCHostServiceStatics, Windows.Foundation.UniversalApiContract, 15.0)]
                [threading(both)]
                runtimeclass CloudPCHostService
                {
                    [default] [experimental] interface Windows.System.RemoteDesktop.Provider.ICloudPCHostService;
                    interface Windows.Foundation.IClosable;
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [marshaling_behavior(agile)]
                [static(Windows.System.RemoteDesktop.Provider.IRemoteDesktopConnectionInfoStatics, Windows.Foundation.UniversalApiContract, 15.0)]
                [threading(both)]
                runtimeclass RemoteDesktopConnectionInfo
                {
                    [default] interface Windows.System.RemoteDesktop.Provider.IRemoteDesktopConnectionInfo;
                    [contract(Windows.Foundation.UniversalApiContract, 15.0)] [experimental] interface Windows.System.RemoteDesktop.Provider.IRemoteDesktopConnectionInfo2;
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [marshaling_behavior(agile)]
                [static(Windows.System.RemoteDesktop.Provider.IRemoteDesktopConnectionRemoteInfoStatics, Windows.Foundation.UniversalApiContract, 15.0)]
                [threading(both)]
                runtimeclass RemoteDesktopConnectionRemoteInfo
                {
                    [default] interface Windows.System.RemoteDesktop.Provider.IRemoteDesktopConnectionRemoteInfo;
                    interface Windows.Foundation.IClosable;
                }

                [activatable(Windows.System.RemoteDesktop.Provider.IRemoteDesktopInfoFactory, Windows.Foundation.UniversalApiContract, 15.0)]
                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RemoteDesktopInfo
                {
                    [default] interface Windows.System.RemoteDesktop.Provider.IRemoteDesktopInfo;
                }

                [contract(Windows.Foundation.UniversalApiContract, 15.0)]
                [marshaling_behavior(agile)]
                [static(Windows.System.RemoteDesktop.Provider.IRemoteDesktopRegistrarStatics, Windows.Foundation.UniversalApiContract, 15.0)]
                [threading(both)]
                runtimeclass RemoteDesktopRegistrar
                {
                }
            }
        }
    }
}
