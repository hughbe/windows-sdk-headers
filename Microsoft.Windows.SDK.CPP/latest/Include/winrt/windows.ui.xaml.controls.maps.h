/* Header file automatically generated from windows.ui.xaml.controls.maps.idl */
/*
 * File built with Microsoft(R) MIDLRT Compiler Engine Version 10.00.0226 
 */

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __windows2Eui2Examl2Econtrols2Emaps_h__
#define __windows2Eui2Examl2Econtrols2Emaps_h__
#ifndef __windows2Eui2Examl2Econtrols2Emaps_p_h__
#define __windows2Eui2Examl2Econtrols2Emaps_p_h__


#pragma once

//
// Deprecated attribute support
//

#pragma push_macro("DEPRECATED")
#undef DEPRECATED

#if !defined(DISABLE_WINRT_DEPRECATION)
#if defined(__cplusplus)
#if __cplusplus >= 201402
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#elif defined(_MSC_VER)
#if _MSC_VER >= 1900
#define DEPRECATED(x) [[deprecated(x)]]
#define DEPRECATEDENUMERATOR(x) [[deprecated(x)]]
#else
#define DEPRECATED(x) __declspec(deprecated(x))
#define DEPRECATEDENUMERATOR(x)
#endif // _MSC_VER >= 1900
#else // Not Standard C++ or MSVC, ignore the construct.
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  // C++ deprecation
#else // C - disable deprecation
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif
#else // Deprecation is disabled
#define DEPRECATED(x)
#define DEPRECATEDENUMERATOR(x)
#endif  /* DEPRECATED */

// Disable Deprecation for this header, MIDL verifies that cross-type access is acceptable
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#else
#pragma warning(push)
#pragma warning(disable: 4996)
#endif

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "always"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION 0x50000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION)
#define WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION)
#define WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION)
#define WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION 0x60000
#endif // defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION)
#define WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0x80000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION)
#define WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION)

#if !defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)
#define WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION)
#define WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION)

#if !defined(WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION)
#define WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION)

#if !defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)
#define WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)
#define WINDOWS_PHONE_PHONECONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)
#define WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)

#if !defined(WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION)
#define WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION 0x50000
#endif // defined(WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION)

#if !defined(WINDOWS_SERVICES_MAPS_GUIDANCECONTRACT_VERSION)
#define WINDOWS_SERVICES_MAPS_GUIDANCECONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_SERVICES_MAPS_GUIDANCECONTRACT_VERSION)

#if !defined(WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION)
#define WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION)

#if !defined(WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION)
#define WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION)

#if !defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)
#define WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION 0x60000
#endif // defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)

#if !defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)
#define WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)

#if !defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)
#define WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)

#if !defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)
#define WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Windows.Devices.Geolocation.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Services.Maps.h"
#include "Windows.Services.Maps.LocalSearch.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Controls.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface ICustomMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface ICustomMapTileDataSourceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSourceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IHttpMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IHttpMapTileDataSourceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSourceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface ILocalMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface ILocalMapTileDataSourceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSourceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapActualCameraChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapActualCameraChangedEventArgs2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangedEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapActualCameraChangingEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangingEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapActualCameraChangingEventArgs2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangingEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapBillboard;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard ABI::Windows::UI::Xaml::Controls::Maps::IMapBillboard

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapBillboardFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapBillboardFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapBillboardStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapBillboardStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapCamera;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapCameraFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapCameraFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapContextRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapContextRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl ABI::Windows::UI::Xaml::Controls::Maps::IMapControl

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl3;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl3

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl4;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl4

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl5;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl5

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl6;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl6

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl7;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl7

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControl8;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 ABI::Windows::UI::Xaml::Controls::Maps::IMapControl8

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlBusinessLandmarkClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkClickEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlBusinessLandmarkPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerEnteredEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlBusinessLandmarkPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerExitedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlBusinessLandmarkRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkRightTappedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlDataHelper;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper ABI::Windows::UI::Xaml::Controls::Maps::IMapControlDataHelper

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlDataHelper2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlDataHelper2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlDataHelperFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapControlDataHelperFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlDataHelperStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapControlDataHelperStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics4;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics4

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics5;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics5

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics6;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics6

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics7;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics7

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlStatics8;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 ABI::Windows::UI::Xaml::Controls::Maps::IMapControlStatics8

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlTransitFeatureClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureClickEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlTransitFeaturePointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerEnteredEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlTransitFeaturePointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerExitedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapControlTransitFeatureRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureRightTappedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapCustomExperience;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperience

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapCustomExperienceChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperienceChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapCustomExperienceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperienceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement ABI::Windows::UI::Xaml::Controls::Maps::IMapElement

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 ABI::Windows::UI::Xaml::Controls::Maps::IMapElement2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement3;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 ABI::Windows::UI::Xaml::Controls::Maps::IMapElement3

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement3D;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D ABI::Windows::UI::Xaml::Controls::Maps::IMapElement3D

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement3DStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapElement3DStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElement4;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 ABI::Windows::UI::Xaml::Controls::Maps::IMapElement4

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementClickEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapElementFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerEnteredEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerExitedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapElementStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementStatics2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 ABI::Windows::UI::Xaml::Controls::Maps::IMapElementStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementStatics3;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 ABI::Windows::UI::Xaml::Controls::Maps::IMapElementStatics3

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementStatics4;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 ABI::Windows::UI::Xaml::Controls::Maps::IMapElementStatics4

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayer;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayerClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerClickEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayerContextRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerContextRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayerPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerEnteredEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayerPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerExitedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapElementsLayerStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapIcon;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon ABI::Windows::UI::Xaml::Controls::Maps::IMapIcon

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapIcon2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 ABI::Windows::UI::Xaml::Controls::Maps::IMapIcon2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapIconStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapIconStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapIconStatics2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 ABI::Windows::UI::Xaml::Controls::Maps::IMapIconStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapInputEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapInputEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapItemsControl;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl ABI::Windows::UI::Xaml::Controls::Maps::IMapItemsControl

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapItemsControlStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapItemsControlStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapLayer;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapLayerFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapLayerFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapLayerStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapLayerStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapModel3D;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapModel3DFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3DFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapModel3DStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3DStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapPolygon;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon ABI::Windows::UI::Xaml::Controls::Maps::IMapPolygon

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapPolygon2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 ABI::Windows::UI::Xaml::Controls::Maps::IMapPolygon2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapPolygonStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapPolygonStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapPolyline;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline ABI::Windows::UI::Xaml::Controls::Maps::IMapPolyline

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapPolylineStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapPolylineStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapRightTappedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapRouteView;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapRouteViewFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteViewFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapScene;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene ABI::Windows::UI::Xaml::Controls::Maps::IMapScene

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapSceneStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapSceneStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapStyleSheet;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapStyleSheetEntriesStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheetEntriesStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapStyleSheetEntryStatesStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheetEntryStatesStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapStyleSheetStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheetStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTargetCameraChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTargetCameraChangedEventArgs2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileBitmapRequest;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequest

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileBitmapRequestDeferral;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestDeferral

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileBitmapRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileBitmapRequestedEventArgs2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestedEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileDataSourceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSourceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileSource2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileSourceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSourceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileSourceStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSourceStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileSourceStatics2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSourceStatics2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileUriRequest;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequest

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileUriRequestDeferral;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestDeferral

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileUriRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IMapTileUriRequestedEventArgs2;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs2

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IStreetsideExperience;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience ABI::Windows::UI::Xaml::Controls::Maps::IStreetsideExperience

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IStreetsideExperienceFactory;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory ABI::Windows::UI::Xaml::Controls::Maps::IStreetsideExperienceFactory

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IStreetsidePanorama;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        interface IStreetsidePanoramaStatics;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanoramaStatics

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElement;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f916b428-3b74-5ad4-9d97-1b0a387aecb5"))
IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.MapElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t;
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("81d25c25-a4b3-5d0d-92ab-26360c2a7fac"))
IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.MapElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t;
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapLayer;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af2283ff-250e-56d1-96d4-9f78e164cbc6"))
IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.MapLayer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t;
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("508e2ce9-1984-5fc8-a491-62e8889539f4"))
IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.MapLayer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t;
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapRouteView;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af256095-4144-55a7-9139-89843b572db7"))
IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*, ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.MapRouteView>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t;
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("090ad4b3-8fce-502d-8665-18650c51bea9"))
IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*, ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.MapRouteView>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t;
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapStyleSheet;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e6c727e5-6a18-5333-aa6a-266e8c8bdd51"))
IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*, ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.MapStyleSheet>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t;
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05483d88-841c-5a0e-b9c7-5d828d9f2aff"))
IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*, ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.MapStyleSheet>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapStyleSheet*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t;
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e5c7eba6-7c75-50bc-8b36-2d8ca1fa538b"))
IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Maps.MapTileSource>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t;
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
//#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6d8a73f7-abd7-56c4-99a7-06c1fa77dcd2"))
IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Maps.MapTileSource>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t;
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
//#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cec120d8-ea73-5aa3-914a-37dd2554f686"))
IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.MapElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("963326b9-6770-52f1-b6c6-519441f873c3"))
IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.MapLayer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bdbb45ea-0c73-56bc-a375-3f2a7beb6f2e"))
IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*, ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.MapRouteView>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("de7aa182-8e17-5565-9a9d-94a4ff25364a"))
IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Maps.MapTileSource>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
//#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("02773f2d-bb17-56fd-96cc-89f1c47f9e11"))
IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.MapElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapElement*> __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t;
#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("62782500-a9cc-57f1-b81b-6ebcc9212245"))
IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.MapLayer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapLayer*> __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t;
#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8ce513b4-0a7d-5553-b735-79cd5a7fee3f"))
IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*, ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.MapRouteView>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapRouteView*> __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t;
#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("19f78a46-2c65-5f94-bf5b-963347a0a318"))
IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Controls.Maps.MapTileSource>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::Controls::Maps::MapTileSource*> __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t;
#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
//#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapModel3D;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("60ef194b-dbe0-5911-b725-ecc5de298782"))
IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*, ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.MapModel3D>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*> __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D ABI::Windows::Foundation::IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>
//#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t ABI::Windows::Foundation::IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE
#define DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0cf0240f-7f78-535b-850c-fe6231759064"))
IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*, ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.MapModel3D>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::MapModel3D*> __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t;
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>
//#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_t ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class StreetsidePanorama;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f6f3b17c-4527-5528-86aa-1cf1fb78a5eb"))
IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*, ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.UI.Xaml.Controls.Maps.StreetsidePanorama>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*> __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama ABI::Windows::Foundation::IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>
//#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t ABI::Windows::Foundation::IAsyncOperationCompletedHandler<ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE
#define DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6ad8ea47-6670-51d8-a1db-33fe75491f0c"))
IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*, ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IAsyncOperation`1<Windows.UI.Xaml.Controls.Maps.StreetsidePanorama>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::StreetsidePanorama*> __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t;
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>
//#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_t ABI::Windows::Foundation::IAsyncOperation<ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class CustomMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileBitmapRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8d2d9655-2f82-5271-9e95-a2db39d872f0"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::CustomMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileBitmapRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::CustomMapTileDataSource*, ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileBitmapRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource, Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::CustomMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileBitmapRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class HttpMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileUriRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4933a19a-00cc-5c21-a3df-b68f9939f6ef"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::HttpMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::HttpMapTileDataSource*, ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource, Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::HttpMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class LocalMapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("76752fc4-b240-502c-9098-622c6c36e6a3"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::LocalMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::LocalMapTileDataSource*, ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource, Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::LocalMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::MapTileUriRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControl;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f250dd93-e636-51ef-bc93-ee78d431a6bd"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,IInspectable*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,IInspectable*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapActualCameraChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("1b536ae0-08b0-5c54-bb30-679e6a875d61"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapActualCameraChangingEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("78bfb71b-2d80-50e1-a2e9-e5667ff89ef2"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangingEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangingEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapActualCameraChangingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangingEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapActualCameraChangingEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapContextRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e5239641-ba1f-5d89-aae1-c7b499a47b0c"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapContextRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapContextRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapContextRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapContextRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapContextRequestedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapContextRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlBusinessLandmarkClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3a9d75c2-a41b-5708-8c1b-8e7c26e857d0"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkClickEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkClickEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkClickEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkClickEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkClickEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkClickEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlBusinessLandmarkPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("fd7dabea-0014-5a30-9a59-bd4126a2ffb7"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerEnteredEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerEnteredEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerEnteredEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerEnteredEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerEnteredEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerEnteredEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlBusinessLandmarkPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c4574b81-a192-5810-b0d9-cc99230fdcdc"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerExitedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerExitedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerExitedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkPointerExitedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerExitedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkPointerExitedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlBusinessLandmarkRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e3634a54-05ed-5e39-9d8a-03857f0ba0e7"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkRightTappedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkRightTappedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkRightTappedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlBusinessLandmarkRightTappedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkRightTappedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlBusinessLandmarkRightTappedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlTransitFeatureClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3ec75af0-1679-53ff-bb0c-376b8c441980"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureClickEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureClickEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureClickEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureClickEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureClickEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureClickEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlTransitFeaturePointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("166ea60b-ab70-580c-bb70-2f79ee214cea"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerEnteredEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerEnteredEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerEnteredEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerEnteredEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerEnteredEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerEnteredEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlTransitFeaturePointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("7553fcf8-a4c2-5cc1-9a3c-f0b36b756068"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerExitedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerExitedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerExitedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeaturePointerExitedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerExitedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeaturePointerExitedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlTransitFeatureRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a18b47d7-6326-5fc1-8a40-88af91bb0589"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureRightTappedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureRightTappedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureRightTappedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapControlTransitFeatureRightTappedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureRightTappedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapControlTransitFeatureRightTappedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapCustomExperienceChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("272cf26f-18da-599e-896f-3bfbf6fb1326"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapCustomExperienceChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapCustomExperienceChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperienceChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapCustomExperienceChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperienceChangedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperienceChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4c7821a1-d570-597d-acc7-068853c4ab27"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementClickEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementClickEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementClickEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementClickEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementClickEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementClickEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ca2638e5-7c33-5b90-9b66-273731fc7091"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerEnteredEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerEnteredEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerEnteredEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerEnteredEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerEnteredEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerEnteredEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("f6a7bfd1-2c79-5191-b382-75b141d18846"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerExitedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerExitedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerExitedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementPointerExitedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerExitedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementPointerExitedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapInputEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b92f6816-4d0a-52c2-9868-94b5c942007e"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapInputEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapInputEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapInputEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapInputEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapInputEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapInputEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapRightTappedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("efc52f2d-ad6b-59af-a0f0-2253d434414f"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapRightTappedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapRightTappedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapRightTappedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapRightTappedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapRightTappedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapRightTappedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTargetCameraChangedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2671c2dd-e212-5e43-80e2-ab6ff3f3086c"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*, ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapControl, Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapControl*,ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapControl*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementsLayer;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementsLayerClickEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d3ee3faa-6a6f-576a-9900-528e8eba9286"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerClickEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerClickEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerClickEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapElementsLayer, Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerClickEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerClickEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerClickEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementsLayerContextRequestedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d4c7eced-5053-5d3c-8cfa-fb19dbde4a3a"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerContextRequestedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerContextRequestedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerContextRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapElementsLayer, Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerContextRequestedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerContextRequestedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerContextRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementsLayerPointerEnteredEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3622cf53-117c-5605-b142-fe47d874e26b"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerEnteredEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerEnteredEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerEnteredEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapElementsLayer, Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerEnteredEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerEnteredEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerEnteredEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElementsLayerPointerExitedEventArgs;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d54471d2-03dd-5698-a92f-5fac8a5e7668"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerExitedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerExitedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerExitedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapElementsLayer, Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::MapElementsLayerPointerExitedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerExitedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayer*,ABI::Windows::UI::Xaml::Controls::Maps::IMapElementsLayerPointerExitedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapScene;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("766ed4a8-e810-5f78-bc96-9aff9f58cfca"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapScene*,ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapScene*, ABI::Windows::UI::Xaml::Controls::Maps::IMapScene*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*, ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.Maps.MapScene, Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::MapScene*,ABI::Windows::UI::Xaml::Controls::Maps::MapTargetCameraChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t;
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapScene*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>
//#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_t ABI::Windows::Foundation::ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::Maps::IMapScene*,ABI::Windows::UI::Xaml::Controls::Maps::IMapTargetCameraChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#ifndef DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60310303-49c5-52e6-abc6-a9b36eccc716"))
IKeyValuePair<HSTRING,HSTRING> : IKeyValuePair_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING,HSTRING> __FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>
//#define __FIKeyValuePair_2_HSTRING_HSTRING_t ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE */





#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05eb86f1-7140-5517-b88d-cbaebe57e6b1"))
IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */





#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e9bdaaf0-cbf6-5c72-be90-29cbf3a1319b"))
IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */




#ifndef DEF___FIMapView_2_HSTRING_HSTRING_USE
#define DEF___FIMapView_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ac7f26f2-feb7-5b2a-8ac4-345bc62caede"))
IMapView<HSTRING,HSTRING> : IMapView_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING,HSTRING> __FIMapView_2_HSTRING_HSTRING_t;
#define __FIMapView_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::IMapView<HSTRING,HSTRING>
//#define __FIMapView_2_HSTRING_HSTRING_t ABI::Windows::Foundation::Collections::IMapView<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_HSTRING_USE */




#ifndef DEF___FIMap_2_HSTRING_HSTRING_USE
#define DEF___FIMap_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6d1f700-49c2-52ae-8154-826f9908773c"))
IMap<HSTRING,HSTRING> : IMap_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMap`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING,HSTRING> __FIMap_2_HSTRING_HSTRING_t;
#define __FIMap_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMap_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::IMap<HSTRING,HSTRING>
//#define __FIMap_2_HSTRING_HSTRING_t ABI::Windows::Foundation::Collections::IMap<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_HSTRING_USE */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject ABI::Windows::UI::Xaml::IDependencyObject

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("29f8d454-905d-587e-b9d8-bfd418805a65"))
IIterator<ABI::Windows::UI::Xaml::DependencyObject*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::IDependencyObject*>
//#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f66c6bd3-55b4-5bbb-b82a-6d9ce383091a"))
IIterable<ABI::Windows::UI::Xaml::DependencyObject*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::IDependencyObject*>
//#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe750d77-1307-5df2-a021-1c7a8d6b80ad"))
IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::IDependencyObject*>
//#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("771b857e-ab5c-5db8-a021-397c92cdc44c"))
IVector<ABI::Windows::UI::Xaml::DependencyObject*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::UI::Xaml::DependencyObject*> __FIVector_1_Windows__CUI__CXaml__CDependencyObject_t;
#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::IDependencyObject*>
//#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                struct Thickness;
                
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


#ifndef DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE
#define DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a19f7ba8-d8cd-5df2-ab44-fefd26644484"))
IReference<struct ABI::Windows::UI::Xaml::Thickness> : IReference_impl<struct ABI::Windows::UI::Xaml::Thickness> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Windows.UI.Xaml.Thickness>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct ABI::Windows::UI::Xaml::Thickness> __FIReference_1_Windows__CUI__CXaml__CThickness_t;
#define __FIReference_1_Windows__CUI__CXaml__CThickness ABI::Windows::Foundation::__FIReference_1_Windows__CUI__CXaml__CThickness_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_Windows__CUI__CXaml__CThickness ABI::Windows::Foundation::IReference<ABI::Windows::UI::Xaml::Thickness>
//#define __FIReference_1_Windows__CUI__CXaml__CThickness_t ABI::Windows::Foundation::IReference<ABI::Windows::UI::Xaml::Thickness>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE */




#ifndef DEF___FIAsyncOperationCompletedHandler_1_boolean_USE
#define DEF___FIAsyncOperationCompletedHandler_1_boolean_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c1d3d1a2-ae17-5a5f-b5a2-bdcc8844889a"))
IAsyncOperationCompletedHandler<bool> : IAsyncOperationCompletedHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<bool, boolean>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Boolean>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<bool> __FIAsyncOperationCompletedHandler_1_boolean_t;
#define __FIAsyncOperationCompletedHandler_1_boolean ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_boolean_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperationCompletedHandler_1_boolean ABI::Windows::Foundation::IAsyncOperationCompletedHandler<boolean>
//#define __FIAsyncOperationCompletedHandler_1_boolean_t ABI::Windows::Foundation::IAsyncOperationCompletedHandler<boolean>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_boolean_USE */




#ifndef DEF___FIAsyncOperation_1_boolean_USE
#define DEF___FIAsyncOperation_1_boolean_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("cdb5efb3-5788-509d-9be1-71ccb8a3362a"))
IAsyncOperation<bool> : IAsyncOperation_impl<ABI::Windows::Foundation::Internal::AggregateType<bool, boolean>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IAsyncOperation`1<Boolean>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<bool> __FIAsyncOperation_1_boolean_t;
#define __FIAsyncOperation_1_boolean ABI::Windows::Foundation::__FIAsyncOperation_1_boolean_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperation_1_boolean ABI::Windows::Foundation::IAsyncOperation<boolean>
//#define __FIAsyncOperation_1_boolean_t ABI::Windows::Foundation::IAsyncOperation<boolean>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_boolean_USE */




#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Double>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<double> __FIReference_1_double_t;
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t
/* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_double ABI::Windows::Foundation::IReference<DOUBLE>
//#define __FIReference_1_double_t ABI::Windows::Foundation::IReference<DOUBLE>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_double_USE */



namespace ABI {
    namespace Windows {
        namespace Services {
            namespace Maps {
                namespace LocalSearch {
                    class LocalLocation;
                } /* LocalSearch */
            } /* Maps */
        } /* Services */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Services {
            namespace Maps {
                namespace LocalSearch {
                    interface ILocalLocation;
                } /* LocalSearch */
            } /* Maps */
        } /* Services */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation ABI::Windows::Services::Maps::LocalSearch::ILocalLocation

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#define DEF___FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a23c2e87-a8e7-568f-96a1-69e98f86b9d3"))
IIterator<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*, ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Services.Maps.LocalSearch.LocalLocation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t;
#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
//#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE */


#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#define DEF___FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5474eefb-60f4-58ac-89e2-6e83f79fa76c"))
IIterable<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*, ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Services.Maps.LocalSearch.LocalLocation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t;
#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
//#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE */


#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#define DEF___FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("619192f2-4f9d-5629-ab01-b18512503d73"))
IVectorView<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*, ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Services.Maps.LocalSearch.LocalLocation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Services::Maps::LocalSearch::LocalLocation*> __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t;
#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
//#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::Services::Maps::LocalSearch::ILocalLocation*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_USE */


#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000



#ifndef DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("09335560-6c6b-5a26-9348-97b781132b20"))
IKeyValuePair<HSTRING,IInspectable*> : IKeyValuePair_impl<HSTRING,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING,IInspectable*> __FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>
//#define __FIKeyValuePair_2_HSTRING_IInspectable_t ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_IInspectable_USE */





#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5db5fa32-707c-5849-a06b-91c8eb9d10e8"))
IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>*>
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */





#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe2f3d47-5d47-5499-8374-430c7cda0204"))
IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_IInspectable*> __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>*>
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IKeyValuePair<HSTRING,IInspectable*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_USE */





#ifndef DEF___FIMapView_2_HSTRING_IInspectable_USE
#define DEF___FIMapView_2_HSTRING_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb78502a-f79d-54fa-92c9-90c5039fdf7e"))
IMapView<HSTRING,IInspectable*> : IMapView_impl<HSTRING,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING,IInspectable*> __FIMapView_2_HSTRING_IInspectable_t;
#define __FIMapView_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_HSTRING_IInspectable ABI::Windows::Foundation::Collections::IMapView<HSTRING,IInspectable*>
//#define __FIMapView_2_HSTRING_IInspectable_t ABI::Windows::Foundation::Collections::IMapView<HSTRING,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_IInspectable_USE */



namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                class Geopath;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                interface IGeopath;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath ABI::Windows::Devices::Geolocation::IGeopath

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_USE
#define DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cf1d4402-4754-57e7-aae0-69ca42cbd8f2"))
IIterator<ABI::Windows::Devices::Geolocation::Geopath*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopath*, ABI::Windows::Devices::Geolocation::IGeopath*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Devices.Geolocation.Geopath>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Devices::Geolocation::Geopath*> __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_t;
#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Devices::Geolocation::IGeopath*>
//#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Devices::Geolocation::IGeopath*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_USE
#define DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("246fcfbd-a881-5e8e-9908-c1b9ebdfec78"))
IIterable<ABI::Windows::Devices::Geolocation::Geopath*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopath*, ABI::Windows::Devices::Geolocation::IGeopath*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Devices.Geolocation.Geopath>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Devices::Geolocation::Geopath*> __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_t;
#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Devices::Geolocation::IGeopath*>
//#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Devices::Geolocation::IGeopath*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_USE
#define DEF___FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a83321cb-1b54-5f68-9234-4a824d33e371"))
IVectorView<ABI::Windows::Devices::Geolocation::Geopath*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopath*, ABI::Windows::Devices::Geolocation::IGeopath*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Windows.Devices.Geolocation.Geopath>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<ABI::Windows::Devices::Geolocation::Geopath*> __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_t;
#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::Devices::Geolocation::IGeopath*>
//#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_t ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::Devices::Geolocation::IGeopath*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Windows__CDevices__CGeolocation__CGeopath_USE
#define DEF___FIVector_1_Windows__CDevices__CGeolocation__CGeopath_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7ca97e6d-6893-5672-a0c7-625c5090381e"))
IVector<ABI::Windows::Devices::Geolocation::Geopath*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopath*, ABI::Windows::Devices::Geolocation::IGeopath*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Windows.Devices.Geolocation.Geopath>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<ABI::Windows::Devices::Geolocation::Geopath*> __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_t;
#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CDevices__CGeolocation__CGeopath_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath ABI::Windows::Foundation::Collections::IVector<ABI::Windows::Devices::Geolocation::IGeopath*>
//#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_t ABI::Windows::Foundation::Collections::IVector<ABI::Windows::Devices::Geolocation::IGeopath*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Windows__CDevices__CGeolocation__CGeopath_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                class Geopoint;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                interface IGeopoint;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint ABI::Windows::Devices::Geolocation::IGeopoint

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_USE
#define DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("88225b39-8be9-5c03-9714-8f1642d8a43f"))
IIterator<ABI::Windows::Devices::Geolocation::Geopoint*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopoint*, ABI::Windows::Devices::Geolocation::IGeopoint*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Devices.Geolocation.Geopoint>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<ABI::Windows::Devices::Geolocation::Geopoint*> __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_t;
#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Devices::Geolocation::IGeopoint*>
//#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_t ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Devices::Geolocation::IGeopoint*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_USE
#define DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e7617fc9-2cc7-5bd1-bc5a-f47260834ed8"))
IIterable<ABI::Windows::Devices::Geolocation::Geopoint*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Devices::Geolocation::Geopoint*, ABI::Windows::Devices::Geolocation::IGeopoint*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Devices.Geolocation.Geopoint>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<ABI::Windows::Devices::Geolocation::Geopoint*> __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_t;
#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } /* ABI */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Devices::Geolocation::IGeopoint*>
//#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_t ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Devices::Geolocation::IGeopoint*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_USE */


#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                
                typedef enum AltitudeReferenceSystem : int AltitudeReferenceSystem;
                
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                class GeoboundingBox;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Devices {
            namespace Geolocation {
                interface IGeoboundingBox;
            } /* Geolocation */
        } /* Devices */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox ABI::Windows::Devices::Geolocation::IGeoboundingBox

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__







namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Numerics {
                
                typedef struct Vector3 Vector3;
                
            } /* Numerics */
        } /* Foundation */
    } /* Windows */} /* ABI */




namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* Foundation */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* Foundation */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace Foundation {
            class Uri;
        } /* Foundation */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Foundation {
            interface IUriRuntimeClass;
        } /* Foundation */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CFoundation_CIUriRuntimeClass ABI::Windows::Foundation::IUriRuntimeClass

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__










namespace ABI {
    namespace Windows {
        namespace Services {
            namespace Maps {
                class MapRoute;
            } /* Maps */
        } /* Services */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Services {
            namespace Maps {
                interface IMapRoute;
            } /* Maps */
        } /* Services */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CServices_CMaps_CIMapRoute ABI::Windows::Services::Maps::IMapRoute

#endif // ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__





#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace Storage {
            namespace Streams {
                interface IRandomAccessStreamReference;
            } /* Streams */
        } /* Storage */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference ABI::Windows::Storage::Streams::IRandomAccessStreamReference

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__





namespace ABI {
    namespace Windows {
        namespace UI {
            
            typedef struct Color Color;
            
        } /* UI */
    } /* Windows */} /* ABI */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DataTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplate;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate ABI::Windows::UI::Xaml::IDataTemplate

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                class DependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyProperty;
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty ABI::Windows::UI::Xaml::IDependencyProperty

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Thickness Thickness;
                
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */




namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapAnimationKind : int MapAnimationKind;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapCameraChangeReason : int MapCameraChangeReason;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapColorScheme : int MapColorScheme;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapElementCollisionBehavior : int MapElementCollisionBehavior;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapInteractionMode : int MapInteractionMode;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapLoadingStatus : int MapLoadingStatus;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapModel3DShadingOption : int MapModel3DShadingOption;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapPanInteractionMode : int MapPanInteractionMode;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapProjection : int MapProjection;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapStyle : int MapStyle;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapTileAnimationState : int MapTileAnimationState;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapTileLayer : int MapTileLayer;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapVisibleRegionKind : int MapVisibleRegionKind;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef enum MapWatermarkMode : int MapWatermarkMode;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        
                        typedef struct MapZoomLevelRange MapZoomLevelRange;
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
























































































































namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapBillboard;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapCamera;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */








namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapControlDataHelper;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */






namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapCustomExperience;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */




namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapElement3D;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */










namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapIcon;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapItemsControl;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */




namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapPolygon;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapPolyline;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */









namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileBitmapRequest;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileBitmapRequestDeferral;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileDataSource;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileUriRequest;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */


namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class MapTileUriRequestDeferral;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */



namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        class StreetsideExperience;
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */















/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapAnimationKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapAnimationKind : int
                        {
                            MapAnimationKind_Default = 0,
                            MapAnimationKind_None = 1,
                            MapAnimationKind_Linear = 2,
                            MapAnimationKind_Bow = 3,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapCameraChangeReason : int
                        {
                            MapCameraChangeReason_System = 0,
                            MapCameraChangeReason_UserInteraction = 1,
                            MapCameraChangeReason_Programmatic = 2,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapColorScheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapColorScheme : int
                        {
                            MapColorScheme_Light = 0,
                            MapColorScheme_Dark = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapElementCollisionBehavior : int
                        {
                            MapElementCollisionBehavior_Hide = 0,
                            MapElementCollisionBehavior_RemainVisible = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapInteractionMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapInteractionMode : int
                        {
                            MapInteractionMode_Auto = 0,
                            MapInteractionMode_Disabled = 1,
                            MapInteractionMode_GestureOnly = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
                            MapInteractionMode_PointerAndKeyboard = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
                            MapInteractionMode_ControlOnly = 3,
                            MapInteractionMode_GestureAndControl = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
                            MapInteractionMode_PointerKeyboardAndControl = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
                            MapInteractionMode_PointerOnly = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
                            
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapLoadingStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapLoadingStatus : int
                        {
                            MapLoadingStatus_Loading = 0,
                            MapLoadingStatus_Loaded = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
                            
                            MapLoadingStatus_DataUnavailable = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
                            
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                            
                            MapLoadingStatus_DownloadedMapsManagerUnavailable = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
                            
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapModel3DShadingOption
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapModel3DShadingOption : int
                        {
                            MapModel3DShadingOption_Default = 0,
                            MapModel3DShadingOption_Flat = 1,
                            MapModel3DShadingOption_Smooth = 2,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapPanInteractionMode : int
                        {
                            MapPanInteractionMode_Auto = 0,
                            MapPanInteractionMode_Disabled = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapProjection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapProjection : int
                        {
                            MapProjection_WebMercator = 0,
                            MapProjection_Globe = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapStyle : int
                        {
                            MapStyle_None = 0,
                            MapStyle_Road = 1,
                            MapStyle_Aerial = 2,
                            MapStyle_AerialWithRoads = 3,
                            MapStyle_Terrain = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                            
                            MapStyle_Aerial3D = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                            
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                            
                            MapStyle_Aerial3DWithRoads = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
                            
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
                            
                            MapStyle_Custom = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
                            
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapTileAnimationState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapTileAnimationState : int
                        {
                            MapTileAnimationState_Stopped = 0,
                            MapTileAnimationState_Paused = 1,
                            MapTileAnimationState_Playing = 2,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapTileLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapTileLayer : int
                        {
                            MapTileLayer_LabelOverlay = 0,
                            MapTileLayer_RoadOverlay = 1,
                            MapTileLayer_AreaOverlay = 2,
                            MapTileLayer_BackgroundOverlay = 3,
                            MapTileLayer_BackgroundReplacement = 4,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapVisibleRegionKind : int
                        {
                            MapVisibleRegionKind_Near = 0,
                            MapVisibleRegionKind_Full = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapWatermarkMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [v1_enum, contract] */
                        enum MapWatermarkMode : int
                        {
                            MapWatermarkMode_Automatic = 0,
                            MapWatermarkMode_On = 1,
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [contract] */
                        struct MapZoomLevelRange
                        {
                            DOUBLE Min;
                            DOUBLE Max;
                        };
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ICustomMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("65DA384A-2DB1-4BE1-B155-3D0C9ECF4799"), exclusiveto, contract] */
                        MIDL_INTERFACE("65DA384A-2DB1-4BE1-B155-3D0C9ECF4799")
                        ICustomMapTileDataSource : public IInspectable
                        {
                        public:
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BitmapRequested(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BitmapRequested(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_ICustomMapTileDataSource=_uuidof(ICustomMapTileDataSource);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ICustomMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C8477947-C955-4F22-9444-A1D8D744AF11"), exclusiveto, contract] */
                        MIDL_INTERFACE("C8477947-C955-4F22-9444-A1D8D744AF11")
                        ICustomMapTileDataSourceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::ICustomMapTileDataSource * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_ICustomMapTileDataSourceFactory=_uuidof(ICustomMapTileDataSourceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IHttpMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("9D03CB5C-FD79-4795-87BE-7E54CA0B37D0"), exclusiveto, contract] */
                        MIDL_INTERFACE("9D03CB5C-FD79-4795-87BE-7E54CA0B37D0")
                        IHttpMapTileDataSource : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UriFormatString(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_UriFormatString(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AdditionalRequestHeaders(
                                /* [retval, out] */__RPC__deref_out_opt __FIMap_2_HSTRING_HSTRING * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowCaching(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowCaching(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_UriRequested(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_UriRequested(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IHttpMapTileDataSource=_uuidof(IHttpMapTileDataSource);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IHttpMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("53B4B107-84DC-4291-89F8-6D0BB612A055"), exclusiveto, contract] */
                        MIDL_INTERFACE("53B4B107-84DC-4291-89F8-6D0BB612A055")
                        IHttpMapTileDataSourceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithUriFormatString(
                                /* [in] */__RPC__in HSTRING uriFormatString,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IHttpMapTileDataSource * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IHttpMapTileDataSourceFactory=_uuidof(IHttpMapTileDataSourceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ILocalMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("616257B5-9108-4F12-8BF4-BB3C8F6274E5"), exclusiveto, contract] */
                        MIDL_INTERFACE("616257B5-9108-4F12-8BF4-BB3C8F6274E5")
                        ILocalMapTileDataSource : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UriFormatString(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_UriFormatString(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_UriRequested(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_UriRequested(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_ILocalMapTileDataSource=_uuidof(ILocalMapTileDataSource);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ILocalMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C5CFE9FC-72AC-4839-8A0D-011F24693C79"), exclusiveto, contract] */
                        MIDL_INTERFACE("C5CFE9FC-72AC-4839-8A0D-011F24693C79")
                        ILocalMapTileDataSourceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithUriFormatString(
                                /* [in] */__RPC__in HSTRING uriFormatString,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::ILocalMapTileDataSource * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_ILocalMapTileDataSourceFactory=_uuidof(ILocalMapTileDataSourceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DAA080DA-B7F4-422C-A618-BBAA7C1D814C"), exclusiveto, contract] */
                        MIDL_INTERFACE("DAA080DA-B7F4-422C-A618-BBAA7C1D814C")
                        IMapActualCameraChangedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Camera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapActualCameraChangedEventArgs=_uuidof(IMapActualCameraChangedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("7BA4C7E5-10DC-455A-9D04-1D72FB6D9B93"), exclusiveto, contract] */
                        MIDL_INTERFACE("7BA4C7E5-10DC-455A-9D04-1D72FB6D9B93")
                        IMapActualCameraChangedEventArgs2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChangeReason(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapCameraChangeReason * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapActualCameraChangedEventArgs2=_uuidof(IMapActualCameraChangedEventArgs2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangingEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6B0DBED6-93F7-4682-8DE5-A47A1CC7A945"), exclusiveto, contract] */
                        MIDL_INTERFACE("6B0DBED6-93F7-4682-8DE5-A47A1CC7A945")
                        IMapActualCameraChangingEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Camera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapActualCameraChangingEventArgs=_uuidof(IMapActualCameraChangingEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangingEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("F2867897-40AC-4E8A-A927-510F3846A47E"), exclusiveto, contract] */
                        MIDL_INTERFACE("F2867897-40AC-4E8A-A927-510F3846A47E")
                        IMapActualCameraChangingEventArgs2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChangeReason(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapCameraChangeReason * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapActualCameraChangingEventArgs2=_uuidof(IMapActualCameraChangingEventArgs2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboard
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboard[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboard";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("1694259D-0AE2-4F42-A02E-292CA835D39D"), exclusiveto, contract] */
                        MIDL_INTERFACE("1694259D-0AE2-4F42-A02E-292CA835D39D")
                        IMapBillboard : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Location(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NormalizedAnchorPoint(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_NormalizedAnchorPoint(
                                /* [in] */ABI::Windows::Foundation::Point value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Image(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Image(
                                /* [in] */__RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CollisionBehaviorDesired(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapElementCollisionBehavior * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CollisionBehaviorDesired(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapElementCollisionBehavior value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ReferenceCamera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapBillboard=_uuidof(IMapBillboard);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboardFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("BE45A4C5-8F09-4B86-AE28-783740EB8B31"), exclusiveto, contract] */
                        MIDL_INTERFACE("BE45A4C5-8F09-4B86-AE28-783740EB8B31")
                        IMapBillboardFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceFromCamera(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * camera,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapBillboard * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapBillboardFactory=_uuidof(IMapBillboardFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboardStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FDF839FE-E1F7-4FB0-8887-7DA68C647333"), exclusiveto, contract] */
                        MIDL_INTERFACE("FDF839FE-E1F7-4FB0-8887-7DA68C647333")
                        IMapBillboardStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocationProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NormalizedAnchorPointProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CollisionBehaviorDesiredProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapBillboardStatics=_uuidof(IMapBillboardStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCamera
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCamera[] = L"Windows.UI.Xaml.Controls.Maps.IMapCamera";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("53A6B623-C0F8-4D8B-AD1E-A59598EA840B"), exclusiveto, contract] */
                        MIDL_INTERFACE("53A6B623-C0F8-4D8B-AD1E-A59598EA840B")
                        IMapCamera : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Location(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Heading(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Heading(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Pitch(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Pitch(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Roll(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Roll(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FieldOfView(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FieldOfView(
                                /* [in] */DOUBLE value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapCamera=_uuidof(IMapCamera);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCameraFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCameraFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapCameraFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("EA3B0F16-83AF-4ACE-8E71-10AD9F1E9E7F"), exclusiveto, contract] */
                        MIDL_INTERFACE("EA3B0F16-83AF-4ACE-8E71-10AD9F1E9E7F")
                        IMapCameraFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithLocation(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithLocationAndHeading(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithLocationHeadingAndPitch(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [in] */DOUBLE rollInDegrees,
                                /* [in] */DOUBLE fieldOfViewInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapCameraFactory=_uuidof(IMapCameraFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FDD1B423-C961-4DF2-BB57-82EE0F0BB591"), exclusiveto, contract] */
                        MIDL_INTERFACE("FDD1B423-C961-4DF2-BB57-82EE0F0BB591")
                        IMapContextRequestedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapContextRequestedEventArgs=_uuidof(IMapContextRequestedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("42D0B851-5256-4747-9E6C-0D11E966141E"), exclusiveto, contract] */
                        MIDL_INTERFACE("42D0B851-5256-4747-9E6C-0D11E966141E")
                        IMapControl : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Center(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Center(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Children(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDependencyObject * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ColorScheme(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapColorScheme * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ColorScheme(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapColorScheme value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DesiredPitch(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DesiredPitch(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Heading(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Heading(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LandmarksVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LandmarksVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LoadingStatus(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapLoadingStatus * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapServiceToken(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapServiceToken(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxZoomLevel(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinZoomLevel(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PedestrianFeaturesVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PedestrianFeaturesVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Pitch(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Style(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapStyle * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Style(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapStyle value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TrafficFlowVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TrafficFlowVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformOrigin(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformOrigin(
                                /* [in] */ABI::Windows::Foundation::Point value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WatermarkMode(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapWatermarkMode * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_WatermarkMode(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapWatermarkMode value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevel(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZoomLevel(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Routes(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TileSources(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * * value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CenterChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CenterChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_HeadingChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_HeadingChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_LoadingStatusChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_LoadingStatusChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapDoubleTapped(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapDoubleTapped(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapHolding(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapHolding(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapTapped(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapTapped(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PitchChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PitchChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TransformOriginChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TransformOriginChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ZoomLevelChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ZoomLevelChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE FindMapElementsAtOffset(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE GetLocationFromOffset(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * location
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetOffsetFromLocation(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [out] */__RPC__out ABI::Windows::Foundation::Point * offset
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE IsLocationInView(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [out] */__RPC__out ::boolean * isInView
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TrySetViewBoundsAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * bounds,
                                /* [in] */__RPC__in_opt __FIReference_1_Windows__CUI__CXaml__CThickness * margin,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapAnimationKind animation,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetViewWithCenterAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * center,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetViewWithCenterAndZoomAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * center,
                                /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetViewWithCenterZoomHeadingAndPitchAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * center,
                                /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
                                /* [in] */__RPC__in_opt __FIReference_1_double * heading,
                                /* [in] */__RPC__in_opt __FIReference_1_double * desiredPitch,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetViewWithCenterZoomHeadingPitchAndAnimationAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * center,
                                /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
                                /* [in] */__RPC__in_opt __FIReference_1_double * heading,
                                /* [in] */__RPC__in_opt __FIReference_1_double * desiredPitch,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapAnimationKind animation,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl=_uuidof(IMapControl);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("E1FD644D-96EC-4065-B0F0-75281DA3654D"), exclusiveto, contract] */
                        MIDL_INTERFACE("E1FD644D-96EC-4065-B0F0-75281DA3654D")
                        IMapControl2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BusinessLandmarksVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BusinessLandmarksVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitFeaturesVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransitFeaturesVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PanInteractionMode(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapPanInteractionMode * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PanInteractionMode(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapPanInteractionMode value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotateInteractionMode(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotateInteractionMode(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TiltInteractionMode(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TiltInteractionMode(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomInteractionMode(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZoomInteractionMode(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapInteractionMode value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Is3DSupported(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsStreetsideSupported(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scene(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scene(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualCamera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetCamera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CustomExperience(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperience * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CustomExperience(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperience * value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementClick(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementClick(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementPointerEntered(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementPointerEntered(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementPointerExited(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementPointerExited(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ActualCameraChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ActualCameraChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ActualCameraChanging(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ActualCameraChanging(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TargetCameraChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TargetCameraChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CustomExperienceChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CustomExperienceChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StartContinuousRotate(
                                /* [in] */DOUBLE rateInDegreesPerSecond
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StopContinuousRotate(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StartContinuousTilt(
                                /* [in] */DOUBLE rateInDegreesPerSecond
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StopContinuousTilt(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StartContinuousZoom(
                                /* [in] */DOUBLE rateOfChangePerSecond
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StopContinuousZoom(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryRotateAsync(
                                /* [in] */DOUBLE degrees,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryRotateToAsync(
                                /* [in] */DOUBLE angleInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryTiltAsync(
                                /* [in] */DOUBLE degrees,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryTiltToAsync(
                                /* [in] */DOUBLE angleInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryZoomInAsync(
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryZoomOutAsync(
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryZoomToAsync(
                                /* [in] */DOUBLE zoomLevel,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetSceneAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * scene,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TrySetSceneWithAnimationAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * scene,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapAnimationKind animationKind,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl2=_uuidof(IMapControl2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl3[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("586328F8-8CDD-40AE-9338-AF2A7BE845E5"), exclusiveto, contract] */
                        MIDL_INTERFACE("586328F8-8CDD-40AE-9338-AF2A7BE845E5")
                        IMapControl3 : public IInspectable
                        {
                        public:
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapRightTapped(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapRightTapped(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl3=_uuidof(IMapControl3);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl4[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("068F132A-1817-466D-B7CE-419B3F8E248B"), exclusiveto, contract] */
                        MIDL_INTERFACE("068F132A-1817-466D-B7CE-419B3F8E248B")
                        IMapControl4 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BusinessLandmarksEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BusinessLandmarksEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitFeaturesEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransitFeaturesEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetVisibleRegion(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapVisibleRegionKind region,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopath * * result
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl4=_uuidof(IMapControl4);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl5[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DD9B0FFD-7823-46A2-82C9-65DDAC4F365F"), exclusiveto, contract] */
                        MIDL_INTERFACE("DD9B0FFD-7823-46A2-82C9-65DDAC4F365F")
                        IMapControl5 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapProjection(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapProjection * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapProjection(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapProjection value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StyleSheet(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StyleSheet(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ViewPadding(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Thickness * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ViewPadding(
                                /* [in] */ABI::Windows::UI::Xaml::Thickness value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapContextRequested(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapContextRequested(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE FindMapElementsAtOffsetWithRadius(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [in] */DOUBLE radius,
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE GetLocationFromOffsetWithReferenceSystem(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [in] */ABI::Windows::Devices::Geolocation::AltitudeReferenceSystem desiredReferenceSystem,
                                /* [out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * location
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StartContinuousPan(
                                /* [in] */DOUBLE horizontalPixelsPerSecond,
                                /* [in] */DOUBLE verticalPixelsPerSecond
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE StopContinuousPan(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryPanAsync(
                                /* [in] */DOUBLE horizontalPixels,
                                /* [in] */DOUBLE verticalPixels,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryPanToAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl5=_uuidof(IMapControl5);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl6[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("B0DA89A2-1041-4BEA-B88A-12AC9A82E0E2"), exclusiveto, contract] */
                        MIDL_INTERFACE("B0DA89A2-1041-4BEA-B88A-12AC9A82E0E2")
                        IMapControl6 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Layers(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Layers(
                                /* [in] */__RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * value
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TryGetLocationFromOffset(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * location,
                                /* [retval, out] */__RPC__out ::boolean * returnValue
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE TryGetLocationFromOffsetWithReferenceSystem(
                                /* [in] */ABI::Windows::Foundation::Point offset,
                                /* [in] */ABI::Windows::Devices::Geolocation::AltitudeReferenceSystem desiredReferenceSystem,
                                /* [out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * location,
                                /* [retval, out] */__RPC__out ::boolean * returnValue
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl6=_uuidof(IMapControl6);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl7[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("0D86E453-0C1F-4F7E-AE66-4AD0B4987857"), exclusiveto, contract] */
                        MIDL_INTERFACE("0D86E453-0C1F-4F7E-AE66-4AD0B4987857")
                        IMapControl7 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Region(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Region(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl7=_uuidof(IMapControl7);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl8[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl8";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("009E9C46-724D-53CA-9421-7A48FC731523"), exclusiveto, contract] */
                        MIDL_INTERFACE("009E9C46-724D-53CA-9421-7A48FC731523")
                        IMapControl8 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanTiltDown(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanTiltUp(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanZoomIn(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanZoomOut(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControl8=_uuidof(IMapControl8);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("5E464922-4A1A-4797-BEB7-5CF7754CB867"), exclusiveto, contract] */
                        MIDL_INTERFACE("5E464922-4A1A-4797-BEB7-5CF7754CB867")
                        IMapControlBusinessLandmarkClickEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocalLocations(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlBusinessLandmarkClickEventArgs=_uuidof(IMapControlBusinessLandmarkClickEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("5E4081A6-EA98-4F95-8CAF-5B42696FF504"), exclusiveto, contract] */
                        MIDL_INTERFACE("5E4081A6-EA98-4F95-8CAF-5B42696FF504")
                        IMapControlBusinessLandmarkPointerEnteredEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocalLocations(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlBusinessLandmarkPointerEnteredEventArgs=_uuidof(IMapControlBusinessLandmarkPointerEnteredEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("2BB52CAF-F24A-46D0-B463-65F719731057"), exclusiveto, contract] */
                        MIDL_INTERFACE("2BB52CAF-F24A-46D0-B463-65F719731057")
                        IMapControlBusinessLandmarkPointerExitedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocalLocations(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlBusinessLandmarkPointerExitedEventArgs=_uuidof(IMapControlBusinessLandmarkPointerExitedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("59AB8AE7-F184-4AB1-B0B0-35C8BF0654B2"), exclusiveto, contract] */
                        MIDL_INTERFACE("59AB8AE7-F184-4AB1-B0B0-35C8BF0654B2")
                        IMapControlBusinessLandmarkRightTappedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocalLocations(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlBusinessLandmarkRightTappedEventArgs=_uuidof(IMapControlBusinessLandmarkRightTappedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelper[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("8BB0F09C-14AB-486C-9DE5-5A5DEF0205A2"), exclusiveto, contract] */
                        MIDL_INTERFACE("8BB0F09C-14AB-486C-9DE5-5A5DEF0205A2")
                        IMapControlDataHelper : public IInspectable
                        {
                        public:
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BusinessLandmarkClick(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BusinessLandmarkClick(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TransitFeatureClick(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TransitFeatureClick(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BusinessLandmarkRightTapped(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BusinessLandmarkRightTapped(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TransitFeatureRightTapped(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TransitFeatureRightTapped(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlDataHelper=_uuidof(IMapControlDataHelper);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelper2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("59CE429E-562F-4C21-A674-0F11DECF0FB3"), exclusiveto, contract] */
                        MIDL_INTERFACE("59CE429E-562F-4C21-A674-0F11DECF0FB3")
                        IMapControlDataHelper2 : public IInspectable
                        {
                        public:
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BusinessLandmarkPointerEntered(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BusinessLandmarkPointerEntered(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TransitFeaturePointerEntered(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TransitFeaturePointerEntered(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BusinessLandmarkPointerExited(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BusinessLandmarkPointerExited(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TransitFeaturePointerExited(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * value,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TransitFeaturePointerExited(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlDataHelper2=_uuidof(IMapControlDataHelper2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelperFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("3B70AA8E-02EF-469C-BBAF-DC2158D4289B"), exclusiveto, contract] */
                        MIDL_INTERFACE("3B70AA8E-02EF-469C-BBAF-DC2158D4289B")
                        IMapControlDataHelperFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapControl * map,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapControlDataHelper * * instance
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlDataHelperFactory=_uuidof(IMapControlDataHelperFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelperStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("7A6632D6-E944-4110-83CF-314D0722E2E5"), exclusiveto, contract] */
                        MIDL_INTERFACE("7A6632D6-E944-4110-83CF-314D0722E2E5")
                        IMapControlDataHelperStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateMapControl(
                                /* [in] */::boolean rasterRenderMode,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapControl * * returnValue
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlDataHelperStatics=_uuidof(IMapControlDataHelperStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C2C61795-2147-4F0A-942A-5493A85DE807"), exclusiveto, contract] */
                        MIDL_INTERFACE("C2C61795-2147-4F0A-942A-5493A85DE807")
                        IMapControlStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChildrenProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ColorSchemeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DesiredPitchProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HeadingProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LandmarksVisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LoadingStatusProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapServiceTokenProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PedestrianFeaturesVisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PitchProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StyleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TrafficFlowVisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformOriginProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WatermarkModeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevelProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElementsProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RoutesProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TileSourcesProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocationProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetLocation(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject * element,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE SetLocation(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject * element,
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NormalizedAnchorPointProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetNormalizedAnchorPoint(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject * element,
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE SetNormalizedAnchorPoint(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject * element,
                                /* [in] */ABI::Windows::Foundation::Point value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics=_uuidof(IMapControlStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("04852B93-B446-4D31-9752-1EC69A5996AE"), exclusiveto, contract] */
                        MIDL_INTERFACE("04852B93-B446-4D31-9752-1EC69A5996AE")
                        IMapControlStatics2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BusinessLandmarksVisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitFeaturesVisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PanInteractionModeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotateInteractionModeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TiltInteractionModeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomInteractionModeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Is3DSupportedProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsStreetsideSupportedProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SceneProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics2=_uuidof(IMapControlStatics2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics4[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FE785D97-5D13-4FA1-BF1D-84061768C183"), exclusiveto, contract] */
                        MIDL_INTERFACE("FE785D97-5D13-4FA1-BF1D-84061768C183")
                        IMapControlStatics4 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BusinessLandmarksEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitFeaturesEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics4=_uuidof(IMapControlStatics4);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics5[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics5";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("09626F00-B7DD-4189-A7F7-830C412DEEA3"), exclusiveto, contract] */
                        MIDL_INTERFACE("09626F00-B7DD-4189-A7F7-830C412DEEA3")
                        IMapControlStatics5 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapProjectionProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StyleSheetProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ViewPaddingProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics5=_uuidof(IMapControlStatics5);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics6[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics6";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("3CCFDD7F-24D1-40A2-8351-B3063A8C95A4"), exclusiveto, contract] */
                        MIDL_INTERFACE("3CCFDD7F-24D1-40A2-8351-B3063A8C95A4")
                        IMapControlStatics6 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LayersProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics6=_uuidof(IMapControlStatics6);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics7[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics7";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("55F1AC4D-72C2-46B2-B7AE-790260BE641B"), exclusiveto, contract] */
                        MIDL_INTERFACE("55F1AC4D-72C2-46B2-B7AE-790260BE641B")
                        IMapControlStatics7 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RegionProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics7=_uuidof(IMapControlStatics7);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics8[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics8";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("ADB7A7B0-0605-592C-BF9D-D10BDC2BE47B"), exclusiveto, contract] */
                        MIDL_INTERFACE("ADB7A7B0-0605-592C-BF9D-D10BDC2BE47B")
                        IMapControlStatics8 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanTiltDownProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanTiltUpProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanZoomInProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanZoomOutProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlStatics8=_uuidof(IMapControlStatics8);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeatureClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("76179969-B765-4622-B08A-3072745A4541"), exclusiveto, contract] */
                        MIDL_INTERFACE("76179969-B765-4622-B08A-3072745A4541")
                        IMapControlTransitFeatureClickEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitProperties(
                                /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlTransitFeatureClickEventArgs=_uuidof(IMapControlTransitFeatureClickEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeaturePointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("73911A4E-EC4F-479E-94A1-36E081D0D897"), exclusiveto, contract] */
                        MIDL_INTERFACE("73911A4E-EC4F-479E-94A1-36E081D0D897")
                        IMapControlTransitFeaturePointerEnteredEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitProperties(
                                /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlTransitFeaturePointerEnteredEventArgs=_uuidof(IMapControlTransitFeaturePointerEnteredEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeaturePointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6A11258D-448D-44E7-BC69-D13D497154E9"), exclusiveto, contract] */
                        MIDL_INTERFACE("6A11258D-448D-44E7-BC69-D13D497154E9")
                        IMapControlTransitFeaturePointerExitedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitProperties(
                                /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlTransitFeaturePointerExitedEventArgs=_uuidof(IMapControlTransitFeaturePointerExitedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeatureRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("AEA1CC49-A729-4EAE-A59A-3EC9A125A028"), exclusiveto, contract] */
                        MIDL_INTERFACE("AEA1CC49-A729-4EAE-A59A-3EC9A125A028")
                        IMapControlTransitFeatureRightTappedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayName(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitProperties(
                                /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapControlTransitFeatureRightTappedEventArgs=_uuidof(IMapControlTransitFeatureRightTappedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperience[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperience";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("64592866-14A3-4E5F-8883-8E9C500EEEDE"), exclusiveto, contract] */
                        MIDL_INTERFACE("64592866-14A3-4E5F-8883-8E9C500EEEDE")
                        IMapCustomExperience : public IInspectable
                        {
                        public:
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapCustomExperience=_uuidof(IMapCustomExperience);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperienceChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("B9E6FB9B-8FC1-4042-AC34-A61B38BB7514"), exclusiveto, contract] */
                        MIDL_INTERFACE("B9E6FB9B-8FC1-4042-AC34-A61B38BB7514")
                        IMapCustomExperienceChangedEventArgs : public IInspectable
                        {
                        public:
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapCustomExperienceChangedEventArgs=_uuidof(IMapCustomExperienceChangedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperienceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("7A403FB5-A1B1-4E7F-921E-3E6B8D8EBED6"), exclusiveto, contract] */
                        MIDL_INTERFACE("7A403FB5-A1B1-4E7F-921E-3E6B8D8EBED6")
                        IMapCustomExperienceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCustomExperience * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapCustomExperienceFactory=_uuidof(IMapCustomExperienceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("D61FC4DF-B245-47F2-9AC2-43C058B1C903"), exclusiveto, contract] */
                        MIDL_INTERFACE("D61FC4DF-B245-47F2-9AC2-43C058B1C903")
                        IMapElement : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZIndex(
                                /* [in] */INT32 value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Visible(
                                /* [in] */::boolean value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement=_uuidof(IMapElement);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement2[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6619F261-FBA6-4964-A7FF-F1AF63AB9CB0"), exclusiveto, contract] */
                        MIDL_INTERFACE("6619F261-FBA6-4964-A7FF-F1AF63AB9CB0")
                        IMapElement2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapTabIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapTabIndex(
                                /* [in] */INT32 value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement2=_uuidof(IMapElement2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("13EFBC59-45ED-48B4-93AD-E3F78F8CF218"), exclusiveto, contract] */
                        MIDL_INTERFACE("13EFBC59-45ED-48B4-93AD-E3F78F8CF218")
                        IMapElement3 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapStyleSheetEntry(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapStyleSheetEntry(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapStyleSheetEntryState(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapStyleSheetEntryState(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Tag(
                                /* [retval, out] */__RPC__deref_out_opt IInspectable * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Tag(
                                /* [in] */__RPC__in_opt IInspectable * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement3=_uuidof(IMapElement3);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3D[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3D";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("827AF8D5-3843-48E2-BD00-0F0644FBE6A5"), exclusiveto, contract] */
                        MIDL_INTERFACE("827AF8D5-3843-48E2-BD00-0F0644FBE6A5")
                        IMapElement3D : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Location(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Model(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Model(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Heading(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Heading(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Pitch(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Pitch(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Roll(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Roll(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Numerics::Vector3 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                                /* [in] */ABI::Windows::Foundation::Numerics::Vector3 value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement3D=_uuidof(IMapElement3D);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3DStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6128011A-450F-442A-B9D9-AA815C71907A"), exclusiveto, contract] */
                        MIDL_INTERFACE("6128011A-450F-442A-B9D9-AA815C71907A")
                        IMapElement3DStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocationProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HeadingProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PitchProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RollProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ScaleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement3DStatics=_uuidof(IMapElement3DStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement4[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("645883B6-1FC1-4CEB-93BD-DC2C960072E9"), exclusiveto, contract] */
                        MIDL_INTERFACE("645883B6-1FC1-4CEB-93BD-DC2C960072E9")
                        IMapElement4 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElement4=_uuidof(IMapElement4);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("40168A11-D080-4519-99A1-3149FB8999D0"), exclusiveto, contract] */
                        MIDL_INTERFACE("40168A11-D080-4519-99A1-3149FB8999D0")
                        IMapElementClickEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementClickEventArgs=_uuidof(IMapElementClickEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("4A30D007-0BD6-47A5-860B-7E7CF5F0C573"), exclusiveto, contract] */
                        MIDL_INTERFACE("4A30D007-0BD6-47A5-860B-7E7CF5F0C573")
                        IMapElementFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementFactory=_uuidof(IMapElementFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("AB85DD4E-91D7-4B31-8F0A-D390C7D3A2EF"), exclusiveto, contract] */
                        MIDL_INTERFACE("AB85DD4E-91D7-4B31-8F0A-D390C7D3A2EF")
                        IMapElementPointerEnteredEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElement(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementPointerEnteredEventArgs=_uuidof(IMapElementPointerEnteredEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C1A45AF9-60C9-4679-9119-20ABC75D931F"), exclusiveto, contract] */
                        MIDL_INTERFACE("C1A45AF9-60C9-4679-9119-20ABC75D931F")
                        IMapElementPointerExitedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElement(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementPointerExitedEventArgs=_uuidof(IMapElementPointerExitedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("E8C71CF2-BFEF-4B49-8E99-41B5E3789FD2"), exclusiveto, contract] */
                        MIDL_INTERFACE("E8C71CF2-BFEF-4B49-8E99-41B5E3789FD2")
                        IMapElementStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndexProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementStatics=_uuidof(IMapElementStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("9BF72F30-80FE-4F30-BCC1-FA894050F676"), exclusiveto, contract] */
                        MIDL_INTERFACE("9BF72F30-80FE-4F30-BCC1-FA894050F676")
                        IMapElementStatics2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapTabIndexProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementStatics2=_uuidof(IMapElementStatics2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics3[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics3";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("E11EE92F-9742-49AA-AAD8-2E466BFF3796"), exclusiveto, contract] */
                        MIDL_INTERFACE("E11EE92F-9742-49AA-AAD8-2E466BFF3796")
                        IMapElementStatics3 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapStyleSheetEntryProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapStyleSheetEntryStateProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TagProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementStatics3=_uuidof(IMapElementStatics3);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics4[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics4";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("A4296F0B-DFF8-467C-9315-6F6DB93EE2BA"), exclusiveto, contract] */
                        MIDL_INTERFACE("A4296F0B-DFF8-467C-9315-6F6DB93EE2BA")
                        IMapElementStatics4 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementStatics4=_uuidof(IMapElementStatics4);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayer[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayer";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DE79689A-01EF-46F4-AC60-7C200B552610"), exclusiveto, contract] */
                        MIDL_INTERFACE("DE79689A-01EF-46F4-AC60-7C200B552610")
                        IMapElementsLayer : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapElements(
                                /* [in] */__RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementClick(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementClick(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementPointerEntered(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementPointerEntered(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapElementPointerExited(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapElementPointerExited(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_MapContextRequested(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_MapContextRequested(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayer=_uuidof(IMapElementsLayer);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("2CA7CF66-AF1B-4C05-8C85-F74AE3D4677F"), exclusiveto, contract] */
                        MIDL_INTERFACE("2CA7CF66-AF1B-4C05-8C85-F74AE3D4677F")
                        IMapElementsLayerClickEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayerClickEventArgs=_uuidof(IMapElementsLayerClickEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DA45D0B3-7A0E-4758-808B-3A637627EB0D"), exclusiveto, contract] */
                        MIDL_INTERFACE("DA45D0B3-7A0E-4758-808B-3A637627EB0D")
                        IMapElementsLayerContextRequestedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElements(
                                /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayerContextRequestedEventArgs=_uuidof(IMapElementsLayerContextRequestedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("757FC032-4694-4404-8C89-348B6B76C5E6"), exclusiveto, contract] */
                        MIDL_INTERFACE("757FC032-4694-4404-8C89-348B6B76C5E6")
                        IMapElementsLayerPointerEnteredEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElement(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayerPointerEnteredEventArgs=_uuidof(IMapElementsLayerPointerEnteredEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("92F3C6AD-03ED-4C39-AF20-2A07EE1CCEA6"), exclusiveto, contract] */
                        MIDL_INTERFACE("92F3C6AD-03ED-4C39-AF20-2A07EE1CCEA6")
                        IMapElementsLayerPointerExitedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElement(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapElement * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayerPointerExitedEventArgs=_uuidof(IMapElementsLayerPointerExitedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("34005727-F509-4D28-9180-911C03411D74"), exclusiveto, contract] */
                        MIDL_INTERFACE("34005727-F509-4D28-9180-911C03411D74")
                        IMapElementsLayerStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapElementsProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapElementsLayerStatics=_uuidof(IMapElementsLayerStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIcon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIcon[] = L"Windows.UI.Xaml.Controls.Maps.IMapIcon";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("D2096872-23D9-4A2B-8BE0-69F3A85482AB"), exclusiveto, contract] */
                        MIDL_INTERFACE("D2096872-23D9-4A2B-8BE0-69F3A85482AB")
                        IMapIcon : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Location(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Title(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Title(
                                /* [in] */__RPC__in HSTRING value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NormalizedAnchorPoint(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_NormalizedAnchorPoint(
                                /* [in] */ABI::Windows::Foundation::Point value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Image(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Image(
                                /* [in] */__RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapIcon=_uuidof(IMapIcon);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIcon2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIcon2[] = L"Windows.UI.Xaml.Controls.Maps.IMapIcon2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("611254B9-D8AA-4BBD-A316-BADF06911D63"), exclusiveto, contract] */
                        MIDL_INTERFACE("611254B9-D8AA-4BBD-A316-BADF06911D63")
                        IMapIcon2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CollisionBehaviorDesired(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapElementCollisionBehavior * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CollisionBehaviorDesired(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapElementCollisionBehavior value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapIcon2=_uuidof(IMapIcon2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIconStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIconStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapIconStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DCBC9E56-1190-4B5D-9E56-E5B6724AA328"), exclusiveto, contract] */
                        MIDL_INTERFACE("DCBC9E56-1190-4B5D-9E56-E5B6724AA328")
                        IMapIconStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LocationProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TitleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NormalizedAnchorPointProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapIconStatics=_uuidof(IMapIconStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIconStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIconStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapIconStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FF4C306A-CF76-46AB-A12F-B603B986C696"), exclusiveto, contract] */
                        MIDL_INTERFACE("FF4C306A-CF76-46AB-A12F-B603B986C696")
                        IMapIconStatics2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CollisionBehaviorDesiredProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapIconStatics2=_uuidof(IMapIconStatics2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapInputEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("9FC503A0-A8A2-4394-92E9-2247764F2F49"), exclusiveto, contract] */
                        MIDL_INTERFACE("9FC503A0-A8A2-4394-92E9-2247764F2F49")
                        IMapInputEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapInputEventArgs=_uuidof(IMapInputEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapItemsControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapItemsControl[] = L"Windows.UI.Xaml.Controls.Maps.IMapItemsControl";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("94C2C4D3-B335-42C5-B660-E6A07EC3BDDC"), exclusiveto, contract] */
                        MIDL_INTERFACE("94C2C4D3-B335-42C5-B660-E6A07EC3BDDC")
                        IMapItemsControl : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ItemsSource(
                                /* [retval, out] */__RPC__deref_out_opt IInspectable * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ItemsSource(
                                /* [in] */__RPC__in_opt IInspectable * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Items(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDependencyObject * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ItemTemplate(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ItemTemplate(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplate * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapItemsControl=_uuidof(IMapItemsControl);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapItemsControlStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("33A859C7-789B-425C-8A0A-32385896CB4A"), exclusiveto, contract] */
                        MIDL_INTERFACE("33A859C7-789B-425C-8A0A-32385896CB4A")
                        IMapItemsControlStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ItemsSourceProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ItemsProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ItemTemplateProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapItemsControlStatics=_uuidof(IMapItemsControlStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayer[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayer";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6D0FF9C1-A14D-4F97-8F57-46715B57683A"), exclusiveto, contract] */
                        MIDL_INTERFACE("6D0FF9C1-A14D-4F97-8F57-46715B57683A")
                        IMapLayer : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapTabIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MapTabIndex(
                                /* [in] */INT32 value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Visible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZIndex(
                                /* [in] */INT32 value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapLayer=_uuidof(IMapLayer);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayerFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayerFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("E02A2207-DEE3-47C8-9825-BD029C5752F7"), exclusiveto, contract] */
                        MIDL_INTERFACE("E02A2207-DEE3-47C8-9825-BD029C5752F7")
                        IMapLayerFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapLayer * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapLayerFactory=_uuidof(IMapLayerFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayerStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayerStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("9CA4A26B-5DB9-4F0C-BDD5-B1BFFDCCE946"), exclusiveto, contract] */
                        MIDL_INTERFACE("9CA4A26B-5DB9-4F0C-BDD5-B1BFFDCCE946")
                        IMapLayerStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MapTabIndexProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndexProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapLayerStatics=_uuidof(IMapLayerStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3D[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3D";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("F8C541A1-CA27-4968-A2BF-9C20F06A0468"), exclusiveto, contract] */
                        MIDL_INTERFACE("F8C541A1-CA27-4968-A2BF-9C20F06A0468")
                        IMapModel3D : public IInspectable
                        {
                        public:
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapModel3D=_uuidof(IMapModel3D);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3DFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DF7F0BCC-580A-498B-939B-0119A9DADB9E"), exclusiveto, contract] */
                        MIDL_INTERFACE("DF7F0BCC-580A-498B-939B-0119A9DADB9E")
                        IMapModel3DFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapModel3D * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapModel3DFactory=_uuidof(IMapModel3DFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3DStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("4834A480-8E56-4B0F-872D-7EAD103187CD"), exclusiveto, contract] */
                        MIDL_INTERFACE("4834A480-8E56-4B0F-872D-7EAD103187CD")
                        IMapModel3DStatics : public IInspectable
                        {
                        public:
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFrom3MFAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * source,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFrom3MFWithShadingOptionAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * source,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapModel3DShadingOption shadingOption,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * * operation
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapModel3DStatics=_uuidof(IMapModel3DStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygon[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygon";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("ABDA2285-4926-4C3A-A5F9-19DF7F69DB3D"), exclusiveto, contract] */
                        MIDL_INTERFACE("ABDA2285-4926-4C3A-A5F9-19DF7F69DB3D")
                        IMapPolygon : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Path(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopath * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Path(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopath * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeColor(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Color * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeColor(
                                /* [in] */ABI::Windows::UI::Color value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeThickness(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeThickness(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashed(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeDashed(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FillColor(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Color * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FillColor(
                                /* [in] */ABI::Windows::UI::Color value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapPolygon=_uuidof(IMapPolygon);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygon2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygon2[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygon2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("96C8A11E-636B-4018-9C2E-ACC9122A01B2"), exclusiveto, contract] */
                        MIDL_INTERFACE("96C8A11E-636B-4018-9C2E-ACC9122A01B2")
                        IMapPolygon2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Paths(
                                /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapPolygon2=_uuidof(IMapPolygon2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygonStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("37F573BE-097B-424C-87CC-2EE042FDA6D2"), exclusiveto, contract] */
                        MIDL_INTERFACE("37F573BE-097B-424C-87CC-2EE042FDA6D2")
                        IMapPolygonStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PathProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeThicknessProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashedProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapPolygonStatics=_uuidof(IMapPolygonStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolyline
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolyline[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolyline";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FBAD24A2-24DF-4A86-8FFA-0F8F4D9EC17D"), exclusiveto, contract] */
                        MIDL_INTERFACE("FBAD24A2-24DF-4A86-8FFA-0F8F4D9EC17D")
                        IMapPolyline : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Path(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopath * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Path(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopath * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeColor(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Color * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeColor(
                                /* [in] */ABI::Windows::UI::Color value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeThickness(
                                /* [retval, out] */__RPC__out DOUBLE * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeThickness(
                                /* [in] */DOUBLE value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashed(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeDashed(
                                /* [in] */::boolean value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapPolyline=_uuidof(IMapPolyline);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolylineStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("61FDE44B-1DDF-4303-B809-EC87F58AD065"), exclusiveto, contract] */
                        MIDL_INTERFACE("61FDE44B-1DDF-4303-B809-EC87F58AD065")
                        IMapPolylineStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PathProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashedProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapPolylineStatics=_uuidof(IMapPolylineStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("20943171-6FE8-40A6-AD0E-297379B575A7"), exclusiveto, contract] */
                        MIDL_INTERFACE("20943171-6FE8-40A6-AD0E-297379B575A7")
                        IMapRightTappedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Position(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::Point * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapRightTappedEventArgs=_uuidof(IMapRightTappedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRouteView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRouteView[] = L"Windows.UI.Xaml.Controls.Maps.IMapRouteView";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("740EAEC5-BACC-41E1-A67E-DD6513832049"), exclusiveto, contract] */
                        MIDL_INTERFACE("740EAEC5-BACC-41E1-A67E-DD6513832049")
                        IMapRouteView : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RouteColor(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Color * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RouteColor(
                                /* [in] */ABI::Windows::UI::Color value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OutlineColor(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Color * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OutlineColor(
                                /* [in] */ABI::Windows::UI::Color value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Route(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Services::Maps::IMapRoute * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapRouteView=_uuidof(IMapRouteView);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRouteViewFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("F083ADDF-0066-4628-82FE-EA78C23CEC1E"), exclusiveto, contract] */
                        MIDL_INTERFACE("F083ADDF-0066-4628-82FE-EA78C23CEC1E")
                        IMapRouteViewFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithMapRoute(
                                /* [in] */__RPC__in_opt ABI::Windows::Services::Maps::IMapRoute * route,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapRouteView * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapRouteViewFactory=_uuidof(IMapRouteViewFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapScene
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapScene
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapScene[] = L"Windows.UI.Xaml.Controls.Maps.IMapScene";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("8BBA10A9-50E7-482C-9789-C688B178AC24"), exclusiveto, contract] */
                        MIDL_INTERFACE("8BBA10A9-50E7-482C-9789-C688B178AC24")
                        IMapScene : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetCamera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_TargetCameraChanged(
                                /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * handler,
                                /* [retval, out] */__RPC__out EventRegistrationToken * token
                                ) = 0;
                            /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_TargetCameraChanged(
                                /* [in] */EventRegistrationToken token
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapScene=_uuidof(IMapScene);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapSceneStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapScene
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapSceneStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapSceneStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("03E4AD6C-86EC-44D9-9597-FB75B7DEBA0A"), exclusiveto, contract] */
                        MIDL_INTERFACE("03E4AD6C-86EC-44D9-9597-FB75B7DEBA0A")
                        IMapSceneStatics : public IInspectable
                        {
                        public:
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromBoundingBox(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * bounds,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromBoundingBoxWithHeadingAndPitch(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * bounds,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateFromCamera(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * camera,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocation(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocationWithHeadingAndPitch(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocationAndRadius(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE radiusInMeters,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocationAndRadiusWithHeadingAndPitch(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE radiusInMeters,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocations(
                                /* [in] */__RPC__in_opt __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * locations,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateFromLocationsWithHeadingAndPitch(
                                /* [in] */__RPC__in_opt __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * locations,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapScene * * result
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapSceneStatics=_uuidof(IMapSceneStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheet[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheet";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("AE54B2BF-8991-42ED-8D58-20473DEEDE1D"), exclusiveto, contract] */
                        MIDL_INTERFACE("AE54B2BF-8991-42ED-8D58-20473DEEDE1D")
                        IMapStyleSheet : public IInspectable
                        {
                        public:
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapStyleSheet=_uuidof(IMapStyleSheet);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetEntriesStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C9636345-EF1A-41A4-A757-BD4F43E1E4D1"), exclusiveto, contract] */
                        MIDL_INTERFACE("C9636345-EF1A-41A4-A757-BD4F43E1E4D1")
                        IMapStyleSheetEntriesStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Area(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Airport(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Cemetery(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Continent(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Education(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IndigenousPeoplesReserve(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Island(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Medical(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Military(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Nautical(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Neighborhood(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Runway(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Sand(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ShoppingCenter(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Stadium(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Vegetation(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Forest(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GolfCourse(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Park(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PlayingField(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Reserve(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Point(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NaturalPoint(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Peak(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VolcanicPeak(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WaterPoint(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointOfInterest(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Business(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FoodPoint(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PopulatedPlace(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Capital(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AdminDistrictCapital(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CountryRegionCapital(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RoadShield(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RoadExit(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transit(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Political(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CountryRegion(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AdminDistrict(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_District(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Structure(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Building(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EducationBuilding(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MedicalBuilding(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitBuilding(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transportation(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Road(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ControlledAccessHighway(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HighSpeedRamp(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Highway(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MajorRoad(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ArterialRoad(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Street(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Ramp(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UnpavedStreet(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TollRoad(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Railway(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Trail(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WaterRoute(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Water(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_River(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RouteLine(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WalkingRoute(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DrivingRoute(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapStyleSheetEntriesStatics=_uuidof(IMapStyleSheetEntriesStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetEntryStatesStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("23AC5532-866D-4BFA-B481-39BEA1DE3506"), exclusiveto, contract] */
                        MIDL_INTERFACE("23AC5532-866D-4BFA-B481-39BEA1DE3506")
                        IMapStyleSheetEntryStatesStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Disabled(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Hover(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Selected(
                                /* [retval, out] */__RPC__deref_out_opt HSTRING * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapStyleSheetEntryStatesStatics=_uuidof(IMapStyleSheetEntryStatesStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("ABBD00AD-0A1C-4335-82F4-61D936AA197D"), exclusiveto, contract] */
                        MIDL_INTERFACE("ABBD00AD-0A1C-4335-82F4-61D936AA197D")
                        IMapStyleSheetStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Aerial(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE AerialWithOverlay(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RoadLight(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RoadDark(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RoadHighContrastLight(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE RoadHighContrastDark(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE Combine(
                                /* [in] */__RPC__in_opt __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * styleSheets,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE ParseFromJson(
                                /* [in] */__RPC__in HSTRING styleAsJson,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * result
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE TryParseFromJson(
                                /* [in] */__RPC__in HSTRING styleAsJson,
                                /* [out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapStyleSheet * * styleSheet,
                                /* [retval, out] */__RPC__out ::boolean * returnValue
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapStyleSheetStatics=_uuidof(IMapStyleSheetStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTargetCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("DBF00472-E953-4FA8-97D0-EA86359057CF"), exclusiveto, contract] */
                        MIDL_INTERFACE("DBF00472-E953-4FA8-97D0-EA86359057CF")
                        IMapTargetCameraChangedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Camera(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapCamera * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTargetCameraChangedEventArgs=_uuidof(IMapTargetCameraChangedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTargetCameraChangedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("97C0B332-F2B6-460B-8D91-AC020A2383DD"), exclusiveto, contract] */
                        MIDL_INTERFACE("97C0B332-F2B6-460B-8D91-AC020A2383DD")
                        IMapTargetCameraChangedEventArgs2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChangeReason(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapCameraChangeReason * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTargetCameraChangedEventArgs2=_uuidof(IMapTargetCameraChangedEventArgs2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequest[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("46733FBC-D89D-472B-B5F6-D7066B0584F4"), exclusiveto, contract] */
                        MIDL_INTERFACE("46733FBC-D89D-472B-B5F6-D7066B0584F4")
                        IMapTileBitmapRequest : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PixelData(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PixelData(
                                /* [in] */__RPC__in_opt ABI::Windows::Storage::Streams::IRandomAccessStreamReference * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequestDeferral * * result
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileBitmapRequest=_uuidof(IMapTileBitmapRequest);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("FE370542-A4AC-4EFA-9665-0490B0CAFDD2"), exclusiveto, contract] */
                        MIDL_INTERFACE("FE370542-A4AC-4EFA-9665-0490B0CAFDD2")
                        IMapTileBitmapRequestDeferral : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileBitmapRequestDeferral=_uuidof(IMapTileBitmapRequestDeferral);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("337F691D-9B02-4AA2-8B1E-CC4D91719BF3"), exclusiveto, contract] */
                        MIDL_INTERFACE("337F691D-9B02-4AA2-8B1E-CC4D91719BF3")
                        IMapTileBitmapRequestedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_X(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Y(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevel(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Request(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileBitmapRequest * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileBitmapRequestedEventArgs=_uuidof(IMapTileBitmapRequestedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("0261D114-246A-5296-BC85-590F53AA39C8"), exclusiveto, contract] */
                        MIDL_INTERFACE("0261D114-246A-5296-BC85-590F53AA39C8")
                        IMapTileBitmapRequestedEventArgs2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileBitmapRequestedEventArgs2=_uuidof(IMapTileBitmapRequestedEventArgs2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileDataSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C03D9F5E-BE1F-4C69-9969-79467A513C38"), exclusiveto, contract] */
                        MIDL_INTERFACE("C03D9F5E-BE1F-4C69-9969-79467A513C38")
                        IMapTileDataSource : public IInspectable
                        {
                        public:
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileDataSource=_uuidof(IMapTileDataSource);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("A3920FBD-E446-4648-A74D-FD2C5D557C06"), exclusiveto, contract] */
                        MIDL_INTERFACE("A3920FBD-E446-4648-A74D-FD2C5D557C06")
                        IMapTileDataSourceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileDataSourceFactory=_uuidof(IMapTileDataSourceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSource[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSource";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("88A76E4E-2FDF-4567-9255-1100519C8D62"), exclusiveto, contract] */
                        MIDL_INTERFACE("88A76E4E-2FDF-4567-9255-1100519C8D62")
                        IMapTileSource : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataSource(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DataSource(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Layer(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapTileLayer * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Layer(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapTileLayer value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevelRange(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapZoomLevelRange * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZoomLevelRange(
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapZoomLevelRange value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Bounds(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Bounds(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowOverstretch(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowOverstretch(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsFadingEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsFadingEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTransparencyEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsTransparencyEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsRetryEnabled(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsRetryEnabled(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZIndex(
                                /* [in] */INT32 value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TilePixelSize(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TilePixelSize(
                                /* [in] */INT32 value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Visible(
                                /* [in] */::boolean value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileSource=_uuidof(IMapTileSource);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSource2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSource2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSource2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("8E65EBBD-4095-5C15-99F1-1260B4E8B0A9"), exclusiveto, contract] */
                        MIDL_INTERFACE("8E65EBBD-4095-5C15-99F1-1260B4E8B0A9")
                        IMapTileSource2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnimationState(
                                /* [retval, out] */__RPC__out ABI::Windows::UI::Xaml::Controls::Maps::MapTileAnimationState * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AutoPlay(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AutoPlay(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameCount(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FrameCount(
                                /* [in] */INT32 value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameDuration(
                                /* [retval, out] */__RPC__out ABI::Windows::Foundation::TimeSpan * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FrameDuration(
                                /* [in] */ABI::Windows::Foundation::TimeSpan value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE Pause(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE Play(void) = 0;
                            virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileSource2=_uuidof(IMapTileSource2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("CD7F811F-77FA-482B-9D34-71D31D465C48"), exclusiveto, contract] */
                        MIDL_INTERFACE("CD7F811F-77FA-482B-9D34-71D31D465C48")
                        IMapTileSourceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDataSource(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * dataSource,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDataSourceAndZoomRange(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * dataSource,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapZoomLevelRange zoomLevelRange,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDataSourceZoomRangeAndBounds(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * dataSource,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapZoomLevelRange zoomLevelRange,
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * bounds,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileDataSource * dataSource,
                                /* [in] */ABI::Windows::UI::Xaml::Controls::Maps::MapZoomLevelRange zoomLevelRange,
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeoboundingBox * bounds,
                                /* [in] */INT32 tileSizeInPixels,
                                /* [in] */__RPC__in_opt IInspectable * baseInterface,
                                /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileSource * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileSourceFactory=_uuidof(IMapTileSourceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("93FCC93C-7035-4603-99B1-E659921B6093"), exclusiveto, contract] */
                        MIDL_INTERFACE("93FCC93C-7035-4603-99B1-E659921B6093")
                        IMapTileSourceStatics : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataSourceProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LayerProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevelRangeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BoundsProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowOverstretchProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsFadingEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTransparencyEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsRetryEnabledProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZIndexProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TilePixelSizeProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VisibleProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileSourceStatics=_uuidof(IMapTileSourceStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("75CDD47E-669C-50FD-AD85-5EA5174CF59B"), exclusiveto, contract] */
                        MIDL_INTERFACE("75CDD47E-669C-50FD-AD85-5EA5174CF59B")
                        IMapTileSourceStatics2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnimationStateProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AutoPlayProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameCountProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameDurationProperty(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileSourceStatics2=_uuidof(IMapTileSourceStatics2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequest
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequest[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("17402335-3127-45B8-87A7-99F87D4E2745"), exclusiveto, contract] */
                        MIDL_INTERFACE("17402335-3127-45B8-87A7-99F87D4E2745")
                        IMapTileUriRequest : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Uri(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass * * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Uri(
                                /* [in] */__RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequestDeferral * * result
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileUriRequest=_uuidof(IMapTileUriRequest);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("C117ADE0-BF3E-4C51-8FAA-4B593CF68EB2"), exclusiveto, contract] */
                        MIDL_INTERFACE("C117ADE0-BF3E-4C51-8FAA-4B593CF68EB2")
                        IMapTileUriRequestDeferral : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileUriRequestDeferral=_uuidof(IMapTileUriRequestDeferral);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("D2147B43-1BBF-4B98-8DD3-B7834E407E0D"), exclusiveto, contract] */
                        MIDL_INTERFACE("D2147B43-1BBF-4B98-8DD3-B7834E407E0D")
                        IMapTileUriRequestedEventArgs : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_X(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Y(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomLevel(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Request(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IMapTileUriRequest * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileUriRequestedEventArgs=_uuidof(IMapTileUriRequestedEventArgs);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("2302185D-33B5-5A55-92F5-74A86A22EFA6"), exclusiveto, contract] */
                        MIDL_INTERFACE("2302185D-33B5-5A55-92F5-74A86A22EFA6")
                        IMapTileUriRequestedEventArgs2 : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FrameIndex(
                                /* [retval, out] */__RPC__out INT32 * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IMapTileUriRequestedEventArgs2=_uuidof(IMapTileUriRequestedEventArgs2);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsideExperience[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsideExperience";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("A558AEC9-E30C-46C8-8116-484691675558"), exclusiveto, contract] */
                        MIDL_INTERFACE("A558AEC9-E30C-46C8-8116-484691675558")
                        IStreetsideExperience : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AddressTextVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AddressTextVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CursorVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CursorVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OverviewMapVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OverviewMapVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StreetLabelsVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StreetLabelsVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExitButtonVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ExitButtonVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ZoomButtonsVisible(
                                /* [retval, out] */__RPC__out ::boolean * value
                                ) = 0;
                            /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ZoomButtonsVisible(
                                /* [in] */::boolean value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IStreetsideExperience=_uuidof(IStreetsideExperience);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsideExperienceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("7A5BCF3C-649E-4342-9995-68A6CF5961A7"), exclusiveto, contract] */
                        MIDL_INTERFACE("7A5BCF3C-649E-4342-9995-68A6CF5961A7")
                        IStreetsideExperienceFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithPanorama(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama * panorama,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IStreetsideExperience * * value
                                ) = 0;
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(
                                /* [in] */__RPC__in_opt ABI::Windows::UI::Xaml::Controls::Maps::IStreetsidePanorama * panorama,
                                /* [in] */DOUBLE headingInDegrees,
                                /* [in] */DOUBLE pitchInDegrees,
                                /* [in] */DOUBLE fieldOfViewInDegrees,
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::Maps::IStreetsideExperience * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IStreetsideExperienceFactory=_uuidof(IStreetsideExperienceFactory);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsidePanorama[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("6FE00FD8-AD60-4664-B539-B1069F16C5AF"), exclusiveto, contract] */
                        MIDL_INTERFACE("6FE00FD8-AD60-4664-B539-B1069F16C5AF")
                        IStreetsidePanorama : public IInspectable
                        {
                        public:
                            /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Location(
                                /* [retval, out] */__RPC__deref_out_opt ABI::Windows::Devices::Geolocation::IGeopoint * * value
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IStreetsidePanorama=_uuidof(IStreetsidePanorama);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsidePanoramaStatics[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics";
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Maps {
                        /* [object, uuid("D3B47F69-54B3-4EC5-B2A0-4F8204576507"), exclusiveto, contract] */
                        MIDL_INTERFACE("D3B47F69-54B3-4EC5-B2A0-4F8204576507")
                        IStreetsidePanoramaStatics : public IInspectable
                        {
                        public:
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE FindNearbyWithLocationAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * * operation
                                ) = 0;
                            /* [overload] */virtual HRESULT STDMETHODCALLTYPE FindNearbyWithLocationAndRadiusAsync(
                                /* [in] */__RPC__in_opt ABI::Windows::Devices::Geolocation::IGeopoint * location,
                                /* [in] */DOUBLE radiusInMeters,
                                /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * * operation
                                ) = 0;
                            
                        };

                        extern MIDL_CONST_ID IID & IID_IStreetsidePanoramaStatics=_uuidof(IStreetsidePanoramaStatics);
                        
                    } /* Maps */
                } /* Controls */
            } /* Xaml */
        } /* UI */
    } /* Windows */} /* ABI */

EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapBillboard ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapBillboard_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapBillboard_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapBillboard[] = L"Windows.UI.Xaml.Controls.Maps.MapBillboard";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapCameraFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCamera ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCamera_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCamera_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCamera[] = L"Windows.UI.Xaml.Controls.Maps.MapCamera";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics8 interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics7 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics6 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControl ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapControl2
 *    Windows.UI.Xaml.Controls.Maps.IMapControl3
 *    Windows.UI.Xaml.Controls.Maps.IMapControl4
 *    Windows.UI.Xaml.Controls.Maps.IMapControl5
 *    Windows.UI.Xaml.Controls.Maps.IMapControl6
 *    Windows.UI.Xaml.Controls.Maps.IMapControl7
 *    Windows.UI.Xaml.Controls.Maps.IMapControl8
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControl[] = L"Windows.UI.Xaml.Controls.Maps.MapControl";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory interface starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics interface starting with version 4.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper[] = L"Windows.UI.Xaml.Controls.Maps.MapControlDataHelper";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCustomExperience ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperience_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperience_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCustomExperience[] = L"Windows.UI.Xaml.Controls.Maps.MapCustomExperience";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics4 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics3 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElement ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapElement2
 *    Windows.UI.Xaml.Controls.Maps.IMapElement3
 *    Windows.UI.Xaml.Controls.Maps.IMapElement4
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElement[] = L"Windows.UI.Xaml.Controls.Maps.MapElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElement3D ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement3D_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElement3D[] = L"Windows.UI.Xaml.Controls.Maps.MapElement3D";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayer[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapIconStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapIconStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapIcon ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapIcon2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapIcon[] = L"Windows.UI.Xaml.Controls.Maps.MapIcon";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapInputEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapItemsControl ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapItemsControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapItemsControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapItemsControl[] = L"Windows.UI.Xaml.Controls.Maps.MapItemsControl";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapLayerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapLayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapLayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapLayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapLayer[] = L"Windows.UI.Xaml.Controls.Maps.MapLayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapModel3D ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapModel3D_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapModel3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapModel3D[] = L"Windows.UI.Xaml.Controls.Maps.MapModel3D";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapPolygon ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapPolygon2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolygon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolygon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapPolygon[] = L"Windows.UI.Xaml.Controls.Maps.MapPolygon";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapPolyline ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolyline_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolyline_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapPolyline[] = L"Windows.UI.Xaml.Controls.Maps.MapPolyline";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapRouteView ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRouteView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRouteView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapRouteView[] = L"Windows.UI.Xaml.Controls.Maps.MapRouteView";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapScene
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapSceneStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapScene ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapScene_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapScene_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapScene[] = L"Windows.UI.Xaml.Controls.Maps.MapScene";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapStyleSheet ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheet_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheet[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheet";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.MapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileSource ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileSource2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileSource[] = L"Windows.UI.Xaml.Controls.Maps.MapTileSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequest";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IStreetsideExperience ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsideExperience_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsideExperience_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_StreetsideExperience[] = L"Windows.UI.Xaml.Controls.Maps.StreetsideExperience";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama[] = L"Windows.UI.Xaml.Controls.Maps.StreetsidePanorama";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000






#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics;

#endif // ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheetVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement;

typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This, /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * *value);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer;

typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This, /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * *value);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayerVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView;

typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This, /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * *value);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteViewVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource;

typedef struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This, /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * *value);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSourceVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D;

// Forward declare the async operation.
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This,/* [in] */ __RPC__in_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D *asyncInfo, /* [in] */ AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D;

typedef struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This, /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D *handler);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This, /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl;

interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3DVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama;

// Forward declare the async operation.
typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This,/* [in] */ __RPC__in_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama *asyncInfo, /* [in] */ AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama;

typedef struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This, /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama *handler);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This, /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl;

interface __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanoramaVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectableVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000



#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs;

typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * sender,/* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#if !defined(____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_HSTRING __FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out HSTRING *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt HSTRING *value);
    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__



#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_HSTRING_HSTRING * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_HSTRING_HSTRING * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__



#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef  struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_HSTRING;

typedef struct __FIMapView_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt HSTRING *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [in] */ __RPC__in HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **secondPartition);
    END_INTERFACE
} __FIMapView_2_HSTRING_HSTRINGVtbl;

interface __FIMapView_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMapView_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_HSTRING_HSTRING_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_HSTRING_HSTRING_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_HSTRING_HSTRING_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_HSTRING_HSTRING_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_HSTRING __FIMap_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_HSTRING;

typedef struct __FIMap_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt HSTRING **value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [in] */ HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **view);
    HRESULT ( STDMETHODCALLTYPE *Insert )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ HSTRING key,
        /* [in] */ __RPC__in_opt HSTRING *value,
        /* [retval][out] */ __RPC__out boolean *replaced);
    HRESULT ( STDMETHODCALLTYPE *Remove )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,/* [in] */ HSTRING key);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);
    END_INTERFACE
} __FIMap_2_HSTRING_HSTRINGVtbl;

interface __FIMap_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMap_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMap_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIMap_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIMap_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIMap_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIMap_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIMap_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIMap_2_HSTRING_HSTRING_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 

#define __FIMap_2_HSTRING_HSTRING_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIMap_2_HSTRING_HSTRING_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 

#define __FIMap_2_HSTRING_HSTRING_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIMap_2_HSTRING_HSTRING_Insert(This,key,value,replaced)	\
    ( (This)->lpVtbl -> Insert(This,key,value,replaced) ) 

#define __FIMap_2_HSTRING_HSTRING_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#define __FIMap_2_HSTRING_HSTRING_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 
#endif /* COBJMACROS */



#endif // ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject __FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject __FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

typedef  struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDependencyObject **first);

    END_INTERFACE
} __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject __FIVector_1_Windows__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDependencyObject;

typedef struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This, /* [in] */ __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * *value);

    END_INTERFACE
} __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

struct __x_ABI_CWindows_CUI_CXaml_CThickness;

#if !defined(____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CUI__CXaml__CThickness __FIReference_1_Windows__CUI__CXaml__CThickness;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CUI__CXaml__CThickness;

typedef struct __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CUI_CXaml_CThickness *value);
    END_INTERFACE
} __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl;

interface __FIReference_1_Windows__CUI__CXaml__CThickness
{
    CONST_VTBL struct __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_Windows__CUI__CXaml__CThickness_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_Windows__CUI__CXaml__CThickness_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_Windows__CUI__CXaml__CThickness_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__


#if !defined(____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_boolean __FIAsyncOperationCompletedHandler_1_boolean;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_boolean;

// Forward declare the async operation.
typedef interface __FIAsyncOperation_1_boolean __FIAsyncOperation_1_boolean;

typedef struct __FIAsyncOperationCompletedHandler_1_booleanVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_boolean * This,/* [in] */ __RPC__in_opt __FIAsyncOperation_1_boolean *asyncInfo, /* [in] */ AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_booleanVtbl;

interface __FIAsyncOperationCompletedHandler_1_boolean
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_booleanVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperationCompletedHandler_1_boolean_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperationCompletedHandler_1_boolean_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperationCompletedHandler_1_boolean_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperationCompletedHandler_1_boolean_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__


#if !defined(____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_boolean __FIAsyncOperation_1_boolean;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_boolean;

typedef struct __FIAsyncOperation_1_booleanVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_boolean * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_boolean * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_boolean * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_boolean * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_boolean * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_boolean * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_boolean * This, /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_boolean *handler);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_boolean * This, /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_boolean **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_boolean * This, /* [retval][out] */ __RPC__out boolean *results);
    END_INTERFACE
} __FIAsyncOperation_1_booleanVtbl;

interface __FIAsyncOperation_1_boolean
{
    CONST_VTBL struct __FIAsyncOperation_1_booleanVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperation_1_boolean_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperation_1_boolean_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperation_1_boolean_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperation_1_boolean_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIAsyncOperation_1_boolean_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIAsyncOperation_1_boolean_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIAsyncOperation_1_boolean_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 
#define __FIAsyncOperation_1_boolean_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 
#define __FIAsyncOperation_1_boolean_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperation_1_boolean_INTERFACE_DEFINED__


#if !defined(____FIReference_1_double_INTERFACE_DEFINED__)
#define ____FIReference_1_double_INTERFACE_DEFINED__

typedef interface __FIReference_1_double __FIReference_1_double;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_double;

typedef struct __FIReference_1_doubleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_double * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_double * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_double * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_double * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_double * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_double * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_double * This, /* [retval][out] */ __RPC__out double *value);
    END_INTERFACE
} __FIReference_1_doubleVtbl;

interface __FIReference_1_double
{
    CONST_VTBL struct __FIReference_1_doubleVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_double_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_double_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_double_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_double_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_double_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_double_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_double_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_double_INTERFACE_DEFINED__


#ifndef ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation;

#endif // ____x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation_FWD_DEFINED__


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

typedef struct __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

interface __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation
{
    CONST_VTBL struct __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

typedef  struct __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation **first);

    END_INTERFACE
} __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

interface __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation
{
    CONST_VTBL struct __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000


#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation;

typedef struct __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
            /* [in] */ __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CServices_CMaps_CLocalSearch_CILocalLocation * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl;

interface __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation
{
    CONST_VTBL struct __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocationVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation_INTERFACE_DEFINED__

#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x10000


#if !defined(____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_IInspectable __FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_IInspectable;

typedef struct __FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__out HSTRING *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__deref_out_opt IInspectable * *value);
    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_HSTRING_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_HSTRING_IInspectable_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_HSTRING_IInspectable_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__



#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_HSTRING_IInspectable * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_HSTRING_IInspectable * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__



#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable;

typedef  struct __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_HSTRING_IInspectable **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__



#if !defined(____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_IInspectable __FIMapView_2_HSTRING_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_IInspectable;

typedef struct __FIMapView_2_HSTRING_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This,
        /* [in] */ __RPC__in HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt IInspectable * *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This, /* [in] */ __RPC__in HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_HSTRING_IInspectable * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable **secondPartition);
    END_INTERFACE
} __FIMapView_2_HSTRING_IInspectableVtbl;

interface __FIMapView_2_HSTRING_IInspectable
{
    CONST_VTBL struct __FIMapView_2_HSTRING_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_HSTRING_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_HSTRING_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_HSTRING_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_HSTRING_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_HSTRING_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_HSTRING_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_HSTRING_IInspectable_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_HSTRING_IInspectable_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_HSTRING_IInspectable_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_HSTRING_IInspectable_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__


#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath;

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopath_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CDevices__CGeolocation__CGeopath;

typedef struct __FIIterator_1_Windows__CDevices__CGeolocation__CGeopathVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CDevices__CGeolocation__CGeopathVtbl;

interface __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath
{
    CONST_VTBL struct __FIIterator_1_Windows__CDevices__CGeolocation__CGeopathVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CDevices__CGeolocation__CGeopath;

typedef  struct __FIIterable_1_Windows__CDevices__CGeolocation__CGeopathVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CDevices__CGeolocation__CGeopath **first);

    END_INTERFACE
} __FIIterable_1_Windows__CDevices__CGeolocation__CGeopathVtbl;

interface __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath
{
    CONST_VTBL struct __FIIterable_1_Windows__CDevices__CGeolocation__CGeopathVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath;

typedef struct __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopathVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [in] */ __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopathVtbl;

interface __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath
{
    CONST_VTBL struct __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopathVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__)
#define ____FIVector_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

typedef interface __FIVector_1_Windows__CDevices__CGeolocation__CGeopath __FIVector_1_Windows__CDevices__CGeolocation__CGeopath;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Windows__CDevices__CGeolocation__CGeopath;

typedef struct __FIVector_1_Windows__CDevices__CGeolocation__CGeopathVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CDevices__CGeolocation__CGeopath **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ __RPC__in __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This, /* [in] */ __RPC__in __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * *value);

    END_INTERFACE
} __FIVector_1_Windows__CDevices__CGeolocation__CGeopathVtbl;

interface __FIVector_1_Windows__CDevices__CGeolocation__CGeopath
{
    CONST_VTBL struct __FIVector_1_Windows__CDevices__CGeolocation__CGeopathVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CDevices__CGeolocation__CGeopath_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Windows__CDevices__CGeolocation__CGeopath_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint;

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint_FWD_DEFINED__


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint;

typedef struct __FIIterator_1_Windows__CDevices__CGeolocation__CGeopointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [retval][out] */ __RPC__out __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CDevices__CGeolocation__CGeopointVtbl;

interface __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint
{
    CONST_VTBL struct __FIIterator_1_Windows__CDevices__CGeolocation__CGeopointVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint;

typedef  struct __FIIterable_1_Windows__CDevices__CGeolocation__CGeopointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CDevices__CGeolocation__CGeopoint **first);

    END_INTERFACE
} __FIIterable_1_Windows__CDevices__CGeolocation__CGeopointVtbl;

interface __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint
{
    CONST_VTBL struct __FIIterable_1_Windows__CDevices__CGeolocation__CGeopointVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint_INTERFACE_DEFINED__

#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000



typedef enum __x_ABI_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem __x_ABI_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem;

#ifndef ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox;

#endif // ____x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox_FWD_DEFINED__








typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;





typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;


typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;


#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__










#ifndef ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__
#define ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CServices_CMaps_CIMapRoute __x_ABI_CWindows_CServices_CMaps_CIMapRoute;

#endif // ____x_ABI_CWindows_CServices_CMaps_CIMapRoute_FWD_DEFINED__





#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__






typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;



#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate __x_ABI_CWindows_CUI_CXaml_CIDataTemplate;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__



#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#endif // ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__



typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;





typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapColorScheme __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapColorScheme;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapLoadingStatus __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapLoadingStatus;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapModel3DShadingOption __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapModel3DShadingOption;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapPanInteractionMode __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapPanInteractionMode;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapProjection __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapProjection;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapStyle __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapStyle;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileAnimationState __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileAnimationState;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileLayer __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileLayer;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapVisibleRegionKind __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapVisibleRegionKind;


typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapWatermarkMode __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapWatermarkMode;


typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange;





















































































































































































/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapAnimationKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind
{
    MapAnimationKind_Default = 0,
    MapAnimationKind_None = 1,
    MapAnimationKind_Linear = 2,
    MapAnimationKind_Bow = 3,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapCameraChangeReason
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason
{
    MapCameraChangeReason_System = 0,
    MapCameraChangeReason_UserInteraction = 1,
    MapCameraChangeReason_Programmatic = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapColorScheme
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapColorScheme
{
    MapColorScheme_Light = 0,
    MapColorScheme_Dark = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior
{
    MapElementCollisionBehavior_Hide = 0,
    MapElementCollisionBehavior_RemainVisible = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapInteractionMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode
{
    MapInteractionMode_Auto = 0,
    MapInteractionMode_Disabled = 1,
    MapInteractionMode_GestureOnly = 2,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
    MapInteractionMode_PointerAndKeyboard = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
    MapInteractionMode_ControlOnly = 3,
    MapInteractionMode_GestureAndControl = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
    MapInteractionMode_PointerKeyboardAndControl = 4,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
    MapInteractionMode_PointerOnly = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
    
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapLoadingStatus
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapLoadingStatus
{
    MapLoadingStatus_Loading = 0,
    MapLoadingStatus_Loaded = 1,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
    
    MapLoadingStatus_DataUnavailable = 2,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
    
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    
    MapLoadingStatus_DownloadedMapsManagerUnavailable = 3,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
    
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapModel3DShadingOption
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapModel3DShadingOption
{
    MapModel3DShadingOption_Default = 0,
    MapModel3DShadingOption_Flat = 1,
    MapModel3DShadingOption_Smooth = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapPanInteractionMode
{
    MapPanInteractionMode_Auto = 0,
    MapPanInteractionMode_Disabled = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapProjection
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapProjection
{
    MapProjection_WebMercator = 0,
    MapProjection_Globe = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapStyle
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapStyle
{
    MapStyle_None = 0,
    MapStyle_Road = 1,
    MapStyle_Aerial = 2,
    MapStyle_AerialWithRoads = 3,
    MapStyle_Terrain = 4,
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    
    MapStyle_Aerial3D = 5,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    
    MapStyle_Aerial3DWithRoads = 6,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
    
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
    
    MapStyle_Custom = 7,
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
    
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapTileAnimationState
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileAnimationState
{
    MapTileAnimationState_Stopped = 0,
    MapTileAnimationState_Paused = 1,
    MapTileAnimationState_Playing = 2,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapTileLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileLayer
{
    MapTileLayer_LabelOverlay = 0,
    MapTileLayer_RoadOverlay = 1,
    MapTileLayer_AreaOverlay = 2,
    MapTileLayer_BackgroundOverlay = 3,
    MapTileLayer_BackgroundReplacement = 4,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapVisibleRegionKind
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapVisibleRegionKind
{
    MapVisibleRegionKind_Near = 0,
    MapVisibleRegionKind_Full = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapWatermarkMode
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapWatermarkMode
{
    MapWatermarkMode_Automatic = 0,
    MapWatermarkMode_On = 1,
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/* [contract] */
struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange
{
    DOUBLE Min;
    DOUBLE Max;
};
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ICustomMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource";
/* [object, uuid("65DA384A-2DB1-4BE1-B155-3D0C9ECF4799"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BitmapRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CCustomMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileBitmapRequestedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BitmapRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_add_BitmapRequested(This,handler,token) \
    ( (This)->lpVtbl->add_BitmapRequested(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_remove_BitmapRequested(This,token) \
    ( (This)->lpVtbl->remove_BitmapRequested(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ICustomMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSourceFactory";
/* [object, uuid("C8477947-C955-4F22-9444-A1D8D744AF11"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSource * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CICustomMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IHttpMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource";
/* [object, uuid("9D03CB5C-FD79-4795-87BE-7E54CA0B37D0"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_UriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AdditionalRequestHeaders )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [retval, out] */__RPC__deref_out_opt __FIMap_2_HSTRING_HSTRING * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowCaching )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowCaching )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [in] */boolean value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_UriRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CHttpMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_UriRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_get_UriFormatString(This,value) \
    ( (This)->lpVtbl->get_UriFormatString(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_put_UriFormatString(This,value) \
    ( (This)->lpVtbl->put_UriFormatString(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_get_AdditionalRequestHeaders(This,value) \
    ( (This)->lpVtbl->get_AdditionalRequestHeaders(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_get_AllowCaching(This,value) \
    ( (This)->lpVtbl->get_AllowCaching(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_put_AllowCaching(This,value) \
    ( (This)->lpVtbl->put_AllowCaching(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_add_UriRequested(This,handler,token) \
    ( (This)->lpVtbl->add_UriRequested(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_remove_UriRequested(This,token) \
    ( (This)->lpVtbl->remove_UriRequested(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IHttpMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSourceFactory";
/* [object, uuid("53B4B107-84DC-4291-89F8-6D0BB612A055"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithUriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory * This,
        /* [in] */__RPC__in HSTRING uriFormatString,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSource * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_CreateInstanceWithUriFormatString(This,uriFormatString,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithUriFormatString(This,uriFormatString,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIHttpMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ILocalMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource";
/* [object, uuid("616257B5-9108-4F12-8BF4-BB3C8F6274E5"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_UriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_UriRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CLocalMapTileDataSource_Windows__CUI__CXaml__CControls__CMaps__CMapTileUriRequestedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_UriRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_get_UriFormatString(This,value) \
    ( (This)->lpVtbl->get_UriFormatString(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_put_UriFormatString(This,value) \
    ( (This)->lpVtbl->put_UriFormatString(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_add_UriRequested(This,handler,token) \
    ( (This)->lpVtbl->add_UriRequested(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_remove_UriRequested(This,token) \
    ( (This)->lpVtbl->remove_UriRequested(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_ILocalMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSourceFactory";
/* [object, uuid("C5CFE9FC-72AC-4839-8A0D-011F24693C79"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithUriFormatString )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory * This,
        /* [in] */__RPC__in HSTRING uriFormatString,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSource * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_CreateInstanceWithUriFormatString(This,uriFormatString,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithUriFormatString(This,uriFormatString,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CILocalMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs";
/* [object, uuid("DAA080DA-B7F4-422C-A618-BBAA7C1D814C"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Camera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_get_Camera(This,value) \
    ( (This)->lpVtbl->get_Camera(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2";
/* [object, uuid("7BA4C7E5-10DC-455A-9D04-1D72FB6D9B93"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChangeReason )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_get_ChangeReason(This,value) \
    ( (This)->lpVtbl->get_ChangeReason(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangingEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs";
/* [object, uuid("6B0DBED6-93F7-4682-8DE5-A47A1CC7A945"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Camera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_get_Camera(This,value) \
    ( (This)->lpVtbl->get_Camera(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapActualCameraChangingEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2";
/* [object, uuid("F2867897-40AC-4E8A-A927-510F3846A47E"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChangeReason )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_get_ChangeReason(This,value) \
    ( (This)->lpVtbl->get_ChangeReason(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapActualCameraChangingEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboard
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboard[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboard";
/* [object, uuid("1694259D-0AE2-4F42-A02E-292CA835D39D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_NormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CollisionBehaviorDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CollisionBehaviorDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ReferenceCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_put_Location(This,value) \
    ( (This)->lpVtbl->put_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_get_NormalizedAnchorPoint(This,value) \
    ( (This)->lpVtbl->get_NormalizedAnchorPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_put_NormalizedAnchorPoint(This,value) \
    ( (This)->lpVtbl->put_NormalizedAnchorPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_get_Image(This,value) \
    ( (This)->lpVtbl->get_Image(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_put_Image(This,value) \
    ( (This)->lpVtbl->put_Image(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_get_CollisionBehaviorDesired(This,value) \
    ( (This)->lpVtbl->get_CollisionBehaviorDesired(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_put_CollisionBehaviorDesired(This,value) \
    ( (This)->lpVtbl->put_CollisionBehaviorDesired(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_get_ReferenceCamera(This,value) \
    ( (This)->lpVtbl->get_ReferenceCamera(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboardFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory";
/* [object, uuid("BE45A4C5-8F09-4B86-AE28-783740EB8B31"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceFromCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * camera,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboard * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_CreateInstanceFromCamera(This,camera,value) \
    ( (This)->lpVtbl->CreateInstanceFromCamera(This,camera,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapBillboardStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics";
/* [object, uuid("FDF839FE-E1F7-4FB0-8887-7DA68C647333"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NormalizedAnchorPointProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CollisionBehaviorDesiredProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_get_LocationProperty(This,value) \
    ( (This)->lpVtbl->get_LocationProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_get_NormalizedAnchorPointProperty(This,value) \
    ( (This)->lpVtbl->get_NormalizedAnchorPointProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_get_CollisionBehaviorDesiredProperty(This,value) \
    ( (This)->lpVtbl->get_CollisionBehaviorDesiredProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapBillboardStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCamera
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCamera[] = L"Windows.UI.Xaml.Controls.Maps.IMapCamera";
/* [object, uuid("53A6B623-C0F8-4D8B-AD1E-A59598EA840B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Pitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Pitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Roll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Roll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FieldOfView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FieldOfView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * This,
        /* [in] */DOUBLE value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_put_Location(This,value) \
    ( (This)->lpVtbl->put_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_get_Heading(This,value) \
    ( (This)->lpVtbl->get_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_put_Heading(This,value) \
    ( (This)->lpVtbl->put_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_get_Pitch(This,value) \
    ( (This)->lpVtbl->get_Pitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_put_Pitch(This,value) \
    ( (This)->lpVtbl->put_Pitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_get_Roll(This,value) \
    ( (This)->lpVtbl->get_Roll(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_put_Roll(This,value) \
    ( (This)->lpVtbl->put_Roll(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_get_FieldOfView(This,value) \
    ( (This)->lpVtbl->get_FieldOfView(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_put_FieldOfView(This,value) \
    ( (This)->lpVtbl->put_FieldOfView(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCameraFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCameraFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapCameraFactory";
/* [object, uuid("EA3B0F16-83AF-4ACE-8E71-10AD9F1E9E7F"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithLocation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithLocationAndHeading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE headingInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithLocationHeadingAndPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithLocationHeadingPitchRollAndFieldOfView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [in] */DOUBLE rollInDegrees,
        /* [in] */DOUBLE fieldOfViewInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_CreateInstanceWithLocation(This,location,value) \
    ( (This)->lpVtbl->CreateInstanceWithLocation(This,location,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_CreateInstanceWithLocationAndHeading(This,location,headingInDegrees,value) \
    ( (This)->lpVtbl->CreateInstanceWithLocationAndHeading(This,location,headingInDegrees,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_CreateInstanceWithLocationHeadingAndPitch(This,location,headingInDegrees,pitchInDegrees,value) \
    ( (This)->lpVtbl->CreateInstanceWithLocationHeadingAndPitch(This,location,headingInDegrees,pitchInDegrees,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(This,location,headingInDegrees,pitchInDegrees,rollInDegrees,fieldOfViewInDegrees,value) \
    ( (This)->lpVtbl->CreateInstanceWithLocationHeadingPitchRollAndFieldOfView(This,location,headingInDegrees,pitchInDegrees,rollInDegrees,fieldOfViewInDegrees,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCameraFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs";
/* [object, uuid("FDD1B423-C961-4DF2-BB57-82EE0F0BB591"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapContextRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl";
/* [object, uuid("42D0B851-5256-4747-9E6C-0D11E966141E"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Center )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Center )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDependencyObject * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ColorScheme )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapColorScheme * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ColorScheme )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapColorScheme value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DesiredPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DesiredPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LandmarksVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LandmarksVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LoadingStatus )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapLoadingStatus * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapServiceToken )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapServiceToken )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PedestrianFeaturesVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PedestrianFeaturesVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Pitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Style )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapStyle * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Style )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapStyle value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TrafficFlowVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TrafficFlowVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformOrigin )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformOrigin )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WatermarkMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapWatermarkMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_WatermarkMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapWatermarkMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Routes )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapRouteView * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TileSources )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapTileSource * * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CenterChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CenterChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_HeadingChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_HeadingChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_LoadingStatusChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_LoadingStatusChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapDoubleTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapDoubleTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapHolding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapHolding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapInputEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PitchChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PitchChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TransformOriginChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TransformOriginChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ZoomLevelChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_IInspectable * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ZoomLevelChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */EventRegistrationToken token
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *FindMapElementsAtOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *GetLocationFromOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * location
        );
    HRESULT ( STDMETHODCALLTYPE *GetOffsetFromLocation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * offset
        );
    HRESULT ( STDMETHODCALLTYPE *IsLocationInView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [out] */__RPC__out boolean * isInView
        );
    HRESULT ( STDMETHODCALLTYPE *TrySetViewBoundsAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * bounds,
        /* [in] */__RPC__in_opt __FIReference_1_Windows__CUI__CXaml__CThickness * margin,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind animation,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetViewWithCenterAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * center,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetViewWithCenterAndZoomAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * center,
        /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetViewWithCenterZoomHeadingAndPitchAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * center,
        /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
        /* [in] */__RPC__in_opt __FIReference_1_double * heading,
        /* [in] */__RPC__in_opt __FIReference_1_double * desiredPitch,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetViewWithCenterZoomHeadingPitchAndAnimationAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * center,
        /* [in] */__RPC__in_opt __FIReference_1_double * zoomLevel,
        /* [in] */__RPC__in_opt __FIReference_1_double * heading,
        /* [in] */__RPC__in_opt __FIReference_1_double * desiredPitch,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind animation,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Center(This,value) \
    ( (This)->lpVtbl->get_Center(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_Center(This,value) \
    ( (This)->lpVtbl->put_Center(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Children(This,value) \
    ( (This)->lpVtbl->get_Children(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_ColorScheme(This,value) \
    ( (This)->lpVtbl->get_ColorScheme(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_ColorScheme(This,value) \
    ( (This)->lpVtbl->put_ColorScheme(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_DesiredPitch(This,value) \
    ( (This)->lpVtbl->get_DesiredPitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_DesiredPitch(This,value) \
    ( (This)->lpVtbl->put_DesiredPitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Heading(This,value) \
    ( (This)->lpVtbl->get_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_Heading(This,value) \
    ( (This)->lpVtbl->put_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_LandmarksVisible(This,value) \
    ( (This)->lpVtbl->get_LandmarksVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_LandmarksVisible(This,value) \
    ( (This)->lpVtbl->put_LandmarksVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_LoadingStatus(This,value) \
    ( (This)->lpVtbl->get_LoadingStatus(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_MapServiceToken(This,value) \
    ( (This)->lpVtbl->get_MapServiceToken(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_MapServiceToken(This,value) \
    ( (This)->lpVtbl->put_MapServiceToken(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_MaxZoomLevel(This,value) \
    ( (This)->lpVtbl->get_MaxZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_MinZoomLevel(This,value) \
    ( (This)->lpVtbl->get_MinZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_PedestrianFeaturesVisible(This,value) \
    ( (This)->lpVtbl->get_PedestrianFeaturesVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_PedestrianFeaturesVisible(This,value) \
    ( (This)->lpVtbl->put_PedestrianFeaturesVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Pitch(This,value) \
    ( (This)->lpVtbl->get_Pitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Style(This,value) \
    ( (This)->lpVtbl->get_Style(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_Style(This,value) \
    ( (This)->lpVtbl->put_Style(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_TrafficFlowVisible(This,value) \
    ( (This)->lpVtbl->get_TrafficFlowVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_TrafficFlowVisible(This,value) \
    ( (This)->lpVtbl->put_TrafficFlowVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_TransformOrigin(This,value) \
    ( (This)->lpVtbl->get_TransformOrigin(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_TransformOrigin(This,value) \
    ( (This)->lpVtbl->put_TransformOrigin(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_WatermarkMode(This,value) \
    ( (This)->lpVtbl->get_WatermarkMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_WatermarkMode(This,value) \
    ( (This)->lpVtbl->put_WatermarkMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_ZoomLevel(This,value) \
    ( (This)->lpVtbl->get_ZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_put_ZoomLevel(This,value) \
    ( (This)->lpVtbl->put_ZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_Routes(This,value) \
    ( (This)->lpVtbl->get_Routes(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_get_TileSources(This,value) \
    ( (This)->lpVtbl->get_TileSources(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_CenterChanged(This,handler,token) \
    ( (This)->lpVtbl->add_CenterChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_CenterChanged(This,token) \
    ( (This)->lpVtbl->remove_CenterChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_HeadingChanged(This,handler,token) \
    ( (This)->lpVtbl->add_HeadingChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_HeadingChanged(This,token) \
    ( (This)->lpVtbl->remove_HeadingChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_LoadingStatusChanged(This,handler,token) \
    ( (This)->lpVtbl->add_LoadingStatusChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_LoadingStatusChanged(This,token) \
    ( (This)->lpVtbl->remove_LoadingStatusChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_MapDoubleTapped(This,handler,token) \
    ( (This)->lpVtbl->add_MapDoubleTapped(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_MapDoubleTapped(This,token) \
    ( (This)->lpVtbl->remove_MapDoubleTapped(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_MapHolding(This,handler,token) \
    ( (This)->lpVtbl->add_MapHolding(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_MapHolding(This,token) \
    ( (This)->lpVtbl->remove_MapHolding(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_MapTapped(This,handler,token) \
    ( (This)->lpVtbl->add_MapTapped(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_MapTapped(This,token) \
    ( (This)->lpVtbl->remove_MapTapped(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_PitchChanged(This,handler,token) \
    ( (This)->lpVtbl->add_PitchChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_PitchChanged(This,token) \
    ( (This)->lpVtbl->remove_PitchChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_TransformOriginChanged(This,handler,token) \
    ( (This)->lpVtbl->add_TransformOriginChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_TransformOriginChanged(This,token) \
    ( (This)->lpVtbl->remove_TransformOriginChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_add_ZoomLevelChanged(This,handler,token) \
    ( (This)->lpVtbl->add_ZoomLevelChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_remove_ZoomLevelChanged(This,token) \
    ( (This)->lpVtbl->remove_ZoomLevelChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_FindMapElementsAtOffset(This,offset,result) \
    ( (This)->lpVtbl->FindMapElementsAtOffset(This,offset,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_GetLocationFromOffset(This,offset,location) \
    ( (This)->lpVtbl->GetLocationFromOffset(This,offset,location) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_GetOffsetFromLocation(This,location,offset) \
    ( (This)->lpVtbl->GetOffsetFromLocation(This,location,offset) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_IsLocationInView(This,location,isInView) \
    ( (This)->lpVtbl->IsLocationInView(This,location,isInView) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_TrySetViewBoundsAsync(This,bounds,margin,animation,operation) \
    ( (This)->lpVtbl->TrySetViewBoundsAsync(This,bounds,margin,animation,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_TrySetViewWithCenterAsync(This,center,operation) \
    ( (This)->lpVtbl->TrySetViewWithCenterAsync(This,center,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_TrySetViewWithCenterAndZoomAsync(This,center,zoomLevel,operation) \
    ( (This)->lpVtbl->TrySetViewWithCenterAndZoomAsync(This,center,zoomLevel,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_TrySetViewWithCenterZoomHeadingAndPitchAsync(This,center,zoomLevel,heading,desiredPitch,operation) \
    ( (This)->lpVtbl->TrySetViewWithCenterZoomHeadingAndPitchAsync(This,center,zoomLevel,heading,desiredPitch,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_TrySetViewWithCenterZoomHeadingPitchAndAnimationAsync(This,center,zoomLevel,heading,desiredPitch,animation,operation) \
    ( (This)->lpVtbl->TrySetViewWithCenterZoomHeadingPitchAndAnimationAsync(This,center,zoomLevel,heading,desiredPitch,animation,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl2";
/* [object, uuid("E1FD644D-96EC-4065-B0F0-75281DA3654D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BusinessLandmarksVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BusinessLandmarksVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitFeaturesVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransitFeaturesVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PanInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapPanInteractionMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PanInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapPanInteractionMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotateInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotateInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TiltInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TiltInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZoomInteractionMode )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapInteractionMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Is3DSupported )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsStreetsideSupported )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scene )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scene )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CustomExperience )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CustomExperience )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementClickEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerEnteredEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapElementPointerExitedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ActualCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ActualCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ActualCameraChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapActualCameraChangingEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ActualCameraChanging )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TargetCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TargetCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CustomExperienceChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapCustomExperienceChangedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CustomExperienceChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *StartContinuousRotate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE rateInDegreesPerSecond
        );
    HRESULT ( STDMETHODCALLTYPE *StopContinuousRotate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *StartContinuousTilt )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE rateInDegreesPerSecond
        );
    HRESULT ( STDMETHODCALLTYPE *StopContinuousTilt )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *StartContinuousZoom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE rateOfChangePerSecond
        );
    HRESULT ( STDMETHODCALLTYPE *StopContinuousZoom )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *TryRotateAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE degrees,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryRotateToAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE angleInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryTiltAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE degrees,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryTiltToAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE angleInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryZoomInAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryZoomOutAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryZoomToAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */DOUBLE zoomLevel,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetSceneAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * scene,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TrySetSceneWithAnimationAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * scene,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapAnimationKind animationKind,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_BusinessLandmarksVisible(This,value) \
    ( (This)->lpVtbl->get_BusinessLandmarksVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_BusinessLandmarksVisible(This,value) \
    ( (This)->lpVtbl->put_BusinessLandmarksVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_TransitFeaturesVisible(This,value) \
    ( (This)->lpVtbl->get_TransitFeaturesVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_TransitFeaturesVisible(This,value) \
    ( (This)->lpVtbl->put_TransitFeaturesVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_PanInteractionMode(This,value) \
    ( (This)->lpVtbl->get_PanInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_PanInteractionMode(This,value) \
    ( (This)->lpVtbl->put_PanInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_RotateInteractionMode(This,value) \
    ( (This)->lpVtbl->get_RotateInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_RotateInteractionMode(This,value) \
    ( (This)->lpVtbl->put_RotateInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_TiltInteractionMode(This,value) \
    ( (This)->lpVtbl->get_TiltInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_TiltInteractionMode(This,value) \
    ( (This)->lpVtbl->put_TiltInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_ZoomInteractionMode(This,value) \
    ( (This)->lpVtbl->get_ZoomInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_ZoomInteractionMode(This,value) \
    ( (This)->lpVtbl->put_ZoomInteractionMode(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_Is3DSupported(This,value) \
    ( (This)->lpVtbl->get_Is3DSupported(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_IsStreetsideSupported(This,value) \
    ( (This)->lpVtbl->get_IsStreetsideSupported(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_Scene(This,value) \
    ( (This)->lpVtbl->get_Scene(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_Scene(This,value) \
    ( (This)->lpVtbl->put_Scene(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_ActualCamera(This,value) \
    ( (This)->lpVtbl->get_ActualCamera(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_TargetCamera(This,value) \
    ( (This)->lpVtbl->get_TargetCamera(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_get_CustomExperience(This,value) \
    ( (This)->lpVtbl->get_CustomExperience(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_put_CustomExperience(This,value) \
    ( (This)->lpVtbl->put_CustomExperience(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_MapElementClick(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementClick(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_MapElementClick(This,token) \
    ( (This)->lpVtbl->remove_MapElementClick(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_MapElementPointerEntered(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementPointerEntered(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_MapElementPointerEntered(This,token) \
    ( (This)->lpVtbl->remove_MapElementPointerEntered(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_MapElementPointerExited(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementPointerExited(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_MapElementPointerExited(This,token) \
    ( (This)->lpVtbl->remove_MapElementPointerExited(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_ActualCameraChanged(This,handler,token) \
    ( (This)->lpVtbl->add_ActualCameraChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_ActualCameraChanged(This,token) \
    ( (This)->lpVtbl->remove_ActualCameraChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_ActualCameraChanging(This,handler,token) \
    ( (This)->lpVtbl->add_ActualCameraChanging(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_ActualCameraChanging(This,token) \
    ( (This)->lpVtbl->remove_ActualCameraChanging(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_TargetCameraChanged(This,handler,token) \
    ( (This)->lpVtbl->add_TargetCameraChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_TargetCameraChanged(This,token) \
    ( (This)->lpVtbl->remove_TargetCameraChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_add_CustomExperienceChanged(This,handler,token) \
    ( (This)->lpVtbl->add_CustomExperienceChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_remove_CustomExperienceChanged(This,token) \
    ( (This)->lpVtbl->remove_CustomExperienceChanged(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StartContinuousRotate(This,rateInDegreesPerSecond) \
    ( (This)->lpVtbl->StartContinuousRotate(This,rateInDegreesPerSecond) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StopContinuousRotate(This) \
    ( (This)->lpVtbl->StopContinuousRotate(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StartContinuousTilt(This,rateInDegreesPerSecond) \
    ( (This)->lpVtbl->StartContinuousTilt(This,rateInDegreesPerSecond) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StopContinuousTilt(This) \
    ( (This)->lpVtbl->StopContinuousTilt(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StartContinuousZoom(This,rateOfChangePerSecond) \
    ( (This)->lpVtbl->StartContinuousZoom(This,rateOfChangePerSecond) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_StopContinuousZoom(This) \
    ( (This)->lpVtbl->StopContinuousZoom(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryRotateAsync(This,degrees,operation) \
    ( (This)->lpVtbl->TryRotateAsync(This,degrees,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryRotateToAsync(This,angleInDegrees,operation) \
    ( (This)->lpVtbl->TryRotateToAsync(This,angleInDegrees,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryTiltAsync(This,degrees,operation) \
    ( (This)->lpVtbl->TryTiltAsync(This,degrees,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryTiltToAsync(This,angleInDegrees,operation) \
    ( (This)->lpVtbl->TryTiltToAsync(This,angleInDegrees,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryZoomInAsync(This,operation) \
    ( (This)->lpVtbl->TryZoomInAsync(This,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryZoomOutAsync(This,operation) \
    ( (This)->lpVtbl->TryZoomOutAsync(This,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TryZoomToAsync(This,zoomLevel,operation) \
    ( (This)->lpVtbl->TryZoomToAsync(This,zoomLevel,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TrySetSceneAsync(This,scene,operation) \
    ( (This)->lpVtbl->TrySetSceneAsync(This,scene,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_TrySetSceneWithAnimationAsync(This,scene,animationKind,operation) \
    ( (This)->lpVtbl->TrySetSceneWithAnimationAsync(This,scene,animationKind,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl3[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl3";
/* [object, uuid("586328F8-8CDD-40AE-9338-AF2A7BE845E5"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapRightTappedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3 * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_add_MapRightTapped(This,handler,token) \
    ( (This)->lpVtbl->add_MapRightTapped(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_remove_MapRightTapped(This,token) \
    ( (This)->lpVtbl->remove_MapRightTapped(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl4[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl4";
/* [object, uuid("068F132A-1817-466D-B7CE-419B3F8E248B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BusinessLandmarksEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BusinessLandmarksEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitFeaturesEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransitFeaturesEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
        /* [in] */boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *GetVisibleRegion )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapVisibleRegionKind region,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * * result
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_get_BusinessLandmarksEnabled(This,value) \
    ( (This)->lpVtbl->get_BusinessLandmarksEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_put_BusinessLandmarksEnabled(This,value) \
    ( (This)->lpVtbl->put_BusinessLandmarksEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_get_TransitFeaturesEnabled(This,value) \
    ( (This)->lpVtbl->get_TransitFeaturesEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_put_TransitFeaturesEnabled(This,value) \
    ( (This)->lpVtbl->put_TransitFeaturesEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_GetVisibleRegion(This,region,result) \
    ( (This)->lpVtbl->GetVisibleRegion(This,region,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl5[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl5";
/* [object, uuid("DD9B0FFD-7823-46A2-82C9-65DDAC4F365F"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapProjection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapProjection * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapProjection )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapProjection value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StyleSheet )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StyleSheet )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ViewPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ViewPadding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CThickness value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapContextRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapContextRequestedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapContextRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *FindMapElementsAtOffsetWithRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [in] */DOUBLE radius,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *GetLocationFromOffsetWithReferenceSystem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [in] */__x_ABI_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem desiredReferenceSystem,
        /* [out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * location
        );
    HRESULT ( STDMETHODCALLTYPE *StartContinuousPan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */DOUBLE horizontalPixelsPerSecond,
        /* [in] */DOUBLE verticalPixelsPerSecond
        );
    HRESULT ( STDMETHODCALLTYPE *StopContinuousPan )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This
        );
    HRESULT ( STDMETHODCALLTYPE *TryPanAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */DOUBLE horizontalPixels,
        /* [in] */DOUBLE verticalPixels,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *TryPanToAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5 * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_boolean * * operation
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_get_MapProjection(This,value) \
    ( (This)->lpVtbl->get_MapProjection(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_put_MapProjection(This,value) \
    ( (This)->lpVtbl->put_MapProjection(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_get_StyleSheet(This,value) \
    ( (This)->lpVtbl->get_StyleSheet(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_put_StyleSheet(This,value) \
    ( (This)->lpVtbl->put_StyleSheet(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_get_ViewPadding(This,value) \
    ( (This)->lpVtbl->get_ViewPadding(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_put_ViewPadding(This,value) \
    ( (This)->lpVtbl->put_ViewPadding(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_add_MapContextRequested(This,handler,token) \
    ( (This)->lpVtbl->add_MapContextRequested(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_remove_MapContextRequested(This,token) \
    ( (This)->lpVtbl->remove_MapContextRequested(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_FindMapElementsAtOffsetWithRadius(This,offset,radius,result) \
    ( (This)->lpVtbl->FindMapElementsAtOffsetWithRadius(This,offset,radius,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_GetLocationFromOffsetWithReferenceSystem(This,offset,desiredReferenceSystem,location) \
    ( (This)->lpVtbl->GetLocationFromOffsetWithReferenceSystem(This,offset,desiredReferenceSystem,location) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_StartContinuousPan(This,horizontalPixelsPerSecond,verticalPixelsPerSecond) \
    ( (This)->lpVtbl->StartContinuousPan(This,horizontalPixelsPerSecond,verticalPixelsPerSecond) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_StopContinuousPan(This) \
    ( (This)->lpVtbl->StopContinuousPan(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_TryPanAsync(This,horizontalPixels,verticalPixels,operation) \
    ( (This)->lpVtbl->TryPanAsync(This,horizontalPixels,verticalPixels,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_TryPanToAsync(This,location,operation) \
    ( (This)->lpVtbl->TryPanToAsync(This,location,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl6[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl6";
/* [object, uuid("B0DA89A2-1041-4BEA-B88A-12AC9A82E0E2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Layers )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Layers )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
        /* [in] */__RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapLayer * value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TryGetLocationFromOffset )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * location,
        /* [retval, out] */__RPC__out boolean * returnValue
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *TryGetLocationFromOffsetWithReferenceSystem )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint offset,
        /* [in] */__x_ABI_CWindows_CDevices_CGeolocation_CAltitudeReferenceSystem desiredReferenceSystem,
        /* [out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * location,
        /* [retval, out] */__RPC__out boolean * returnValue
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_get_Layers(This,value) \
    ( (This)->lpVtbl->get_Layers(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_put_Layers(This,value) \
    ( (This)->lpVtbl->put_Layers(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_TryGetLocationFromOffset(This,offset,location,returnValue) \
    ( (This)->lpVtbl->TryGetLocationFromOffset(This,offset,location,returnValue) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_TryGetLocationFromOffsetWithReferenceSystem(This,offset,desiredReferenceSystem,location,returnValue) \
    ( (This)->lpVtbl->TryGetLocationFromOffsetWithReferenceSystem(This,offset,desiredReferenceSystem,location,returnValue) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl7[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl7";
/* [object, uuid("0D86E453-0C1F-4F7E-AE66-4AD0B4987857"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Region )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Region )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7 * This,
        /* [in] */__RPC__in HSTRING value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_get_Region(This,value) \
    ( (This)->lpVtbl->get_Region(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_put_Region(This,value) \
    ( (This)->lpVtbl->put_Region(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControl8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControl8[] = L"Windows.UI.Xaml.Controls.Maps.IMapControl8";
/* [object, uuid("009E9C46-724D-53CA-9421-7A48FC731523"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanTiltDown )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanTiltUp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanZoomIn )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanZoomOut )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_get_CanTiltDown(This,value) \
    ( (This)->lpVtbl->get_CanTiltDown(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_get_CanTiltUp(This,value) \
    ( (This)->lpVtbl->get_CanTiltUp(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_get_CanZoomIn(This,value) \
    ( (This)->lpVtbl->get_CanZoomIn(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_get_CanZoomOut(This,value) \
    ( (This)->lpVtbl->get_CanZoomOut(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs";
/* [object, uuid("5E464922-4A1A-4797-BEB7-5CF7754CB867"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocalLocations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_get_LocalLocations(This,value) \
    ( (This)->lpVtbl->get_LocalLocations(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs";
/* [object, uuid("5E4081A6-EA98-4F95-8CAF-5B42696FF504"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocalLocations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_get_LocalLocations(This,value) \
    ( (This)->lpVtbl->get_LocalLocations(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs";
/* [object, uuid("2BB52CAF-F24A-46D0-B463-65F719731057"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocalLocations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_get_LocalLocations(This,value) \
    ( (This)->lpVtbl->get_LocalLocations(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlBusinessLandmarkRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs";
/* [object, uuid("59AB8AE7-F184-4AB1-B0B0-35C8BF0654B2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocalLocations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CServices__CMaps__CLocalSearch__CLocalLocation * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_get_LocalLocations(This,value) \
    ( (This)->lpVtbl->get_LocalLocations(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlBusinessLandmarkRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelper[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper";
/* [object, uuid("8BB0F09C-14AB-486C-9DE5-5A5DEF0205A2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BusinessLandmarkClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkClickEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BusinessLandmarkClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TransitFeatureClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureClickEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TransitFeatureClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BusinessLandmarkRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkRightTappedEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BusinessLandmarkRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TransitFeatureRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeatureRightTappedEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TransitFeatureRightTapped )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_add_BusinessLandmarkClick(This,value,token) \
    ( (This)->lpVtbl->add_BusinessLandmarkClick(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_remove_BusinessLandmarkClick(This,token) \
    ( (This)->lpVtbl->remove_BusinessLandmarkClick(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_add_TransitFeatureClick(This,value,token) \
    ( (This)->lpVtbl->add_TransitFeatureClick(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_remove_TransitFeatureClick(This,token) \
    ( (This)->lpVtbl->remove_TransitFeatureClick(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_add_BusinessLandmarkRightTapped(This,value,token) \
    ( (This)->lpVtbl->add_BusinessLandmarkRightTapped(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_remove_BusinessLandmarkRightTapped(This,token) \
    ( (This)->lpVtbl->remove_BusinessLandmarkRightTapped(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_add_TransitFeatureRightTapped(This,value,token) \
    ( (This)->lpVtbl->add_TransitFeatureRightTapped(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_remove_TransitFeatureRightTapped(This,token) \
    ( (This)->lpVtbl->remove_TransitFeatureRightTapped(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelper2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2";
/* [object, uuid("59CE429E-562F-4C21-A674-0F11DECF0FB3"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BusinessLandmarkPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerEnteredEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BusinessLandmarkPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TransitFeaturePointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerEnteredEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TransitFeaturePointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BusinessLandmarkPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlBusinessLandmarkPointerExitedEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BusinessLandmarkPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TransitFeaturePointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapControl_Windows__CUI__CXaml__CControls__CMaps__CMapControlTransitFeaturePointerExitedEventArgs * value,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TransitFeaturePointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2 * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_add_BusinessLandmarkPointerEntered(This,value,token) \
    ( (This)->lpVtbl->add_BusinessLandmarkPointerEntered(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_remove_BusinessLandmarkPointerEntered(This,token) \
    ( (This)->lpVtbl->remove_BusinessLandmarkPointerEntered(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_add_TransitFeaturePointerEntered(This,value,token) \
    ( (This)->lpVtbl->add_TransitFeaturePointerEntered(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_remove_TransitFeaturePointerEntered(This,token) \
    ( (This)->lpVtbl->remove_TransitFeaturePointerEntered(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_add_BusinessLandmarkPointerExited(This,value,token) \
    ( (This)->lpVtbl->add_BusinessLandmarkPointerExited(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_remove_BusinessLandmarkPointerExited(This,token) \
    ( (This)->lpVtbl->remove_BusinessLandmarkPointerExited(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_add_TransitFeaturePointerExited(This,value,token) \
    ( (This)->lpVtbl->add_TransitFeaturePointerExited(This,value,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_remove_TransitFeaturePointerExited(This,token) \
    ( (This)->lpVtbl->remove_TransitFeaturePointerExited(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper2_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelperFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory";
/* [object, uuid("3B70AA8E-02EF-469C-BBAF-DC2158D4289B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * map,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelper * * instance
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_CreateInstance(This,map,instance) \
    ( (This)->lpVtbl->CreateInstance(This,map,instance) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlDataHelperStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics";
/* [object, uuid("7A6632D6-E944-4110-83CF-314D0722E2E5"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateMapControl )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics * This,
        /* [in] */boolean rasterRenderMode,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControl * * returnValue
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_CreateMapControl(This,rasterRenderMode,returnValue) \
    ( (This)->lpVtbl->CreateMapControl(This,rasterRenderMode,returnValue) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlDataHelperStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics";
/* [object, uuid("C2C61795-2147-4F0A-942A-5493A85DE807"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChildrenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ColorSchemeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DesiredPitchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HeadingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LandmarksVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LoadingStatusProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapServiceTokenProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PedestrianFeaturesVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PitchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StyleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TrafficFlowVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformOriginProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WatermarkModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevelProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElementsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RoutesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TileSourcesProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetLocation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetLocation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NormalizedAnchorPointProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetNormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetNormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * element,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_CenterProperty(This,value) \
    ( (This)->lpVtbl->get_CenterProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_ChildrenProperty(This,value) \
    ( (This)->lpVtbl->get_ChildrenProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_ColorSchemeProperty(This,value) \
    ( (This)->lpVtbl->get_ColorSchemeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_DesiredPitchProperty(This,value) \
    ( (This)->lpVtbl->get_DesiredPitchProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_HeadingProperty(This,value) \
    ( (This)->lpVtbl->get_HeadingProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_LandmarksVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_LandmarksVisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_LoadingStatusProperty(This,value) \
    ( (This)->lpVtbl->get_LoadingStatusProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_MapServiceTokenProperty(This,value) \
    ( (This)->lpVtbl->get_MapServiceTokenProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_PedestrianFeaturesVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_PedestrianFeaturesVisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_PitchProperty(This,value) \
    ( (This)->lpVtbl->get_PitchProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_StyleProperty(This,value) \
    ( (This)->lpVtbl->get_StyleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_TrafficFlowVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_TrafficFlowVisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_TransformOriginProperty(This,value) \
    ( (This)->lpVtbl->get_TransformOriginProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_WatermarkModeProperty(This,value) \
    ( (This)->lpVtbl->get_WatermarkModeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_ZoomLevelProperty(This,value) \
    ( (This)->lpVtbl->get_ZoomLevelProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_MapElementsProperty(This,value) \
    ( (This)->lpVtbl->get_MapElementsProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_RoutesProperty(This,value) \
    ( (This)->lpVtbl->get_RoutesProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_TileSourcesProperty(This,value) \
    ( (This)->lpVtbl->get_TileSourcesProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_LocationProperty(This,value) \
    ( (This)->lpVtbl->get_LocationProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_GetLocation(This,element,result) \
    ( (This)->lpVtbl->GetLocation(This,element,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_SetLocation(This,element,value) \
    ( (This)->lpVtbl->SetLocation(This,element,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_get_NormalizedAnchorPointProperty(This,value) \
    ( (This)->lpVtbl->get_NormalizedAnchorPointProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_GetNormalizedAnchorPoint(This,element,result) \
    ( (This)->lpVtbl->GetNormalizedAnchorPoint(This,element,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_SetNormalizedAnchorPoint(This,element,value) \
    ( (This)->lpVtbl->SetNormalizedAnchorPoint(This,element,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics2";
/* [object, uuid("04852B93-B446-4D31-9752-1EC69A5996AE"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BusinessLandmarksVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitFeaturesVisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PanInteractionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotateInteractionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TiltInteractionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomInteractionModeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Is3DSupportedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsStreetsideSupportedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SceneProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_BusinessLandmarksVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_BusinessLandmarksVisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_TransitFeaturesVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_TransitFeaturesVisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_PanInteractionModeProperty(This,value) \
    ( (This)->lpVtbl->get_PanInteractionModeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_RotateInteractionModeProperty(This,value) \
    ( (This)->lpVtbl->get_RotateInteractionModeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_TiltInteractionModeProperty(This,value) \
    ( (This)->lpVtbl->get_TiltInteractionModeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_ZoomInteractionModeProperty(This,value) \
    ( (This)->lpVtbl->get_ZoomInteractionModeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_Is3DSupportedProperty(This,value) \
    ( (This)->lpVtbl->get_Is3DSupportedProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_IsStreetsideSupportedProperty(This,value) \
    ( (This)->lpVtbl->get_IsStreetsideSupportedProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_get_SceneProperty(This,value) \
    ( (This)->lpVtbl->get_SceneProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics4[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics4";
/* [object, uuid("FE785D97-5D13-4FA1-BF1D-84061768C183"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BusinessLandmarksEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitFeaturesEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_get_BusinessLandmarksEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_BusinessLandmarksEnabledProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_get_TransitFeaturesEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_TransitFeaturesEnabledProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics5
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics5[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics5";
/* [object, uuid("09626F00-B7DD-4189-A7F7-830C412DEEA3"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapProjectionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StyleSheetProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ViewPaddingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_get_MapProjectionProperty(This,value) \
    ( (This)->lpVtbl->get_MapProjectionProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_get_StyleSheetProperty(This,value) \
    ( (This)->lpVtbl->get_StyleSheetProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_get_ViewPaddingProperty(This,value) \
    ( (This)->lpVtbl->get_ViewPaddingProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics5_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics6
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics6[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics6";
/* [object, uuid("3CCFDD7F-24D1-40A2-8351-B3063A8C95A4"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LayersProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_get_LayersProperty(This,value) \
    ( (This)->lpVtbl->get_LayersProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics6_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics7
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics7[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics7";
/* [object, uuid("55F1AC4D-72C2-46B2-B7AE-790260BE641B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RegionProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_get_RegionProperty(This,value) \
    ( (This)->lpVtbl->get_RegionProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics7_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlStatics8
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 8.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlStatics8[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlStatics8";
/* [object, uuid("ADB7A7B0-0605-592C-BF9D-D10BDC2BE47B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanTiltDownProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanTiltUpProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanZoomInProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanZoomOutProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_get_CanTiltDownProperty(This,value) \
    ( (This)->lpVtbl->get_CanTiltDownProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_get_CanTiltUpProperty(This,value) \
    ( (This)->lpVtbl->get_CanTiltUpProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_get_CanZoomInProperty(This,value) \
    ( (This)->lpVtbl->get_CanZoomInProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_get_CanZoomOutProperty(This,value) \
    ( (This)->lpVtbl->get_CanZoomOutProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlStatics8_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x80000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeatureClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs";
/* [object, uuid("76179969-B765-4622-B08A-3072745A4541"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitProperties )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_get_DisplayName(This,value) \
    ( (This)->lpVtbl->get_DisplayName(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_get_TransitProperties(This,value) \
    ( (This)->lpVtbl->get_TransitProperties(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeaturePointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs";
/* [object, uuid("73911A4E-EC4F-479E-94A1-36E081D0D897"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitProperties )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_get_DisplayName(This,value) \
    ( (This)->lpVtbl->get_DisplayName(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_get_TransitProperties(This,value) \
    ( (This)->lpVtbl->get_TransitProperties(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeaturePointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs";
/* [object, uuid("6A11258D-448D-44E7-BC69-D13D497154E9"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitProperties )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_get_DisplayName(This,value) \
    ( (This)->lpVtbl->get_DisplayName(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_get_TransitProperties(This,value) \
    ( (This)->lpVtbl->get_TransitProperties(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeaturePointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs
 *
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapControlTransitFeatureRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs";
/* [object, uuid("AEA1CC49-A729-4EAE-A59A-3EC9A125A028"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayName )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitProperties )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIMapView_2_HSTRING_IInspectable * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_get_DisplayName(This,value) \
    ( (This)->lpVtbl->get_DisplayName(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_get_TransitProperties(This,value) \
    ( (This)->lpVtbl->get_TransitProperties(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapControlTransitFeatureRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperience[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperience";
/* [object, uuid("64592866-14A3-4E5F-8883-8E9C500EEEDE"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperienceChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs";
/* [object, uuid("B9E6FB9B-8FC1-4042-AC34-A61B38BB7514"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapCustomExperienceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceFactory";
/* [object, uuid("7A403FB5-A1B1-4E7F-921E-3E6B8D8EBED6"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperience * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCustomExperienceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement";
/* [object, uuid("D61FC4DF-B245-47F2-9AC2-43C058B1C903"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_get_ZIndex(This,value) \
    ( (This)->lpVtbl->get_ZIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_put_ZIndex(This,value) \
    ( (This)->lpVtbl->put_ZIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_get_Visible(This,value) \
    ( (This)->lpVtbl->get_Visible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_put_Visible(This,value) \
    ( (This)->lpVtbl->put_Visible(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement2[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement2";
/* [object, uuid("6619F261-FBA6-4964-A7FF-F1AF63AB9CB0"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapTabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapTabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2 * This,
        /* [in] */INT32 value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_get_MapTabIndex(This,value) \
    ( (This)->lpVtbl->get_MapTabIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_put_MapTabIndex(This,value) \
    ( (This)->lpVtbl->put_MapTabIndex(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3";
/* [object, uuid("13EFBC59-45ED-48B4-93AD-E3F78F8CF218"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapStyleSheetEntry )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapStyleSheetEntry )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapStyleSheetEntryState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapStyleSheetEntryState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Tag )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [retval, out] */__RPC__deref_out_opt IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Tag )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3 * This,
        /* [in] */__RPC__in_opt IInspectable * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_get_MapStyleSheetEntry(This,value) \
    ( (This)->lpVtbl->get_MapStyleSheetEntry(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_put_MapStyleSheetEntry(This,value) \
    ( (This)->lpVtbl->put_MapStyleSheetEntry(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_get_MapStyleSheetEntryState(This,value) \
    ( (This)->lpVtbl->get_MapStyleSheetEntryState(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_put_MapStyleSheetEntryState(This,value) \
    ( (This)->lpVtbl->put_MapStyleSheetEntryState(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_get_Tag(This,value) \
    ( (This)->lpVtbl->get_Tag(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_put_Tag(This,value) \
    ( (This)->lpVtbl->put_Tag(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3D[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3D";
/* [object, uuid("827AF8D5-3843-48E2-BD00-0F0644FBE6A5"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Model )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Model )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Heading )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Pitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Pitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Roll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Roll )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Location(This,value) \
    ( (This)->lpVtbl->put_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Model(This,value) \
    ( (This)->lpVtbl->get_Model(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Model(This,value) \
    ( (This)->lpVtbl->put_Model(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Heading(This,value) \
    ( (This)->lpVtbl->get_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Heading(This,value) \
    ( (This)->lpVtbl->put_Heading(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Pitch(This,value) \
    ( (This)->lpVtbl->get_Pitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Pitch(This,value) \
    ( (This)->lpVtbl->put_Pitch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Roll(This,value) \
    ( (This)->lpVtbl->get_Roll(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Roll(This,value) \
    ( (This)->lpVtbl->put_Roll(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3D_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement3DStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics";
/* [object, uuid("6128011A-450F-442A-B9D9-AA815C71907A"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HeadingProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PitchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RollProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ScaleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_get_LocationProperty(This,value) \
    ( (This)->lpVtbl->get_LocationProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_get_HeadingProperty(This,value) \
    ( (This)->lpVtbl->get_HeadingProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_get_PitchProperty(This,value) \
    ( (This)->lpVtbl->get_PitchProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_get_RollProperty(This,value) \
    ( (This)->lpVtbl->get_RollProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_get_ScaleProperty(This,value) \
    ( (This)->lpVtbl->get_ScaleProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement3DStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElement4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElement4[] = L"Windows.UI.Xaml.Controls.Maps.IMapElement4";
/* [object, uuid("645883B6-1FC1-4CEB-93BD-DC2C960072E9"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4 * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_get_IsEnabled(This,value) \
    ( (This)->lpVtbl->get_IsEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_put_IsEnabled(This,value) \
    ( (This)->lpVtbl->put_IsEnabled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs";
/* [object, uuid("40168A11-D080-4519-99A1-3149FB8999D0"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementFactory";
/* [object, uuid("4A30D007-0BD6-47A5-860B-7E7CF5F0C573"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs";
/* [object, uuid("AB85DD4E-91D7-4B31-8F0A-D390C7D3A2EF"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_get_MapElement(This,value) \
    ( (This)->lpVtbl->get_MapElement(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs";
/* [object, uuid("C1A45AF9-60C9-4679-9119-20ABC75D931F"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_get_MapElement(This,value) \
    ( (This)->lpVtbl->get_MapElement(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics";
/* [object, uuid("E8C71CF2-BFEF-4B49-8E99-41B5E3789FD2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_get_ZIndexProperty(This,value) \
    ( (This)->lpVtbl->get_ZIndexProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_get_VisibleProperty(This,value) \
    ( (This)->lpVtbl->get_VisibleProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics2";
/* [object, uuid("9BF72F30-80FE-4F30-BCC1-FA894050F676"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapTabIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_get_MapTabIndexProperty(This,value) \
    ( (This)->lpVtbl->get_MapTabIndexProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics3
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics3[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics3";
/* [object, uuid("E11EE92F-9742-49AA-AAD8-2E466BFF3796"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapStyleSheetEntryProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapStyleSheetEntryStateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TagProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_get_MapStyleSheetEntryProperty(This,value) \
    ( (This)->lpVtbl->get_MapStyleSheetEntryProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_get_MapStyleSheetEntryStateProperty(This,value) \
    ( (This)->lpVtbl->get_MapStyleSheetEntryStateProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_get_TagProperty(This,value) \
    ( (This)->lpVtbl->get_TagProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics3_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementStatics4
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 6.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElement
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementStatics4[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementStatics4";
/* [object, uuid("A4296F0B-DFF8-467C-9315-6F6DB93EE2BA"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_get_IsEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsEnabledProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementStatics4_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x60000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayer[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayer";
/* [object, uuid("DE79689A-01EF-46F4-AC60-7C200B552610"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */__RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerClickEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementClick )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerEnteredEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementPointerEntered )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapElementPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerPointerExitedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapElementPointerExited )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_MapContextRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayer_Windows__CUI__CXaml__CControls__CMaps__CMapElementsLayerContextRequestedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_MapContextRequested )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_put_MapElements(This,value) \
    ( (This)->lpVtbl->put_MapElements(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_add_MapElementClick(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementClick(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_remove_MapElementClick(This,token) \
    ( (This)->lpVtbl->remove_MapElementClick(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_add_MapElementPointerEntered(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementPointerEntered(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_remove_MapElementPointerEntered(This,token) \
    ( (This)->lpVtbl->remove_MapElementPointerEntered(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_add_MapElementPointerExited(This,handler,token) \
    ( (This)->lpVtbl->add_MapElementPointerExited(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_remove_MapElementPointerExited(This,token) \
    ( (This)->lpVtbl->remove_MapElementPointerExited(This,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_add_MapContextRequested(This,handler,token) \
    ( (This)->lpVtbl->add_MapContextRequested(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_remove_MapContextRequested(This,token) \
    ( (This)->lpVtbl->remove_MapContextRequested(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs";
/* [object, uuid("2CA7CF66-AF1B-4C05-8C85-F74AE3D4677F"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerClickEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs";
/* [object, uuid("DA45D0B3-7A0E-4758-808B-3A637627EB0D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElements )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CMaps__CMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_get_MapElements(This,value) \
    ( (This)->lpVtbl->get_MapElements(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerContextRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs";
/* [object, uuid("757FC032-4694-4404-8C89-348B6B76C5E6"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_get_MapElement(This,value) \
    ( (This)->lpVtbl->get_MapElement(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerEnteredEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs";
/* [object, uuid("92F3C6AD-03ED-4C39-AF20-2A07EE1CCEA6"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElement )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElement * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_get_MapElement(This,value) \
    ( (This)->lpVtbl->get_MapElement(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerPointerExitedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapElementsLayerStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics";
/* [object, uuid("34005727-F509-4D28-9180-911C03411D74"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapElementsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_get_MapElementsProperty(This,value) \
    ( (This)->lpVtbl->get_MapElementsProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapElementsLayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIcon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIcon[] = L"Windows.UI.Xaml.Controls.Maps.IMapIcon";
/* [object, uuid("D2096872-23D9-4A2B-8BE0-69F3A85482AB"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [in] */__RPC__in HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_NormalizedAnchorPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Image )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_put_Location(This,value) \
    ( (This)->lpVtbl->put_Location(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_get_Title(This,value) \
    ( (This)->lpVtbl->get_Title(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_put_Title(This,value) \
    ( (This)->lpVtbl->put_Title(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_get_NormalizedAnchorPoint(This,value) \
    ( (This)->lpVtbl->get_NormalizedAnchorPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_put_NormalizedAnchorPoint(This,value) \
    ( (This)->lpVtbl->put_NormalizedAnchorPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_get_Image(This,value) \
    ( (This)->lpVtbl->get_Image(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_put_Image(This,value) \
    ( (This)->lpVtbl->put_Image(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIcon2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIcon2[] = L"Windows.UI.Xaml.Controls.Maps.IMapIcon2";
/* [object, uuid("611254B9-D8AA-4BBD-A316-BADF06911D63"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CollisionBehaviorDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CollisionBehaviorDesired )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2 * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapElementCollisionBehavior value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_get_CollisionBehaviorDesired(This,value) \
    ( (This)->lpVtbl->get_CollisionBehaviorDesired(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_put_CollisionBehaviorDesired(This,value) \
    ( (This)->lpVtbl->put_CollisionBehaviorDesired(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIcon2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIconStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIconStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapIconStatics";
/* [object, uuid("DCBC9E56-1190-4B5D-9E56-E5B6724AA328"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LocationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TitleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NormalizedAnchorPointProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_get_LocationProperty(This,value) \
    ( (This)->lpVtbl->get_LocationProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_get_TitleProperty(This,value) \
    ( (This)->lpVtbl->get_TitleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_get_NormalizedAnchorPointProperty(This,value) \
    ( (This)->lpVtbl->get_NormalizedAnchorPointProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapIconStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapIconStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapIconStatics2";
/* [object, uuid("FF4C306A-CF76-46AB-A12F-B603B986C696"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CollisionBehaviorDesiredProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_get_CollisionBehaviorDesiredProperty(This,value) \
    ( (This)->lpVtbl->get_CollisionBehaviorDesiredProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapIconStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapInputEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs";
/* [object, uuid("9FC503A0-A8A2-4394-92E9-2247764F2F49"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapInputEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapItemsControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapItemsControl[] = L"Windows.UI.Xaml.Controls.Maps.IMapItemsControl";
/* [object, uuid("94C2C4D3-B335-42C5-B660-E6A07EC3BDDC"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
        /* [retval, out] */__RPC__deref_out_opt IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ItemsSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
        /* [in] */__RPC__in_opt IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Items )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CDependencyObject * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ItemTemplate )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_get_ItemsSource(This,value) \
    ( (This)->lpVtbl->get_ItemsSource(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_put_ItemsSource(This,value) \
    ( (This)->lpVtbl->put_ItemsSource(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_get_Items(This,value) \
    ( (This)->lpVtbl->get_Items(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_get_ItemTemplate(This,value) \
    ( (This)->lpVtbl->get_ItemTemplate(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_put_ItemTemplate(This,value) \
    ( (This)->lpVtbl->put_ItemTemplate(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControl_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapItemsControlStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics";
/* [object, uuid("33A859C7-789B-425C-8A0A-32385896CB4A"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ItemsSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ItemsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ItemTemplateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_get_ItemsSourceProperty(This,value) \
    ( (This)->lpVtbl->get_ItemsSourceProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_get_ItemsProperty(This,value) \
    ( (This)->lpVtbl->get_ItemsProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_get_ItemTemplateProperty(This,value) \
    ( (This)->lpVtbl->get_ItemTemplateProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapItemsControlStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayer[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayer";
/* [object, uuid("6D0FF9C1-A14D-4F97-8F57-46715B57683A"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapTabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MapTabIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * This,
        /* [in] */INT32 value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_get_MapTabIndex(This,value) \
    ( (This)->lpVtbl->get_MapTabIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_put_MapTabIndex(This,value) \
    ( (This)->lpVtbl->put_MapTabIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_get_Visible(This,value) \
    ( (This)->lpVtbl->get_Visible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_put_Visible(This,value) \
    ( (This)->lpVtbl->put_Visible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_get_ZIndex(This,value) \
    ( (This)->lpVtbl->get_ZIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_put_ZIndex(This,value) \
    ( (This)->lpVtbl->put_ZIndex(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayerFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayerFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayerFactory";
/* [object, uuid("E02A2207-DEE3-47C8-9825-BD029C5752F7"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayer * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapLayerStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapLayerStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapLayerStatics";
/* [object, uuid("9CA4A26B-5DB9-4F0C-BDD5-B1BFFDCCE946"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MapTabIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_get_MapTabIndexProperty(This,value) \
    ( (This)->lpVtbl->get_MapTabIndexProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_get_VisibleProperty(This,value) \
    ( (This)->lpVtbl->get_VisibleProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_get_ZIndexProperty(This,value) \
    ( (This)->lpVtbl->get_ZIndexProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapLayerStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3D[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3D";
/* [object, uuid("F8C541A1-CA27-4968-A2BF-9C20F06A0468"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3DFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3DFactory";
/* [object, uuid("DF7F0BCC-580A-498B-939B-0119A9DADB9E"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3D * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapModel3DStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics";
/* [object, uuid("4834A480-8E56-4B0F-872D-7EAD103187CD"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFrom3MFAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * source,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFrom3MFWithShadingOptionAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * source,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapModel3DShadingOption shadingOption,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CMapModel3D * * operation
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_CreateFrom3MFAsync(This,source,operation) \
    ( (This)->lpVtbl->CreateFrom3MFAsync(This,source,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_CreateFrom3MFWithShadingOptionAsync(This,source,shadingOption,operation) \
    ( (This)->lpVtbl->CreateFrom3MFWithShadingOptionAsync(This,source,shadingOption,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapModel3DStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygon[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygon";
/* [object, uuid("ABDA2285-4926-4C3A-A5F9-19DF7F69DB3D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Path )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Path )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeDashed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FillColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FillColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_get_Path(This,value) \
    ( (This)->lpVtbl->get_Path(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_put_Path(This,value) \
    ( (This)->lpVtbl->put_Path(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_get_StrokeColor(This,value) \
    ( (This)->lpVtbl->get_StrokeColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_put_StrokeColor(This,value) \
    ( (This)->lpVtbl->put_StrokeColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_get_StrokeThickness(This,value) \
    ( (This)->lpVtbl->get_StrokeThickness(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_put_StrokeThickness(This,value) \
    ( (This)->lpVtbl->put_StrokeThickness(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_get_StrokeDashed(This,value) \
    ( (This)->lpVtbl->get_StrokeDashed(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_put_StrokeDashed(This,value) \
    ( (This)->lpVtbl->put_StrokeDashed(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_get_FillColor(This,value) \
    ( (This)->lpVtbl->get_FillColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_put_FillColor(This,value) \
    ( (This)->lpVtbl->put_FillColor(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygon2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygon2[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygon2";
/* [object, uuid("96C8A11E-636B-4018-9C2E-ACC9122A01B2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Paths )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2 * This,
        /* [retval, out] */__RPC__deref_out_opt __FIVector_1_Windows__CDevices__CGeolocation__CGeopath * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_get_Paths(This,value) \
    ( (This)->lpVtbl->get_Paths(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygon2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolygonStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics";
/* [object, uuid("37F573BE-097B-424C-87CC-2EE042FDA6D2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeThicknessProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_get_PathProperty(This,value) \
    ( (This)->lpVtbl->get_PathProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_get_StrokeThicknessProperty(This,value) \
    ( (This)->lpVtbl->get_StrokeThicknessProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_get_StrokeDashedProperty(This,value) \
    ( (This)->lpVtbl->get_StrokeDashedProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolygonStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolyline
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolyline[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolyline";
/* [object, uuid("FBAD24A2-24DF-4A86-8FFA-0F8F4D9EC17D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Path )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Path )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopath * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [retval, out] */__RPC__out DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeThickness )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeDashed )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_get_Path(This,value) \
    ( (This)->lpVtbl->get_Path(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_put_Path(This,value) \
    ( (This)->lpVtbl->put_Path(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_get_StrokeColor(This,value) \
    ( (This)->lpVtbl->get_StrokeColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_put_StrokeColor(This,value) \
    ( (This)->lpVtbl->put_StrokeColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_get_StrokeThickness(This,value) \
    ( (This)->lpVtbl->get_StrokeThickness(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_put_StrokeThickness(This,value) \
    ( (This)->lpVtbl->put_StrokeThickness(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_get_StrokeDashed(This,value) \
    ( (This)->lpVtbl->get_StrokeDashed(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_put_StrokeDashed(This,value) \
    ( (This)->lpVtbl->put_StrokeDashed(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolyline_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapPolylineStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics";
/* [object, uuid("61FDE44B-1DDF-4303-B809-EC87F58AD065"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PathProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashedProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_get_PathProperty(This,value) \
    ( (This)->lpVtbl->get_PathProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_get_StrokeDashedProperty(This,value) \
    ( (This)->lpVtbl->get_StrokeDashedProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapPolylineStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs";
/* [object, uuid("20943171-6FE8-40A6-AD0E-297379B575A7"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Position )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_get_Position(This,value) \
    ( (This)->lpVtbl->get_Position(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRightTappedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRouteView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRouteView[] = L"Windows.UI.Xaml.Controls.Maps.IMapRouteView";
/* [object, uuid("740EAEC5-BACC-41E1-A67E-DD6513832049"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RouteColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RouteColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OutlineColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OutlineColor )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Route )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CServices_CMaps_CIMapRoute * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_get_RouteColor(This,value) \
    ( (This)->lpVtbl->get_RouteColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_put_RouteColor(This,value) \
    ( (This)->lpVtbl->put_RouteColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_get_OutlineColor(This,value) \
    ( (This)->lpVtbl->get_OutlineColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_put_OutlineColor(This,value) \
    ( (This)->lpVtbl->put_OutlineColor(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_get_Route(This,value) \
    ( (This)->lpVtbl->get_Route(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapRouteViewFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory";
/* [object, uuid("F083ADDF-0066-4628-82FE-EA78C23CEC1E"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithMapRoute )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CServices_CMaps_CIMapRoute * route,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteView * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_CreateInstanceWithMapRoute(This,route,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithMapRoute(This,route,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapRouteViewFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapScene
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapScene
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapScene[] = L"Windows.UI.Xaml.Controls.Maps.IMapScene";
/* [object, uuid("8BBA10A9-50E7-482C-9789-C688B178AC24"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_TargetCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
        /* [in] */__RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMaps__CMapScene_Windows__CUI__CXaml__CControls__CMaps__CMapTargetCameraChangedEventArgs * handler,
        /* [retval, out] */__RPC__out EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_TargetCameraChanged )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_get_TargetCamera(This,value) \
    ( (This)->lpVtbl->get_TargetCamera(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_add_TargetCameraChanged(This,handler,token) \
    ( (This)->lpVtbl->add_TargetCameraChanged(This,handler,token) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_remove_TargetCameraChanged(This,token) \
    ( (This)->lpVtbl->remove_TargetCameraChanged(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapSceneStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapScene
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapSceneStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapSceneStatics";
/* [object, uuid("03E4AD6C-86EC-44D9-9597-FB75B7DEBA0A"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromBoundingBox )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * bounds,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromBoundingBoxWithHeadingAndPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * bounds,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateFromCamera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * camera,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocationWithHeadingAndPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocationAndRadius )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE radiusInMeters,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocationAndRadiusWithHeadingAndPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE radiusInMeters,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocations )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * locations,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateFromLocationsWithHeadingAndPitch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics * This,
        /* [in] */__RPC__in_opt __FIIterable_1_Windows__CDevices__CGeolocation__CGeopoint * locations,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapScene * * result
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromBoundingBox(This,bounds,result) \
    ( (This)->lpVtbl->CreateFromBoundingBox(This,bounds,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromBoundingBoxWithHeadingAndPitch(This,bounds,headingInDegrees,pitchInDegrees,result) \
    ( (This)->lpVtbl->CreateFromBoundingBoxWithHeadingAndPitch(This,bounds,headingInDegrees,pitchInDegrees,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromCamera(This,camera,result) \
    ( (This)->lpVtbl->CreateFromCamera(This,camera,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocation(This,location,result) \
    ( (This)->lpVtbl->CreateFromLocation(This,location,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocationWithHeadingAndPitch(This,location,headingInDegrees,pitchInDegrees,result) \
    ( (This)->lpVtbl->CreateFromLocationWithHeadingAndPitch(This,location,headingInDegrees,pitchInDegrees,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocationAndRadius(This,location,radiusInMeters,result) \
    ( (This)->lpVtbl->CreateFromLocationAndRadius(This,location,radiusInMeters,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocationAndRadiusWithHeadingAndPitch(This,location,radiusInMeters,headingInDegrees,pitchInDegrees,result) \
    ( (This)->lpVtbl->CreateFromLocationAndRadiusWithHeadingAndPitch(This,location,radiusInMeters,headingInDegrees,pitchInDegrees,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocations(This,locations,result) \
    ( (This)->lpVtbl->CreateFromLocations(This,locations,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_CreateFromLocationsWithHeadingAndPitch(This,locations,headingInDegrees,pitchInDegrees,result) \
    ( (This)->lpVtbl->CreateFromLocationsWithHeadingAndPitch(This,locations,headingInDegrees,pitchInDegrees,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapSceneStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheet[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheet";
/* [object, uuid("AE54B2BF-8991-42ED-8D58-20473DEEDE1D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetEntriesStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics";
/* [object, uuid("C9636345-EF1A-41A4-A757-BD4F43E1E4D1"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Area )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Airport )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Cemetery )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Continent )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Education )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IndigenousPeoplesReserve )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Island )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Medical )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Military )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Nautical )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Neighborhood )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Runway )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Sand )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ShoppingCenter )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Stadium )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Vegetation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Forest )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GolfCourse )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Park )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PlayingField )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Reserve )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Point )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NaturalPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Peak )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VolcanicPeak )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WaterPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointOfInterest )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Business )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FoodPoint )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PopulatedPlace )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Capital )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AdminDistrictCapital )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CountryRegionCapital )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RoadShield )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RoadExit )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transit )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Political )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CountryRegion )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AdminDistrict )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_District )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Structure )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Building )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EducationBuilding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MedicalBuilding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitBuilding )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transportation )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Road )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ControlledAccessHighway )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HighSpeedRamp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Highway )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MajorRoad )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ArterialRoad )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Street )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Ramp )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UnpavedStreet )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TollRoad )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Railway )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Trail )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WaterRoute )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Water )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_River )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RouteLine )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WalkingRoute )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DrivingRoute )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Area(This,value) \
    ( (This)->lpVtbl->get_Area(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Airport(This,value) \
    ( (This)->lpVtbl->get_Airport(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Cemetery(This,value) \
    ( (This)->lpVtbl->get_Cemetery(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Continent(This,value) \
    ( (This)->lpVtbl->get_Continent(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Education(This,value) \
    ( (This)->lpVtbl->get_Education(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_IndigenousPeoplesReserve(This,value) \
    ( (This)->lpVtbl->get_IndigenousPeoplesReserve(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Island(This,value) \
    ( (This)->lpVtbl->get_Island(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Medical(This,value) \
    ( (This)->lpVtbl->get_Medical(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Military(This,value) \
    ( (This)->lpVtbl->get_Military(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Nautical(This,value) \
    ( (This)->lpVtbl->get_Nautical(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Neighborhood(This,value) \
    ( (This)->lpVtbl->get_Neighborhood(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Runway(This,value) \
    ( (This)->lpVtbl->get_Runway(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Sand(This,value) \
    ( (This)->lpVtbl->get_Sand(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_ShoppingCenter(This,value) \
    ( (This)->lpVtbl->get_ShoppingCenter(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Stadium(This,value) \
    ( (This)->lpVtbl->get_Stadium(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Vegetation(This,value) \
    ( (This)->lpVtbl->get_Vegetation(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Forest(This,value) \
    ( (This)->lpVtbl->get_Forest(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_GolfCourse(This,value) \
    ( (This)->lpVtbl->get_GolfCourse(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Park(This,value) \
    ( (This)->lpVtbl->get_Park(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_PlayingField(This,value) \
    ( (This)->lpVtbl->get_PlayingField(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Reserve(This,value) \
    ( (This)->lpVtbl->get_Reserve(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Point(This,value) \
    ( (This)->lpVtbl->get_Point(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_NaturalPoint(This,value) \
    ( (This)->lpVtbl->get_NaturalPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Peak(This,value) \
    ( (This)->lpVtbl->get_Peak(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_VolcanicPeak(This,value) \
    ( (This)->lpVtbl->get_VolcanicPeak(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_WaterPoint(This,value) \
    ( (This)->lpVtbl->get_WaterPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_PointOfInterest(This,value) \
    ( (This)->lpVtbl->get_PointOfInterest(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Business(This,value) \
    ( (This)->lpVtbl->get_Business(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_FoodPoint(This,value) \
    ( (This)->lpVtbl->get_FoodPoint(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_PopulatedPlace(This,value) \
    ( (This)->lpVtbl->get_PopulatedPlace(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Capital(This,value) \
    ( (This)->lpVtbl->get_Capital(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_AdminDistrictCapital(This,value) \
    ( (This)->lpVtbl->get_AdminDistrictCapital(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_CountryRegionCapital(This,value) \
    ( (This)->lpVtbl->get_CountryRegionCapital(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_RoadShield(This,value) \
    ( (This)->lpVtbl->get_RoadShield(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_RoadExit(This,value) \
    ( (This)->lpVtbl->get_RoadExit(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Transit(This,value) \
    ( (This)->lpVtbl->get_Transit(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Political(This,value) \
    ( (This)->lpVtbl->get_Political(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_CountryRegion(This,value) \
    ( (This)->lpVtbl->get_CountryRegion(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_AdminDistrict(This,value) \
    ( (This)->lpVtbl->get_AdminDistrict(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_District(This,value) \
    ( (This)->lpVtbl->get_District(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Structure(This,value) \
    ( (This)->lpVtbl->get_Structure(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Building(This,value) \
    ( (This)->lpVtbl->get_Building(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_EducationBuilding(This,value) \
    ( (This)->lpVtbl->get_EducationBuilding(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_MedicalBuilding(This,value) \
    ( (This)->lpVtbl->get_MedicalBuilding(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_TransitBuilding(This,value) \
    ( (This)->lpVtbl->get_TransitBuilding(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Transportation(This,value) \
    ( (This)->lpVtbl->get_Transportation(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Road(This,value) \
    ( (This)->lpVtbl->get_Road(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_ControlledAccessHighway(This,value) \
    ( (This)->lpVtbl->get_ControlledAccessHighway(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_HighSpeedRamp(This,value) \
    ( (This)->lpVtbl->get_HighSpeedRamp(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Highway(This,value) \
    ( (This)->lpVtbl->get_Highway(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_MajorRoad(This,value) \
    ( (This)->lpVtbl->get_MajorRoad(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_ArterialRoad(This,value) \
    ( (This)->lpVtbl->get_ArterialRoad(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Street(This,value) \
    ( (This)->lpVtbl->get_Street(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Ramp(This,value) \
    ( (This)->lpVtbl->get_Ramp(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_UnpavedStreet(This,value) \
    ( (This)->lpVtbl->get_UnpavedStreet(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_TollRoad(This,value) \
    ( (This)->lpVtbl->get_TollRoad(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Railway(This,value) \
    ( (This)->lpVtbl->get_Railway(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Trail(This,value) \
    ( (This)->lpVtbl->get_Trail(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_WaterRoute(This,value) \
    ( (This)->lpVtbl->get_WaterRoute(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_Water(This,value) \
    ( (This)->lpVtbl->get_Water(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_River(This,value) \
    ( (This)->lpVtbl->get_River(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_RouteLine(This,value) \
    ( (This)->lpVtbl->get_RouteLine(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_WalkingRoute(This,value) \
    ( (This)->lpVtbl->get_WalkingRoute(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_get_DrivingRoute(This,value) \
    ( (This)->lpVtbl->get_DrivingRoute(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntriesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetEntryStatesStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics";
/* [object, uuid("23AC5532-866D-4BFA-B481-39BEA1DE3506"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Disabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Hover )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Selected )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics * This,
        /* [retval, out] */__RPC__deref_out_opt HSTRING * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_get_Disabled(This,value) \
    ( (This)->lpVtbl->get_Disabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_get_Hover(This,value) \
    ( (This)->lpVtbl->get_Hover(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_get_Selected(This,value) \
    ( (This)->lpVtbl->get_Selected(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetEntryStatesStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapStyleSheetStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics";
/* [object, uuid("ABBD00AD-0A1C-4335-82F4-61D936AA197D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Aerial )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *AerialWithOverlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RoadLight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RoadDark )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RoadHighContrastLight )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RoadHighContrastDark )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *Combine )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [in] */__RPC__in_opt __FIIterable_1_Windows__CUI__CXaml__CControls__CMaps__CMapStyleSheet * styleSheets,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *ParseFromJson )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [in] */__RPC__in HSTRING styleAsJson,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryParseFromJson )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics * This,
        /* [in] */__RPC__in HSTRING styleAsJson,
        /* [out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheet * * styleSheet,
        /* [retval, out] */__RPC__out boolean * returnValue
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_Aerial(This,result) \
    ( (This)->lpVtbl->Aerial(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_AerialWithOverlay(This,result) \
    ( (This)->lpVtbl->AerialWithOverlay(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_RoadLight(This,result) \
    ( (This)->lpVtbl->RoadLight(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_RoadDark(This,result) \
    ( (This)->lpVtbl->RoadDark(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_RoadHighContrastLight(This,result) \
    ( (This)->lpVtbl->RoadHighContrastLight(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_RoadHighContrastDark(This,result) \
    ( (This)->lpVtbl->RoadHighContrastDark(This,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_Combine(This,styleSheets,result) \
    ( (This)->lpVtbl->Combine(This,styleSheets,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_ParseFromJson(This,styleAsJson,result) \
    ( (This)->lpVtbl->ParseFromJson(This,styleAsJson,result) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_TryParseFromJson(This,styleAsJson,styleSheet,returnValue) \
    ( (This)->lpVtbl->TryParseFromJson(This,styleAsJson,styleSheet,returnValue) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapStyleSheetStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTargetCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs";
/* [object, uuid("DBF00472-E953-4FA8-97D0-EA86359057CF"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Camera )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapCamera * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_get_Camera(This,value) \
    ( (This)->lpVtbl->get_Camera(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTargetCameraChangedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2";
/* [object, uuid("97C0B332-F2B6-460B-8D91-AC020A2383DD"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChangeReason )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapCameraChangeReason * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_get_ChangeReason(This,value) \
    ( (This)->lpVtbl->get_ChangeReason(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTargetCameraChangedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequest[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest";
/* [object, uuid("46733FBC-D89D-472B-B5F6-D7066B0584F4"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PixelData )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PixelData )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * * result
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_get_PixelData(This,value) \
    ( (This)->lpVtbl->get_PixelData(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_put_PixelData(This,value) \
    ( (This)->lpVtbl->put_PixelData(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_GetDeferral(This,result) \
    ( (This)->lpVtbl->GetDeferral(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral";
/* [object, uuid("FE370542-A4AC-4EFA-9665-0490B0CAFDD2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral * This
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferralVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferralVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_Complete(This) \
    ( (This)->lpVtbl->Complete(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs";
/* [object, uuid("337F691D-9B02-4AA2-8B1E-CC4D91719BF3"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_X )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Y )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Request )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequest * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_get_X(This,value) \
    ( (This)->lpVtbl->get_X(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_get_Y(This,value) \
    ( (This)->lpVtbl->get_Y(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_get_ZoomLevel(This,value) \
    ( (This)->lpVtbl->get_ZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_get_Request(This,value) \
    ( (This)->lpVtbl->get_Request(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileBitmapRequestedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2";
/* [object, uuid("0261D114-246A-5296-BC85-590F53AA39C8"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2 * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_get_FrameIndex(This,value) \
    ( (This)->lpVtbl->get_FrameIndex(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileBitmapRequestedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileDataSource";
/* [object, uuid("C03D9F5E-BE1F-4C69-9969-79467A513C38"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileDataSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileDataSourceFactory";
/* [object, uuid("A3920FBD-E446-4648-A74D-FD2C5D557C06"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSource[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSource";
/* [object, uuid("88A76E4E-2FDF-4567-9255-1100519C8D62"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DataSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Layer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileLayer * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Layer )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileLayer value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevelRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZoomLevelRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Bounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowOverstretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowOverstretch )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsFadingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsFadingEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTransparencyEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsTransparencyEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsRetryEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsRetryEnabled )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TilePixelSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TilePixelSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Visible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_DataSource(This,value) \
    ( (This)->lpVtbl->get_DataSource(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_DataSource(This,value) \
    ( (This)->lpVtbl->put_DataSource(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_Layer(This,value) \
    ( (This)->lpVtbl->get_Layer(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_Layer(This,value) \
    ( (This)->lpVtbl->put_Layer(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_ZoomLevelRange(This,value) \
    ( (This)->lpVtbl->get_ZoomLevelRange(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_ZoomLevelRange(This,value) \
    ( (This)->lpVtbl->put_ZoomLevelRange(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_Bounds(This,value) \
    ( (This)->lpVtbl->get_Bounds(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_Bounds(This,value) \
    ( (This)->lpVtbl->put_Bounds(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_AllowOverstretch(This,value) \
    ( (This)->lpVtbl->get_AllowOverstretch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_AllowOverstretch(This,value) \
    ( (This)->lpVtbl->put_AllowOverstretch(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_IsFadingEnabled(This,value) \
    ( (This)->lpVtbl->get_IsFadingEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_IsFadingEnabled(This,value) \
    ( (This)->lpVtbl->put_IsFadingEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_IsTransparencyEnabled(This,value) \
    ( (This)->lpVtbl->get_IsTransparencyEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_IsTransparencyEnabled(This,value) \
    ( (This)->lpVtbl->put_IsTransparencyEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_IsRetryEnabled(This,value) \
    ( (This)->lpVtbl->get_IsRetryEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_IsRetryEnabled(This,value) \
    ( (This)->lpVtbl->put_IsRetryEnabled(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_ZIndex(This,value) \
    ( (This)->lpVtbl->get_ZIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_ZIndex(This,value) \
    ( (This)->lpVtbl->put_ZIndex(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_TilePixelSize(This,value) \
    ( (This)->lpVtbl->get_TilePixelSize(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_TilePixelSize(This,value) \
    ( (This)->lpVtbl->put_TilePixelSize(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_get_Visible(This,value) \
    ( (This)->lpVtbl->get_Visible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_put_Visible(This,value) \
    ( (This)->lpVtbl->put_Visible(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSource2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSource2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSource2";
/* [object, uuid("8E65EBBD-4095-5C15-99F1-1260B4E8B0A9"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnimationState )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapTileAnimationState * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AutoPlay )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameCount )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FrameCount )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameDuration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [retval, out] */__RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FrameDuration )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    HRESULT ( STDMETHODCALLTYPE *Pause )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Play )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This
        );
    HRESULT ( STDMETHODCALLTYPE *Stop )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2 * This
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_get_AnimationState(This,value) \
    ( (This)->lpVtbl->get_AnimationState(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_get_AutoPlay(This,value) \
    ( (This)->lpVtbl->get_AutoPlay(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_put_AutoPlay(This,value) \
    ( (This)->lpVtbl->put_AutoPlay(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_get_FrameCount(This,value) \
    ( (This)->lpVtbl->get_FrameCount(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_put_FrameCount(This,value) \
    ( (This)->lpVtbl->put_FrameCount(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_get_FrameDuration(This,value) \
    ( (This)->lpVtbl->get_FrameDuration(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_put_FrameDuration(This,value) \
    ( (This)->lpVtbl->put_FrameDuration(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_Pause(This) \
    ( (This)->lpVtbl->Pause(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_Play(This) \
    ( (This)->lpVtbl->Play(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_Stop(This) \
    ( (This)->lpVtbl->Stop(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceFactory";
/* [object, uuid("CD7F811F-77FA-482B-9D34-71D31D465C48"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDataSource )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * dataSource,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDataSourceAndZoomRange )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * dataSource,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange zoomLevelRange,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDataSourceZoomRangeAndBounds )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * dataSource,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange zoomLevelRange,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * bounds,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileDataSource * dataSource,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CMapZoomLevelRange zoomLevelRange,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeoboundingBox * bounds,
        /* [in] */INT32 tileSizeInPixels,
        /* [in] */__RPC__in_opt IInspectable * baseInterface,
        /* [out] */__RPC__deref_out_opt IInspectable * * innerInterface,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSource * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_CreateInstanceWithDataSource(This,dataSource,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDataSource(This,dataSource,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_CreateInstanceWithDataSourceAndZoomRange(This,dataSource,zoomLevelRange,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDataSourceAndZoomRange(This,dataSource,zoomLevelRange,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_CreateInstanceWithDataSourceZoomRangeAndBounds(This,dataSource,zoomLevelRange,bounds,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDataSourceZoomRangeAndBounds(This,dataSource,zoomLevelRange,bounds,baseInterface,innerInterface,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(This,dataSource,zoomLevelRange,bounds,tileSizeInPixels,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDataSourceZoomRangeBoundsAndTileSize(This,dataSource,zoomLevelRange,bounds,tileSizeInPixels,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceStatics[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics";
/* [object, uuid("93FCC93C-7035-4603-99B1-E659921B6093"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataSourceProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LayerProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevelRangeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BoundsProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowOverstretchProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsFadingEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTransparencyEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsRetryEnabledProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZIndexProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TilePixelSizeProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VisibleProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_DataSourceProperty(This,value) \
    ( (This)->lpVtbl->get_DataSourceProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_LayerProperty(This,value) \
    ( (This)->lpVtbl->get_LayerProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_ZoomLevelRangeProperty(This,value) \
    ( (This)->lpVtbl->get_ZoomLevelRangeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_BoundsProperty(This,value) \
    ( (This)->lpVtbl->get_BoundsProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_AllowOverstretchProperty(This,value) \
    ( (This)->lpVtbl->get_AllowOverstretchProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_IsFadingEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsFadingEnabledProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_IsTransparencyEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsTransparencyEnabledProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_IsRetryEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsRetryEnabledProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_ZIndexProperty(This,value) \
    ( (This)->lpVtbl->get_ZIndexProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_TilePixelSizeProperty(This,value) \
    ( (This)->lpVtbl->get_TilePixelSizeProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_get_VisibleProperty(This,value) \
    ( (This)->lpVtbl->get_VisibleProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileSourceStatics2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2";
/* [object, uuid("75CDD47E-669C-50FD-AD85-5EA5174CF59B"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnimationStateProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AutoPlayProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameCountProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameDurationProperty )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2 * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_get_AnimationStateProperty(This,value) \
    ( (This)->lpVtbl->get_AnimationStateProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_get_AutoPlayProperty(This,value) \
    ( (This)->lpVtbl->get_AutoPlayProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_get_FrameCountProperty(This,value) \
    ( (This)->lpVtbl->get_FrameCountProperty(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_get_FrameDurationProperty(This,value) \
    ( (This)->lpVtbl->get_FrameDurationProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileSourceStatics2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequest
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequest[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest";
/* [object, uuid("17402335-3127-45B8-87A7-99F87D4E2745"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Uri )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * * result
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_get_Uri(This,value) \
    ( (This)->lpVtbl->get_Uri(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_put_Uri(This,value) \
    ( (This)->lpVtbl->put_Uri(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_GetDeferral(This,result) \
    ( (This)->lpVtbl->GetDeferral(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral";
/* [object, uuid("C117ADE0-BF3E-4C51-8FAA-4B593CF68EB2"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral * This
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferralVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferralVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_Complete(This) \
    ( (This)->lpVtbl->Complete(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestDeferral_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs";
/* [object, uuid("D2147B43-1BBF-4B98-8DD3-B7834E407E0D"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_X )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Y )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomLevel )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Request )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequest * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_get_X(This,value) \
    ( (This)->lpVtbl->get_X(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_get_Y(This,value) \
    ( (This)->lpVtbl->get_Y(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_get_ZoomLevel(This,value) \
    ( (This)->lpVtbl->get_ZoomLevel(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_get_Request(This,value) \
    ( (This)->lpVtbl->get_Request(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IMapTileUriRequestedEventArgs2[] = L"Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2";
/* [object, uuid("2302185D-33B5-5A55-92F5-74A86A22EFA6"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FrameIndex )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2 * This,
        /* [retval, out] */__RPC__out INT32 * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2Vtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_get_FrameIndex(This,value) \
    ( (This)->lpVtbl->get_FrameIndex(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIMapTileUriRequestedEventArgs2_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsideExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsideExperience[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsideExperience";
/* [object, uuid("A558AEC9-E30C-46C8-8116-484691675558"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AddressTextVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AddressTextVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CursorVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CursorVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OverviewMapVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OverviewMapVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StreetLabelsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StreetLabelsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExitButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ExitButtonVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ZoomButtonsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [retval, out] */__RPC__out boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ZoomButtonsVisible )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_AddressTextVisible(This,value) \
    ( (This)->lpVtbl->get_AddressTextVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_AddressTextVisible(This,value) \
    ( (This)->lpVtbl->put_AddressTextVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_CursorVisible(This,value) \
    ( (This)->lpVtbl->get_CursorVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_CursorVisible(This,value) \
    ( (This)->lpVtbl->put_CursorVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_OverviewMapVisible(This,value) \
    ( (This)->lpVtbl->get_OverviewMapVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_OverviewMapVisible(This,value) \
    ( (This)->lpVtbl->put_OverviewMapVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_StreetLabelsVisible(This,value) \
    ( (This)->lpVtbl->get_StreetLabelsVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_StreetLabelsVisible(This,value) \
    ( (This)->lpVtbl->put_StreetLabelsVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_ExitButtonVisible(This,value) \
    ( (This)->lpVtbl->get_ExitButtonVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_ExitButtonVisible(This,value) \
    ( (This)->lpVtbl->put_ExitButtonVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_get_ZoomButtonsVisible(This,value) \
    ( (This)->lpVtbl->get_ZoomButtonsVisible(This,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_put_ZoomButtonsVisible(This,value) \
    ( (This)->lpVtbl->put_ZoomButtonsVisible(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsideExperienceFactory[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory";
/* [object, uuid("7A5BCF3C-649E-4342-9995-68A6CF5961A7"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithPanorama )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * panorama,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithPanoramaHeadingPitchAndFieldOfView )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * panorama,
        /* [in] */DOUBLE headingInDegrees,
        /* [in] */DOUBLE pitchInDegrees,
        /* [in] */DOUBLE fieldOfViewInDegrees,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperience * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactoryVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_CreateInstanceWithPanorama(This,panorama,value) \
    ( (This)->lpVtbl->CreateInstanceWithPanorama(This,panorama,value) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(This,panorama,headingInDegrees,pitchInDegrees,fieldOfViewInDegrees,value) \
    ( (This)->lpVtbl->CreateInstanceWithPanoramaHeadingPitchAndFieldOfView(This,panorama,headingInDegrees,pitchInDegrees,fieldOfViewInDegrees,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsideExperienceFactory_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsidePanorama[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama";
/* [object, uuid("6FE00FD8-AD60-4664-B539-B1069F16C5AF"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Location )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama * This,
        /* [retval, out] */__RPC__deref_out_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * * value
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_get_Location(This,value) \
    ( (This)->lpVtbl->get_Location(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanorama_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Controls_Maps_IStreetsidePanoramaStatics[] = L"Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics";
/* [object, uuid("D3B47F69-54B3-4EC5-B2A0-4F8204576507"), exclusiveto, contract] */
typedef struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *FindNearbyWithLocationAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *FindNearbyWithLocationAndRadiusAsync )(
        __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics * This,
        /* [in] */__RPC__in_opt __x_ABI_CWindows_CDevices_CGeolocation_CIGeopoint * location,
        /* [in] */DOUBLE radiusInMeters,
        /* [retval, out] */__RPC__deref_out_opt __FIAsyncOperation_1_Windows__CUI__CXaml__CControls__CMaps__CStreetsidePanorama * * operation
        );
    END_INTERFACE
    
} __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStaticsVtbl;

interface __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FindNearbyWithLocationAsync(This,location,operation) \
    ( (This)->lpVtbl->FindNearbyWithLocationAsync(This,location,operation) )

#define __x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_FindNearbyWithLocationAndRadiusAsync(This,location,radiusInMeters,operation) \
    ( (This)->lpVtbl->FindNearbyWithLocationAndRadiusAsync(This,location,radiusInMeters,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics;
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CControls_CMaps_CIStreetsidePanoramaStatics_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.ICustomMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_CustomMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.CustomMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IHttpMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_HttpMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.HttpMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.ILocalMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_LocalMapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.LocalMapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapBillboard
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapBillboardFactory interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapBillboardStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapBillboard ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapBillboard_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapBillboard_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapBillboard[] = L"Windows.UI.Xaml.Controls.Maps.MapBillboard";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCamera
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapCameraFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCamera ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCamera_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCamera_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCamera[] = L"Windows.UI.Xaml.Controls.Maps.MapCamera";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapContextRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapContextRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics8 interface starting with version 8.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics7 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics6 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics5 interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics4 interface starting with version 3.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControl ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapControl2
 *    Windows.UI.Xaml.Controls.Maps.IMapControl3
 *    Windows.UI.Xaml.Controls.Maps.IMapControl4
 *    Windows.UI.Xaml.Controls.Maps.IMapControl5
 *    Windows.UI.Xaml.Controls.Maps.IMapControl6
 *    Windows.UI.Xaml.Controls.Maps.IMapControl7
 *    Windows.UI.Xaml.Controls.Maps.IMapControl8
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControl[] = L"Windows.UI.Xaml.Controls.Maps.MapControl";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkClickEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerEnteredEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkPointerExitedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlBusinessLandmarkRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlBusinessLandmarkRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlBusinessLandmarkRightTappedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlDataHelper
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperFactory interface starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapControlDataHelperStatics interface starting with version 4.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapControlDataHelper2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlDataHelper[] = L"Windows.UI.Xaml.Controls.Maps.MapControlDataHelper";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureClickEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerEnteredEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 3.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 3.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeaturePointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeaturePointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeaturePointerExitedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x30000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs
 *
 * Introduced to Windows.Services.Maps.LocalSearchContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Services.Maps.LocalSearchContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapControlTransitFeatureRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapControlTransitFeatureRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapControlTransitFeatureRightTappedEventArgs";
#endif
#endif // WINDOWS_SERVICES_MAPS_LOCALSEARCHCONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCustomExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCustomExperience ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperience_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperience_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCustomExperience[] = L"Windows.UI.Xaml.Controls.Maps.MapCustomExperience";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElement
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics4 interface starting with version 6.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics3 interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElement ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapElement2
 *    Windows.UI.Xaml.Controls.Maps.IMapElement3
 *    Windows.UI.Xaml.Controls.Maps.IMapElement4
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElement[] = L"Windows.UI.Xaml.Controls.Maps.MapElement";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElement3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElement3DStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElement3D ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement3D_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElement3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElement3D[] = L"Windows.UI.Xaml.Controls.Maps.MapElement3D";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapElementsLayerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayer[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerClickEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerClickEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerClickEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerContextRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerContextRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerContextRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerEnteredEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerEnteredEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerEnteredEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapElementsLayerPointerExitedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapElementsLayerPointerExitedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapElementsLayerPointerExitedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapIcon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapIconStatics2 interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapIconStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapIcon ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapIcon2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapIcon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapIcon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapIcon[] = L"Windows.UI.Xaml.Controls.Maps.MapIcon";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapInputEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapItemsControl
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapItemsControlStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapItemsControl ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapItemsControl_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapItemsControl_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapItemsControl[] = L"Windows.UI.Xaml.Controls.Maps.MapItemsControl";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapLayer
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapLayerStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapLayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapLayer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapLayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapLayer[] = L"Windows.UI.Xaml.Controls.Maps.MapLayer";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapModel3D
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapModel3DStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapModel3D ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapModel3D_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapModel3D_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapModel3D[] = L"Windows.UI.Xaml.Controls.Maps.MapModel3D";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapPolygon
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapPolygonStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapPolygon ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapPolygon2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolygon_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolygon_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapPolygon[] = L"Windows.UI.Xaml.Controls.Maps.MapPolygon";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapPolyline
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapPolylineStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapPolyline ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolyline_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapPolyline_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapPolyline[] = L"Windows.UI.Xaml.Controls.Maps.MapPolyline";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 2.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 2.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x20000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapRouteView
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapRouteView ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRouteView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapRouteView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapRouteView[] = L"Windows.UI.Xaml.Controls.Maps.MapRouteView";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapScene
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapSceneStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapScene ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapScene_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapScene_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapScene[] = L"Windows.UI.Xaml.Controls.Maps.MapScene";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheet
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetStatics interface starting with version 4.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapStyleSheet ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheet_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheet[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheet";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntriesStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntries[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntries";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 5.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapStyleSheetEntryStatesStatics interface starting with version 5.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapStyleSheetEntryStates[] = L"Windows.UI.Xaml.Controls.Maps.MapStyleSheetEntryStates";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x50000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequest ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequest[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequest";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestDeferral ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileBitmapRequestedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileBitmapRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTileBitmapRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileDataSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileDataSource ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileDataSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileDataSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileDataSource[] = L"Windows.UI.Xaml.Controls.Maps.MapTileDataSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileSource
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics2 interface starting with version 7.0 of the Windows.Foundation.UniversalApiContract API contract
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IMapTileSourceStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileSource ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileSource2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileSource[] = L"Windows.UI.Xaml.Controls.Maps.MapTileSource";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequest
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequest ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequest[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequest";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestDeferral ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestDeferral[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequestDeferral";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs ** Default Interface **
 *    Windows.UI.Xaml.Controls.Maps.IMapTileUriRequestedEventArgs2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_MapTileUriRequestedEventArgs[] = L"Windows.UI.Xaml.Controls.Maps.MapTileUriRequestedEventArgs";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.StreetsideExperience
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Windows.UI.Xaml.Controls.Maps.IStreetsideExperienceFactory interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IStreetsideExperience ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsideExperience_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsideExperience_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_StreetsideExperience[] = L"Windows.UI.Xaml.Controls.Maps.StreetsideExperience";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Windows.UI.Xaml.Controls.Maps.StreetsidePanorama
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Windows.UI.Xaml.Controls.Maps.IStreetsidePanoramaStatics interface starting with version 1.0 of the Windows.Foundation.UniversalApiContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.UI.Xaml.Controls.Maps.IStreetsidePanorama ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Controls_Maps_StreetsidePanorama[] = L"Windows.UI.Xaml.Controls.Maps.StreetsidePanorama";
#endif
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000






#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
// Restore the original value of the 'DEPRECATED' macro
#pragma pop_macro("DEPRECATED")

#ifdef __clang__
#pragma clang diagnostic pop // deprecated-declarations
#else
#pragma warning(pop)
#endif
#endif // __windows2Eui2Examl2Econtrols2Emaps_p_h__

#endif // __windows2Eui2Examl2Econtrols2Emaps_h__
