

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for wmseventlog.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __wmseventlog_h__
#define __wmseventlog_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IWMSEventLog_FWD_DEFINED__
#define __IWMSEventLog_FWD_DEFINED__
typedef interface IWMSEventLog IWMSEventLog;
#endif 	/* __IWMSEventLog_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "WMSNamedValues.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_wmseventlog_0000_0000 */
/* [local] */ 

//*****************************************************************************
//
// Microsoft Windows Media
// Copyright (C) Microsoft Corporation. All rights reserved.
//
// Automatically generated by Midl from wmseventlog.idl
//
// DO NOT EDIT THIS FILE.
//
//*****************************************************************************
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
EXTERN_GUID( IID_IWMSEventLog, 0x7a0dcfb1, 0x47af, 0x11d2, 0x9e, 0xff, 0x00, 0x60, 0x97, 0xd2, 0xd7, 0xcf );


extern RPC_IF_HANDLE __MIDL_itf_wmseventlog_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_wmseventlog_0000_0000_v0_0_s_ifspec;

#ifndef __IWMSEventLog_INTERFACE_DEFINED__
#define __IWMSEventLog_INTERFACE_DEFINED__

/* interface IWMSEventLog */
/* [unique][version][helpstring][dual][uuid][object] */ 

typedef /* [uuid][public] */  DECLSPEC_UUID("940488C2-8F93-41c1-BBEB-43D1B48D084B") 
enum WMS_EVENT_LOG_LEVEL
    {	WMS_EVENT_LOG_LEVEL_ERROR	= 0x1,
	WMS_EVENT_LOG_LEVEL_WARNING	= 0x2,
	WMS_EVENT_LOG_LEVEL_INFORMATION	= 0x4
    } 	WMS_EVENT_LOG_LEVEL;


EXTERN_C const IID IID_IWMSEventLog;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7A0DCFB1-47AF-11d2-9EFF-006097D2D7CF")
    IWMSEventLog : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LogEvent( 
            /* [in] */ __RPC__in_opt IWMSNamedValues *pPluginNamedValues,
            /* [in] */ WMS_EVENT_LOG_LEVEL ErrorLevel,
            /* [in] */ long lErrorCode,
            /* [in] */ __RPC__in BSTR bstrAdditionalInfo) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWMSEventLogVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWMSEventLog * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWMSEventLog * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWMSEventLog * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IWMSEventLog * This,
            /* [out] */ __RPC__out UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IWMSEventLog * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ __RPC__deref_out_opt ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IWMSEventLog * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [size_is][in] */ __RPC__in_ecount_full(cNames) LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ __RPC__out_ecount_full(cNames) DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IWMSEventLog * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LogEvent )( 
            IWMSEventLog * This,
            /* [in] */ __RPC__in_opt IWMSNamedValues *pPluginNamedValues,
            /* [in] */ WMS_EVENT_LOG_LEVEL ErrorLevel,
            /* [in] */ long lErrorCode,
            /* [in] */ __RPC__in BSTR bstrAdditionalInfo);
        
        END_INTERFACE
    } IWMSEventLogVtbl;

    interface IWMSEventLog
    {
        CONST_VTBL struct IWMSEventLogVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWMSEventLog_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWMSEventLog_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWMSEventLog_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWMSEventLog_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IWMSEventLog_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IWMSEventLog_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IWMSEventLog_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IWMSEventLog_LogEvent(This,pPluginNamedValues,ErrorLevel,lErrorCode,bstrAdditionalInfo)	\
    ( (This)->lpVtbl -> LogEvent(This,pPluginNamedValues,ErrorLevel,lErrorCode,bstrAdditionalInfo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWMSEventLog_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif



