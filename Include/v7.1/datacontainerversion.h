

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for datacontainerversion.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __datacontainerversion_h__
#define __datacontainerversion_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IWMSDataContainerVersion_FWD_DEFINED__
#define __IWMSDataContainerVersion_FWD_DEFINED__
typedef interface IWMSDataContainerVersion IWMSDataContainerVersion;
#endif 	/* __IWMSDataContainerVersion_FWD_DEFINED__ */


/* header files for imported files */
#include "objidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_datacontainerversion_0000_0000 */
/* [local] */ 

//*****************************************************************************
//
// Microsoft Windows Media
// Copyright (C) Microsoft Corporation. All rights reserved.
//
// Automatically generated by Midl from datacontainerversion.idl
//
// DO NOT EDIT THIS FILE.
//
//*****************************************************************************
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
EXTERN_GUID( IID_IWMSDataContainerVersion, 0x3AE75C14,0x2B3A,0x11d2,0x9E,0xF7,0x00,0x60,0x97,0xD2,0xD7,0xCF );
typedef /* [public] */ 
enum WMS_DATA_CONTAINER_VERSION_CACHE_FLAGS
    {	WMS_DATA_CONTAINER_VERSION_ALLOW_PROXY_CACHING	= 0x1,
	WMS_DATA_CONTAINER_VERSION_ALLOW_PLAYER_CACHING	= 0x2,
	WMS_DATA_CONTAINER_VERSION_ALLOW_STREAM_SPLITTING	= 0x4
    } 	WMS_DATA_CONTAINER_VERSION_CACHE_FLAGS;



extern RPC_IF_HANDLE __MIDL_itf_datacontainerversion_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_datacontainerversion_0000_0000_v0_0_s_ifspec;

#ifndef __IWMSDataContainerVersion_INTERFACE_DEFINED__
#define __IWMSDataContainerVersion_INTERFACE_DEFINED__

/* interface IWMSDataContainerVersion */
/* [helpstring][version][uuid][unique][object] */ 


EXTERN_C const IID IID_IWMSDataContainerVersion;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3AE75C14-2B3A-11d2-9EF7-006097D2D7CF")
    IWMSDataContainerVersion : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetLastModifiedTime( 
            /* [out] */ __RPC__out DATE *pdateLastModifiedTime) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetLastModifiedTime( 
            /* [in] */ DATE dateLastModifiedTime) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetExpirationTime( 
            /* [out] */ __RPC__out DATE *pdateExpirationTime) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetExpirationTime( 
            /* [in] */ DATE dateExpirationTime) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCacheFlags( 
            /* [out] */ __RPC__out long *plFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCacheFlags( 
            /* [in] */ long lFlags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetContentSize( 
            /* [out] */ __RPC__out long *plContentSizeLow,
            /* [out] */ __RPC__out long *plContentSizeHigh) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetContentSize( 
            /* [in] */ long lContentSizeLow,
            /* [in] */ long lContentSizeHigh) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetEntityTagCount( 
            /* [out] */ __RPC__out long *plNumEntityTags) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetEntityTag( 
            /* [in] */ long lTagNum,
            /* [out] */ __RPC__deref_out_opt BSTR *pszEntityTag) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetEntityTag( 
            /* [in] */ __RPC__in BSTR szEntityTag) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Compare( 
            /* [in] */ __RPC__in_opt IWMSDataContainerVersion *pVersion,
            /* [out] */ __RPC__out VARIANT_BOOL *pvfEqual) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWMSDataContainerVersionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWMSDataContainerVersion * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWMSDataContainerVersion * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWMSDataContainerVersion * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetLastModifiedTime )( 
            IWMSDataContainerVersion * This,
            /* [out] */ __RPC__out DATE *pdateLastModifiedTime);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetLastModifiedTime )( 
            IWMSDataContainerVersion * This,
            /* [in] */ DATE dateLastModifiedTime);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetExpirationTime )( 
            IWMSDataContainerVersion * This,
            /* [out] */ __RPC__out DATE *pdateExpirationTime);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetExpirationTime )( 
            IWMSDataContainerVersion * This,
            /* [in] */ DATE dateExpirationTime);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCacheFlags )( 
            IWMSDataContainerVersion * This,
            /* [out] */ __RPC__out long *plFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCacheFlags )( 
            IWMSDataContainerVersion * This,
            /* [in] */ long lFlags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetContentSize )( 
            IWMSDataContainerVersion * This,
            /* [out] */ __RPC__out long *plContentSizeLow,
            /* [out] */ __RPC__out long *plContentSizeHigh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetContentSize )( 
            IWMSDataContainerVersion * This,
            /* [in] */ long lContentSizeLow,
            /* [in] */ long lContentSizeHigh);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetEntityTagCount )( 
            IWMSDataContainerVersion * This,
            /* [out] */ __RPC__out long *plNumEntityTags);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetEntityTag )( 
            IWMSDataContainerVersion * This,
            /* [in] */ long lTagNum,
            /* [out] */ __RPC__deref_out_opt BSTR *pszEntityTag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetEntityTag )( 
            IWMSDataContainerVersion * This,
            /* [in] */ __RPC__in BSTR szEntityTag);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IWMSDataContainerVersion * This,
            /* [in] */ __RPC__in_opt IWMSDataContainerVersion *pVersion,
            /* [out] */ __RPC__out VARIANT_BOOL *pvfEqual);
        
        END_INTERFACE
    } IWMSDataContainerVersionVtbl;

    interface IWMSDataContainerVersion
    {
        CONST_VTBL struct IWMSDataContainerVersionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWMSDataContainerVersion_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWMSDataContainerVersion_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWMSDataContainerVersion_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWMSDataContainerVersion_GetLastModifiedTime(This,pdateLastModifiedTime)	\
    ( (This)->lpVtbl -> GetLastModifiedTime(This,pdateLastModifiedTime) ) 

#define IWMSDataContainerVersion_SetLastModifiedTime(This,dateLastModifiedTime)	\
    ( (This)->lpVtbl -> SetLastModifiedTime(This,dateLastModifiedTime) ) 

#define IWMSDataContainerVersion_GetExpirationTime(This,pdateExpirationTime)	\
    ( (This)->lpVtbl -> GetExpirationTime(This,pdateExpirationTime) ) 

#define IWMSDataContainerVersion_SetExpirationTime(This,dateExpirationTime)	\
    ( (This)->lpVtbl -> SetExpirationTime(This,dateExpirationTime) ) 

#define IWMSDataContainerVersion_GetCacheFlags(This,plFlags)	\
    ( (This)->lpVtbl -> GetCacheFlags(This,plFlags) ) 

#define IWMSDataContainerVersion_SetCacheFlags(This,lFlags)	\
    ( (This)->lpVtbl -> SetCacheFlags(This,lFlags) ) 

#define IWMSDataContainerVersion_GetContentSize(This,plContentSizeLow,plContentSizeHigh)	\
    ( (This)->lpVtbl -> GetContentSize(This,plContentSizeLow,plContentSizeHigh) ) 

#define IWMSDataContainerVersion_SetContentSize(This,lContentSizeLow,lContentSizeHigh)	\
    ( (This)->lpVtbl -> SetContentSize(This,lContentSizeLow,lContentSizeHigh) ) 

#define IWMSDataContainerVersion_GetEntityTagCount(This,plNumEntityTags)	\
    ( (This)->lpVtbl -> GetEntityTagCount(This,plNumEntityTags) ) 

#define IWMSDataContainerVersion_GetEntityTag(This,lTagNum,pszEntityTag)	\
    ( (This)->lpVtbl -> GetEntityTag(This,lTagNum,pszEntityTag) ) 

#define IWMSDataContainerVersion_SetEntityTag(This,szEntityTag)	\
    ( (This)->lpVtbl -> SetEntityTag(This,szEntityTag) ) 

#define IWMSDataContainerVersion_Compare(This,pVersion,pvfEqual)	\
    ( (This)->lpVtbl -> Compare(This,pVersion,pvfEqual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWMSDataContainerVersion_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree(     unsigned long *, BSTR * ); 

unsigned long             __RPC_USER  BSTR_UserSize64(     unsigned long *, unsigned long            , BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserMarshal64(  unsigned long *, unsigned char *, BSTR * ); 
unsigned char * __RPC_USER  BSTR_UserUnmarshal64(unsigned long *, unsigned char *, BSTR * ); 
void                      __RPC_USER  BSTR_UserFree64(     unsigned long *, BSTR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif



