//***************************************************************************** 
// 
// Microsoft Windows Media 
// Copyright (C) Microsoft Corporation. All rights reserved. 
//
// FileName:            wmsincomingcounter.idl
//
// Abstract:
//
//*****************************************************************************

cpp_quote("//*****************************************************************************") 
cpp_quote("//") 
cpp_quote("// Microsoft Windows Media") 
cpp_quote("// Copyright (C) Microsoft Corporation. All rights reserved.") 
cpp_quote("//")
cpp_quote("// Automatically generated by Midl from wmsincoming.idl" )
cpp_quote("//")
cpp_quote("// DO NOT EDIT THIS FILE.")
cpp_quote("//")
cpp_quote("//*****************************************************************************") 

import "oaidl.idl";

cpp_quote("#ifndef _IWMSIncomingCounters")
cpp_quote("#define _IWMSIncomingCounters")

typedef unsigned __int64    QWORD;


cpp_quote( "EXTERN_GUID( IID_IWMSIncomingCounters , 0xeded53ed,0x43b7,0x45ce,0x9c,0xbb,0xa8,0x72,0x92,0x3f,0x6a,0xae );" )


//////////////////////////////////////////////////////////////////////////
[
    local,
    object,
    uuid(EDED53ED-43B7-45ce-9CBB-A872923F6AAE),
    helpstring("Provides methods for updating incoming counters."),
    version(1.0),
    pointer_default(unique)
]
//////////////////////////////////////////////////////////////////////////
interface IWMSIncomingCounters : IUnknown
{
    [helpstring("Allocates bandwidth, in Kbps, for an incoming connection client.")]
    HRESULT AllocateRequestedBandwidth( [in] DWORD dwAllocatedBandwidth );

	[helpstring("Adds the number of bytes received from an incoming connection client to the incoming bytes counter.")]
    HRESULT AddIncomingData( [in] DWORD dwDataLen );

    [helpstring("Decrements the incoming bandwidth counter by the bandwidth associated with an incoming connection client.")]
    HRESULT ClearIncomingStats( void );
};

cpp_quote("#endif")


