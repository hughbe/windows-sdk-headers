//***************************************************************************** 
// 
// Microsoft Windows Media 
// Copyright (C) Microsoft Corporation. All rights reserved. 
//
// FileName:            wmseventlog.idl
//
// Abstract:
//
//*****************************************************************************

cpp_quote("//*****************************************************************************") 
cpp_quote("//") 
cpp_quote("// Microsoft Windows Media") 
cpp_quote("// Copyright (C) Microsoft Corporation. All rights reserved.") 
cpp_quote("//")
cpp_quote("// Automatically generated by Midl from wmseventlog.idl" )
cpp_quote("//")
cpp_quote("// DO NOT EDIT THIS FILE.")
cpp_quote("//")
cpp_quote("//*****************************************************************************") 

cpp_quote("#if _MSC_VER > 1000")
cpp_quote("#pragma once")
cpp_quote("#endif // _MSC_VER > 1000")

import "oaidl.idl";
import "WMSNamedValues.idl";

cpp_quote( "EXTERN_GUID( IID_IWMSEventLog, 0x7a0dcfb1, 0x47af, 0x11d2, 0x9e, 0xff, 0x00, 0x60, 0x97, 0xd2, 0xd7, 0xcf );" )

/////////////////////////////////////////////////////////////////////////////
// IWMSEventLog
[
    object,
    uuid(7A0DCFB1-47AF-11d2-9EFF-006097D2D7CF),
    dual,
    helpstring("Provides a method that allows plug-ins to log events."),
    version(9.0),
    pointer_default(unique)
]
interface IWMSEventLog : IDispatch
{
    typedef [public, uuid(940488C2-8F93-41c1-BBEB-43D1B48D084B)] enum WMS_EVENT_LOG_LEVEL
    {
        WMS_EVENT_LOG_LEVEL_ERROR           = 0x0001,
        WMS_EVENT_LOG_LEVEL_WARNING         = 0x0002,
        WMS_EVENT_LOG_LEVEL_INFORMATION     = 0x0004
    } WMS_EVENT_LOG_LEVEL;

    [id(1), helpstring("Sends an event to the Windows application event log.")]
    HRESULT LogEvent(
                [in] IWMSNamedValues       *pPluginNamedValues,
                [in] WMS_EVENT_LOG_LEVEL    ErrorLevel,
                [in] long                   lErrorCode,
                [in] BSTR                   bstrAdditionalInfo
                );
};





