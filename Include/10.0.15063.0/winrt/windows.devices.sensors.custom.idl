//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0018
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        apicontract UniversalApiContract;
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sensors
        {
            namespace Custom
            {
                interface ICustomSensor;

                interface ICustomSensorReading;

                interface ICustomSensorReadingChangedEventArgs;

                interface ICustomSensorStatics;

                runtimeclass CustomSensor;

                runtimeclass CustomSensorReading;

                runtimeclass CustomSensorReadingChangedEventArgs;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Sensors
        {
            namespace Custom
            {
                declare
                {
                    interface Windows.Foundation.IAsyncOperation<Windows.Devices.Sensors.Custom.CustomSensor*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.Devices.Sensors.Custom.CustomSensor*, Windows.Devices.Sensors.Custom.CustomSensorReadingChangedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Sensors
        {
            namespace Custom
            {
                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.Devices.Sensors.Custom.CustomSensor)]
                [uuid(A136F9AD-4034-4B4D-99DD-531AAC649C09)]
                interface ICustomSensor : IInspectable
                {
                    HRESULT GetCurrentReading([out] [retval] Windows.Devices.Sensors.Custom.CustomSensorReading** value);
                    [propget] HRESULT MinimumReportInterval([out] [retval] UINT32* value);
                    [propput] HRESULT ReportInterval([in] UINT32 value);
                    [propget] HRESULT ReportInterval([out] [retval] UINT32* value);
                    [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                    [eventadd] HRESULT ReadingChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Sensors.Custom.CustomSensor*, Windows.Devices.Sensors.Custom.CustomSensorReadingChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ReadingChanged([in] EventRegistrationToken token);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.Devices.Sensors.Custom.CustomSensorReading)]
                [uuid(64004F4D-446A-4366-A87A-5F963268EC53)]
                interface ICustomSensorReading : IInspectable
                {
                    [propget] HRESULT Timestamp([out] [retval] Windows.Foundation.DateTime* value);
                    [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.Devices.Sensors.Custom.CustomSensorReadingChangedEventArgs)]
                [uuid(6B202023-CFFD-4CC1-8FF0-E21823D76FCC)]
                interface ICustomSensorReadingChangedEventArgs : IInspectable
                {
                    [propget] HRESULT Reading([out] [retval] Windows.Devices.Sensors.Custom.CustomSensorReading** value);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [exclusiveto(Windows.Devices.Sensors.Custom.CustomSensor)]
                [uuid(992052CF-F422-4C7D-836B-E7DC74A7124B)]
                interface ICustomSensorStatics : IInspectable
                {
                    HRESULT GetDeviceSelector([in] GUID interfaceId, [out] [retval] HSTRING* result);
                    HRESULT FromIdAsync([in] HSTRING sensorId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Sensors.Custom.CustomSensor*>** result);
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Windows.Devices.Sensors.Custom.ICustomSensorStatics, Windows.Foundation.UniversalApiContract, 1.0)]
                [threading(both)]
                runtimeclass CustomSensor
                {
                    [default] interface Windows.Devices.Sensors.Custom.ICustomSensor;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CustomSensorReading
                {
                    [default] interface Windows.Devices.Sensors.Custom.ICustomSensorReading;
                }

                [contract(Windows.Foundation.UniversalApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CustomSensorReadingChangedEventArgs
                {
                    [default] interface Windows.Devices.Sensors.Custom.ICustomSensorReadingChangedEventArgs;
                }
            }
        }
    }
}
