//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0015
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Devices.Geolocation.idl";
import "Windows.Globalization.idl";
import "Windows.Services.Maps.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edevices2Egeolocation_h__)")
cpp_quote("#include <Windows.Devices.Geolocation.h>")
cpp_quote("#endif // !defined(__windows2Edevices2Egeolocation_h__)")
cpp_quote("#if !defined(__windows2Eglobalization_h__)")
cpp_quote("#include <Windows.Globalization.h>")
cpp_quote("#endif // !defined(__windows2Eglobalization_h__)")
cpp_quote("#if !defined(__windows2Eservices2Emaps_h__)")
cpp_quote("#include <Windows.Services.Maps.h>")
cpp_quote("#endif // !defined(__windows2Eservices2Emaps_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            runtimeclass Geocircle;

            runtimeclass Geopoint;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Globalization
    {
        typedef enum DayOfWeek DayOfWeek;
    }
}
namespace Windows
{
    namespace Services
    {
        namespace Maps
        {
            runtimeclass MapAddress;
        }
    }
}
namespace Windows
{
    namespace Services
    {
        namespace Maps
        {
            namespace LocalSearch
            {
                typedef enum LocalLocationFinderStatus LocalLocationFinderStatus;

                interface ILocalCategoriesStatics;

                interface ILocalLocation;

                interface ILocalLocation2;

                interface ILocalLocationFinderResult;

                interface ILocalLocationFinderStatics;

                interface ILocalLocationHoursOfOperationItem;

                interface ILocalLocationRatingInfo;

                runtimeclass LocalCategories;

                runtimeclass LocalLocation;

                runtimeclass LocalLocationFinder;

                runtimeclass LocalLocationFinderResult;

                runtimeclass LocalLocationHoursOfOperationItem;

                runtimeclass LocalLocationRatingInfo;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Services
    {
        namespace Maps
        {
            namespace LocalSearch
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.Services.Maps.LocalSearch.LocalLocation*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.Services.Maps.LocalSearch.LocalLocation*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.Services.Maps.LocalSearch.LocalLocation*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem*>;

                    interface Windows.Foundation.IAsyncOperation<Windows.Services.Maps.LocalSearch.LocalLocationFinderResult*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Services
    {
        namespace Maps
        {
            namespace LocalSearch
            {
                [version(0x0A000000)]
                enum LocalLocationFinderStatus
                {
                    Success            = 0,
                    UnknownError       = 1,
                    InvalidCredentials = 2,
                    InvalidCategory    = 3,
                    InvalidSearchTerm  = 4,
                    InvalidSearchArea  = 5,
                    NetworkFailure     = 6,
                    NotSupported       = 7
                };

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalCategories)]
                [uuid(F49399F5-8261-4321-9974-EF92D49A8DCA)]
                [version(0x0A000000)]
                interface ILocalCategoriesStatics : IInspectable
                {
                    [propget] HRESULT BankAndCreditUnions([out] [retval] HSTRING* value);
                    [propget] HRESULT EatDrink([out] [retval] HSTRING* value);
                    [propget] HRESULT Hospitals([out] [retval] HSTRING* value);
                    [propget] HRESULT HotelsAndMotels([out] [retval] HSTRING* value);
                    [propget] HRESULT All([out] [retval] HSTRING* value);
                    [propget] HRESULT Parking([out] [retval] HSTRING* value);
                    [propget] HRESULT SeeDo([out] [retval] HSTRING* value);
                    [propget] HRESULT Shop([out] [retval] HSTRING* value);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocation)]
                [uuid(BB0FE9AB-4502-4F2C-94A9-0D60DE0E2163)]
                [version(0x0A000000)]
                interface ILocalLocation : IInspectable
                {
                    [propget] HRESULT Address([out] [retval] Windows.Services.Maps.MapAddress** value);
                    [propget] HRESULT Identifier([out] [retval] HSTRING* value);
                    [propget] HRESULT Description([out] [retval] HSTRING* value);
                    [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                    [propget] HRESULT Point([out] [retval] Windows.Devices.Geolocation.Geopoint** value);
                    [propget] HRESULT PhoneNumber([out] [retval] HSTRING* value);
                    [propget] HRESULT DataAttribution([out] [retval] HSTRING* value);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocation)]
                [uuid(6E9E307C-ECB5-4FFC-BB8C-BA50BA8C2DC6)]
                [version(0x0A000002)]
                interface ILocalLocation2 : IInspectable
                {
                    [propget] HRESULT Category([out] [retval] HSTRING* value);
                    [propget] HRESULT RatingInfo([out] [retval] Windows.Services.Maps.LocalSearch.LocalLocationRatingInfo** value);
                    [propget] HRESULT HoursOfOperation([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem*>** value);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocationFinderResult)]
                [uuid(D09B6CC6-F338-4191-9FD8-5440B9A68F52)]
                [version(0x0A000000)]
                interface ILocalLocationFinderResult : IInspectable
                {
                    [propget] HRESULT LocalLocations([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Maps.LocalSearch.LocalLocation*>** value);
                    [propget] HRESULT Status([out] [retval] Windows.Services.Maps.LocalSearch.LocalLocationFinderStatus* value);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocationFinder)]
                [uuid(D2EF7344-A0DE-48CA-81A8-07C7DCFD37AB)]
                [version(0x0A000000)]
                interface ILocalLocationFinderStatics : IInspectable
                {
                    HRESULT FindLocalLocationsAsync([in] HSTRING searchTerm, [in] Windows.Devices.Geolocation.Geocircle* searchArea, [in] HSTRING localCategory, [in] UINT32 maxResults, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Maps.LocalSearch.LocalLocationFinderResult*>** result);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocationHoursOfOperationItem)]
                [uuid(23548C72-A1C7-43F1-A4F0-1091C39EC640)]
                [version(0x0A000002)]
                interface ILocalLocationHoursOfOperationItem : IInspectable
                {
                    [propget] HRESULT Day([out] [retval] Windows.Globalization.DayOfWeek* value);
                    [propget] HRESULT Start([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT Span([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [exclusiveto(Windows.Services.Maps.LocalSearch.LocalLocationRatingInfo)]
                [uuid(CB1DAB56-3354-4311-8BC0-A2D4D5EB806E)]
                [version(0x0A000002)]
                interface ILocalLocationRatingInfo : IInspectable
                {
                    [propget] HRESULT AggregateRating([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                    [propget] HRESULT RatingCount([out] [retval] Windows.Foundation.IReference<INT32>** value);
                    [propget] HRESULT ProviderIdentifier([out] [retval] HSTRING* value);
                }

                [marshaling_behavior(agile)]
                [static(Windows.Services.Maps.LocalSearch.ILocalCategoriesStatics, 0x0A000000)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass LocalCategories
                {
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass LocalLocation
                {
                    [default] interface Windows.Services.Maps.LocalSearch.ILocalLocation;
                    [version(0x0A000002)] interface Windows.Services.Maps.LocalSearch.ILocalLocation2;
                }

                [marshaling_behavior(agile)]
                [static(Windows.Services.Maps.LocalSearch.ILocalLocationFinderStatics, 0x0A000000)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass LocalLocationFinder
                {
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass LocalLocationFinderResult
                {
                    [default] interface Windows.Services.Maps.LocalSearch.ILocalLocationFinderResult;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000002)]
                runtimeclass LocalLocationHoursOfOperationItem
                {
                    [default] interface Windows.Services.Maps.LocalSearch.ILocalLocationHoursOfOperationItem;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000002)]
                runtimeclass LocalLocationRatingInfo
                {
                    [default] interface Windows.Services.Maps.LocalSearch.ILocalLocationRatingInfo;
                }
            }
        }
    }
}
