//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0015
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Devices
    {
        namespace Adc
        {
            namespace Provider
            {
                typedef enum ProviderAdcChannelMode ProviderAdcChannelMode;

                interface IAdcControllerProvider;

                interface IAdcProvider;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Adc
        {
            namespace Provider
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.Devices.Adc.Provider.IAdcControllerProvider*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.Devices.Adc.Provider.IAdcControllerProvider*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Adc.Provider.IAdcControllerProvider*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Adc
        {
            namespace Provider
            {
                [version(0x0A000000)]
                enum ProviderAdcChannelMode
                {
                    SingleEnded  = 0,
                    Differential = 1
                };

                [uuid(BE545828-816D-4DE5-A048-ABA06958AAA8)]
                [version(0x0A000000)]
                interface IAdcControllerProvider : IInspectable
                {
                    [propget] HRESULT ChannelCount([out] [retval] INT32* value);
                    [propget] HRESULT ResolutionInBits([out] [retval] INT32* value);
                    [propget] HRESULT MinValue([out] [retval] INT32* value);
                    [propget] HRESULT MaxValue([out] [retval] INT32* value);
                    [propget] HRESULT ChannelMode([out] [retval] Windows.Devices.Adc.Provider.ProviderAdcChannelMode* value);
                    [propput] HRESULT ChannelMode([in] Windows.Devices.Adc.Provider.ProviderAdcChannelMode value);
                    HRESULT IsChannelModeSupported([in] Windows.Devices.Adc.Provider.ProviderAdcChannelMode channelMode, [out] [retval] boolean* result);
                    HRESULT AcquireChannel([in] INT32 channel);
                    HRESULT ReleaseChannel([in] INT32 channel);
                    HRESULT ReadValue([in] INT32 channelNumber, [out] [retval] INT32* result);
                }

                [uuid(28953668-9359-4C57-BC88-E275E81638C9)]
                [version(0x0A000000)]
                interface IAdcProvider : IInspectable
                {
                    HRESULT GetControllers([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Adc.Provider.IAdcControllerProvider*>** result);
                }
            }
        }
    }
}
