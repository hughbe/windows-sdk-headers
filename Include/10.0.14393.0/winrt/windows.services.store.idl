//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0015
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.idl";
import "Windows.System.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eapplicationmodel_h__)")
cpp_quote("#include <Windows.ApplicationModel.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel_h__)")
cpp_quote("#if !defined(__windows2Esystem_h__)")
cpp_quote("#include <Windows.System.h>")
cpp_quote("#endif // !defined(__windows2Esystem_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        runtimeclass Package;
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        interface IClosable;

        typedef struct TimeSpan TimeSpan;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace System
    {
        runtimeclass User;
    }
}
namespace Windows
{
    namespace Services
    {
        namespace Store
        {
            typedef enum StoreConsumableStatus StoreConsumableStatus;

            typedef enum StoreDurationUnit StoreDurationUnit;

            typedef enum StorePackageUpdateState StorePackageUpdateState;

            typedef enum StorePurchaseStatus StorePurchaseStatus;

            typedef struct StorePackageUpdateStatus StorePackageUpdateStatus;

            interface IStoreAcquireLicenseResult;

            interface IStoreAppLicense;

            interface IStoreAvailability;

            interface IStoreCollectionData;

            interface IStoreConsumableResult;

            interface IStoreContext;

            interface IStoreContextStatics;

            interface IStoreImage;

            interface IStoreLicense;

            interface IStorePackageLicense;

            interface IStorePackageUpdate;

            interface IStorePackageUpdateResult;

            interface IStorePrice;

            interface IStoreProduct;

            interface IStoreProductPagedQueryResult;

            interface IStoreProductQueryResult;

            interface IStoreProductResult;

            interface IStorePurchaseProperties;

            interface IStorePurchasePropertiesFactory;

            interface IStorePurchaseResult;

            interface IStoreRequestHelperStatics;

            interface IStoreSendRequestResult;

            interface IStoreSku;

            interface IStoreSubscriptionInfo;

            interface IStoreVideo;

            runtimeclass StoreAcquireLicenseResult;

            runtimeclass StoreAppLicense;

            runtimeclass StoreAvailability;

            runtimeclass StoreCollectionData;

            runtimeclass StoreConsumableResult;

            runtimeclass StoreContext;

            runtimeclass StoreImage;

            runtimeclass StoreLicense;

            runtimeclass StorePackageLicense;

            runtimeclass StorePackageUpdate;

            runtimeclass StorePackageUpdateResult;

            runtimeclass StorePrice;

            runtimeclass StoreProduct;

            runtimeclass StoreProductPagedQueryResult;

            runtimeclass StoreProductQueryResult;

            runtimeclass StoreProductResult;

            runtimeclass StorePurchaseProperties;

            runtimeclass StorePurchaseResult;

            runtimeclass StoreRequestHelper;

            runtimeclass StoreSendRequestResult;

            runtimeclass StoreSku;

            runtimeclass StoreSubscriptionInfo;

            runtimeclass StoreVideo;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Services
    {
        namespace Store
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreLicense*>*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreProduct*>*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StoreAvailability*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StoreImage*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StorePackageUpdate*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StorePackageUpdateStatus>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StoreSku*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Services.Store.StoreVideo*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreLicense*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreProduct*>*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StoreAvailability*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StoreImage*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StorePackageUpdate*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StorePackageUpdateStatus>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StoreSku*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Services.Store.StoreVideo*>;

                interface Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreLicense*>;

                interface Windows.Foundation.Collections.IKeyValuePair<HSTRING, Windows.Services.Store.StoreProduct*>;

                interface Windows.Foundation.Collections.IMapView<HSTRING, Windows.Services.Store.StoreLicense*>;

                interface Windows.Foundation.Collections.IMapView<HSTRING, Windows.Services.Store.StoreProduct*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreAvailability*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreImage*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StorePackageUpdate*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StorePackageUpdateStatus>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreSku*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreVideo*>;

                interface Windows.Foundation.IAsyncOperationWithProgress<Windows.Services.Store.StorePackageUpdateResult*, Windows.Services.Store.StorePackageUpdateStatus>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StorePackageUpdate*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreAcquireLicenseResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreAppLicense*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreConsumableResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductPagedQueryResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductQueryResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreSendRequestResult*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Services.Store.StoreContext*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Services.Store.StorePackageLicense*, IInspectable*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Services
    {
        namespace Store
        {
            [version(0x0A000002)]
            enum StoreConsumableStatus
            {
                Succeeded           = 0,
                InsufficentQuantity = 1,
                NetworkError        = 2,
                ServerError         = 3
            };

            [version(0x0A000002)]
            enum StoreDurationUnit
            {
                Minute = 0,
                Hour   = 1,
                Day    = 2,
                Week   = 3,
                Month  = 4,
                Year   = 5
            };

            [version(0x0A000002)]
            enum StorePackageUpdateState
            {
                Pending              = 0,
                Downloading          = 1,
                Deploying            = 2,
                Completed            = 3,
                Canceled             = 4,
                OtherError           = 5,
                ErrorLowBattery      = 6,
                ErrorWiFiRecommended = 7,
                ErrorWiFiRequired    = 8
            };

            [version(0x0A000002)]
            enum StorePurchaseStatus
            {
                Succeeded        = 0,
                AlreadyPurchased = 1,
                NotPurchased     = 2,
                NetworkError     = 3,
                ServerError      = 4
            };

            [version(0x0A000002)]
            struct StorePackageUpdateStatus
            {
                HSTRING PackageFamilyName;
                UINT64 PackageDownloadSizeInBytes;
                UINT64 PackageBytesDownloaded;
                DOUBLE PackageDownloadProgress;
                DOUBLE TotalDownloadProgress;
                Windows.Services.Store.StorePackageUpdateState PackageUpdateState;
            };

            [exclusiveto(Windows.Services.Store.StoreAcquireLicenseResult)]
            [uuid(FBD7946D-F040-4CB3-9A39-29BCECDBE22D)]
            [version(0x0A000002)]
            interface IStoreAcquireLicenseResult : IInspectable
            {
                [propget] HRESULT StorePackageLicense([out] [retval] Windows.Services.Store.StorePackageLicense** value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StoreAppLicense)]
            [uuid(F389F9DE-73C0-45CE-9BAB-B2FE3E5EAFD3)]
            [version(0x0A000002)]
            interface IStoreAppLicense : IInspectable
            {
                [propget] HRESULT SkuStoreId([out] [retval] HSTRING* value);
                [propget] HRESULT IsActive([out] [retval] boolean* value);
                [propget] HRESULT IsTrial([out] [retval] boolean* value);
                [propget] HRESULT ExpirationDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [propget] HRESULT AddOnLicenses([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.Services.Store.StoreLicense*>** value);
                [propget] HRESULT TrialTimeRemaining([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT IsTrialOwnedByThisUser([out] [retval] boolean* value);
                [propget] HRESULT TrialUniqueId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StoreAvailability)]
            [uuid(FA060325-0FFD-4493-AD43-F1F9918F69FA)]
            [version(0x0A000002)]
            interface IStoreAvailability : IInspectable
            {
                [propget] HRESULT StoreId([out] [retval] HSTRING* value);
                [propget] HRESULT EndDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT Price([out] [retval] Windows.Services.Store.StorePrice** value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseWithPurchasePropertiesAsync([in] Windows.Services.Store.StorePurchaseProperties* storePurchaseProperties, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
            }

            [exclusiveto(Windows.Services.Store.StoreCollectionData)]
            [uuid(8AA4C3B3-5BB3-441A-2AB4-4DAB73D5CE67)]
            [version(0x0A000002)]
            interface IStoreCollectionData : IInspectable
            {
                [propget] HRESULT IsTrial([out] [retval] boolean* value);
                [propget] HRESULT CampaignId([out] [retval] HSTRING* value);
                [propget] HRESULT DeveloperOfferId([out] [retval] HSTRING* value);
                [propget] HRESULT AcquiredDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT StartDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT EndDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT TrialTimeRemaining([out] [retval] Windows.Foundation.TimeSpan* value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StoreConsumableResult)]
            [uuid(EA5DAB72-6A00-4052-BE5B-BFDAB4433352)]
            [version(0x0A000002)]
            interface IStoreConsumableResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Services.Store.StoreConsumableStatus* value);
                [propget] HRESULT TrackingId([out] [retval] GUID* value);
                [propget] HRESULT BalanceRemaining([out] [retval] UINT32* value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StoreContext)]
            [uuid(AC98B6BE-F4FD-4912-BABD-5035E5E8BCAB)]
            [version(0x0A000002)]
            interface IStoreContext : IInspectable
            {
                [propget] HRESULT User([out] [retval] Windows.System.User** value);
                [eventadd] HRESULT OfflineLicensesChanged([in] Windows.Foundation.TypedEventHandler<Windows.Services.Store.StoreContext*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT OfflineLicensesChanged([in] EventRegistrationToken token);
                HRESULT GetCustomerPurchaseIdAsync([in] HSTRING serviceTicket, [in] HSTRING publisherUserId, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                HRESULT GetCustomerCollectionsIdAsync([in] HSTRING serviceTicket, [in] HSTRING publisherUserId, [out] [retval] Windows.Foundation.IAsyncOperation<HSTRING>** operation);
                HRESULT GetAppLicenseAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreAppLicense*>** operation);
                HRESULT GetStoreProductForCurrentAppAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductResult*>** operation);
                HRESULT GetStoreProductsAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* productKinds, [in] Windows.Foundation.Collections.IIterable<HSTRING>* storeIds, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductQueryResult*>** operation);
                HRESULT GetAssociatedStoreProductsAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* productKinds, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductQueryResult*>** operation);
                HRESULT GetAssociatedStoreProductsWithPagingAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* productKinds, [in] UINT32 maxItemsToRetrievePerPage, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductPagedQueryResult*>** operation);
                HRESULT GetUserCollectionAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* productKinds, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductQueryResult*>** operation);
                HRESULT GetUserCollectionWithPagingAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* productKinds, [in] UINT32 maxItemsToRetrievePerPage, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductPagedQueryResult*>** operation);
                HRESULT ReportConsumableFulfillmentAsync([in] HSTRING productStoreId, [in] UINT32 quantity, [in] GUID trackingId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreConsumableResult*>** operation);
                HRESULT GetConsumableBalanceRemainingAsync([in] HSTRING productStoreId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreConsumableResult*>** operation);
                HRESULT AcquireStoreLicenseForOptionalPackageAsync([in] Windows.ApplicationModel.Package* optionalPackage, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreAcquireLicenseResult*>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseAsync([in] HSTRING storeId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseWithPurchasePropertiesAsync([in] HSTRING storeId, [in] Windows.Services.Store.StorePurchaseProperties* storePurchaseProperties, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                HRESULT GetAppAndOptionalStorePackageUpdatesAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StorePackageUpdate*>*>** operation);
                HRESULT RequestDownloadStorePackageUpdatesAsync([in] Windows.Foundation.Collections.IIterable<Windows.Services.Store.StorePackageUpdate*>* storePackageUpdates, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Services.Store.StorePackageUpdateResult*, Windows.Services.Store.StorePackageUpdateStatus>** operation);
                HRESULT RequestDownloadAndInstallStorePackageUpdatesAsync([in] Windows.Foundation.Collections.IIterable<Windows.Services.Store.StorePackageUpdate*>* storePackageUpdates, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Services.Store.StorePackageUpdateResult*, Windows.Services.Store.StorePackageUpdateStatus>** operation);
                HRESULT RequestDownloadAndInstallStorePackagesAsync([in] Windows.Foundation.Collections.IIterable<HSTRING>* storeIds, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Services.Store.StorePackageUpdateResult*, Windows.Services.Store.StorePackageUpdateStatus>** operation);
            }

            [exclusiveto(Windows.Services.Store.StoreContext)]
            [uuid(9C06EE5F-15C0-4E72-9330-D6191CEBD19C)]
            [version(0x0A000002)]
            interface IStoreContextStatics : IInspectable
            {
                HRESULT GetDefault([out] [retval] Windows.Services.Store.StoreContext** value);
                HRESULT GetForUser([in] Windows.System.User* user, [out] [retval] Windows.Services.Store.StoreContext** value);
            }

            [exclusiveto(Windows.Services.Store.StoreImage)]
            [uuid(081FD248-ADB4-4B64-A993-784789926ED5)]
            [version(0x0A000002)]
            interface IStoreImage : IInspectable
            {
                [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT ImagePurposeTag([out] [retval] HSTRING* value);
                [propget] HRESULT Width([out] [retval] UINT32* value);
                [propget] HRESULT Height([out] [retval] UINT32* value);
                [propget] HRESULT Caption([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StoreLicense)]
            [uuid(26DC9579-4C4F-4F30-BC89-649F60E36055)]
            [version(0x0A000002)]
            interface IStoreLicense : IInspectable
            {
                [propget] HRESULT SkuStoreId([out] [retval] HSTRING* value);
                [propget] HRESULT IsActive([out] [retval] boolean* value);
                [propget] HRESULT ExpirationDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [propget] HRESULT InAppOfferToken([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StorePackageLicense)]
            [uuid(0C465714-14E1-4973-BD14-F77724271E99)]
            [version(0x0A000002)]
            interface IStorePackageLicense : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [eventadd] HRESULT LicenseLost([in] Windows.Foundation.TypedEventHandler<Windows.Services.Store.StorePackageLicense*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT LicenseLost([in] EventRegistrationToken token);
                [propget] HRESULT Package([out] [retval] Windows.ApplicationModel.Package** value);
                [propget] HRESULT IsValid([out] [retval] boolean* value);
                HRESULT ReleaseLicense();
            }

            [exclusiveto(Windows.Services.Store.StorePackageUpdate)]
            [uuid(140FA150-3CBF-4A35-B91F-48271C31B072)]
            [version(0x0A000002)]
            interface IStorePackageUpdate : IInspectable
            {
                [propget] HRESULT Package([out] [retval] Windows.ApplicationModel.Package** value);
                [propget] HRESULT Mandatory([out] [retval] boolean* value);
            }

            [exclusiveto(Windows.Services.Store.StorePackageUpdateResult)]
            [uuid(E79142ED-61F9-4893-B4FE-CF191603AF7B)]
            [version(0x0A000002)]
            interface IStorePackageUpdateResult : IInspectable
            {
                [propget] HRESULT OverallState([out] [retval] Windows.Services.Store.StorePackageUpdateState* value);
                [propget] HRESULT StorePackageUpdateStatuses([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StorePackageUpdateStatus>** value);
            }

            [exclusiveto(Windows.Services.Store.StorePrice)]
            [uuid(55BA94C4-15F1-407C-8F06-006380F4DF0B)]
            [version(0x0A000002)]
            interface IStorePrice : IInspectable
            {
                [propget] HRESULT FormattedBasePrice([out] [retval] HSTRING* value);
                [propget] HRESULT FormattedPrice([out] [retval] HSTRING* value);
                [propget] HRESULT IsOnSale([out] [retval] boolean* value);
                [propget] HRESULT SaleEndDate([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT CurrencyCode([out] [retval] HSTRING* value);
                [propget] HRESULT FormattedRecurrencePrice([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StoreProduct)]
            [uuid(320E2C52-D760-450A-A42B-67D1E901AC90)]
            [version(0x0A000002)]
            interface IStoreProduct : IInspectable
            {
                [propget] HRESULT StoreId([out] [retval] HSTRING* value);
                [propget] HRESULT Language([out] [retval] HSTRING* value);
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propget] HRESULT ProductKind([out] [retval] HSTRING* value);
                [propget] HRESULT HasDigitalDownload([out] [retval] boolean* value);
                [propget] HRESULT Keywords([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT Images([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreImage*>** value);
                [propget] HRESULT Videos([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreVideo*>** value);
                [propget] HRESULT Skus([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreSku*>** value);
                [propget] HRESULT IsInUserCollection([out] [retval] boolean* value);
                [propget] HRESULT Price([out] [retval] Windows.Services.Store.StorePrice** value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [propget] HRESULT LinkUri([out] [retval] Windows.Foundation.Uri** value);
                HRESULT GetIsAnySkuInstalledAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseWithPurchasePropertiesAsync([in] Windows.Services.Store.StorePurchaseProperties* storePurchaseProperties, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [propget] HRESULT InAppOfferToken([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Services.Store.StoreProductPagedQueryResult)]
            [uuid(C92718C5-4DD5-4869-A462-ECC6872E43C5)]
            [version(0x0A000002)]
            interface IStoreProductPagedQueryResult : IInspectable
            {
                [propget] HRESULT Products([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.Services.Store.StoreProduct*>** value);
                [propget] HRESULT HasMoreResults([out] [retval] boolean* value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                HRESULT GetNextAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreProductPagedQueryResult*>** operation);
            }

            [exclusiveto(Windows.Services.Store.StoreProductQueryResult)]
            [uuid(D805E6C5-D456-4FF6-8049-9076D5165F73)]
            [version(0x0A000002)]
            interface IStoreProductQueryResult : IInspectable
            {
                [propget] HRESULT Products([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, Windows.Services.Store.StoreProduct*>** value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StoreProductResult)]
            [uuid(B7674F73-3C87-4EE1-8201-F428359BD3AF)]
            [version(0x0A000002)]
            interface IStoreProductResult : IInspectable
            {
                [propget] HRESULT Product([out] [retval] Windows.Services.Store.StoreProduct** value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StorePurchaseProperties)]
            [uuid(836278F3-FF87-4364-A5B4-FD2153EBE43B)]
            [version(0x0A000002)]
            interface IStorePurchaseProperties : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propput] HRESULT Name([in] HSTRING value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [propput] HRESULT ExtendedJsonData([in] HSTRING value);
            }

            [exclusiveto(Windows.Services.Store.StorePurchaseProperties)]
            [uuid(A768F59E-FEFD-489F-9A17-22A593E68B9D)]
            [version(0x0A000002)]
            interface IStorePurchasePropertiesFactory : IInspectable
            {
                HRESULT Create([in] HSTRING name, [out] [retval] Windows.Services.Store.StorePurchaseProperties** storePurchaseProperties);
            }

            [exclusiveto(Windows.Services.Store.StorePurchaseResult)]
            [uuid(ADD28552-F96A-463D-A7BB-C20B4FCA6952)]
            [version(0x0A000002)]
            interface IStorePurchaseResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Services.Store.StorePurchaseStatus* value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StoreRequestHelper)]
            [uuid(6CE5E5F9-A0C9-4B2C-96A6-A171C630038D)]
            [version(0x0A000002)]
            interface IStoreRequestHelperStatics : IInspectable
            {
                HRESULT SendRequestAsync([in] Windows.Services.Store.StoreContext* context, [in] UINT32 requestKind, [in] HSTRING parametersAsJson, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StoreSendRequestResult*>** operation);
            }

            [exclusiveto(Windows.Services.Store.StoreSendRequestResult)]
            [uuid(C73ABE60-8272-4502-8A69-6E75153A4299)]
            [version(0x0A000002)]
            interface IStoreSendRequestResult : IInspectable
            {
                [propget] HRESULT Response([out] [retval] HSTRING* value);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
            }

            [exclusiveto(Windows.Services.Store.StoreSku)]
            [uuid(397E6F55-4440-4F03-863C-91F3FEC83D79)]
            [version(0x0A000002)]
            interface IStoreSku : IInspectable
            {
                [propget] HRESULT StoreId([out] [retval] HSTRING* value);
                [propget] HRESULT Language([out] [retval] HSTRING* value);
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propget] HRESULT IsTrial([out] [retval] boolean* value);
                [propget] HRESULT CustomDeveloperData([out] [retval] HSTRING* value);
                [propget] HRESULT Images([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreImage*>** value);
                [propget] HRESULT Videos([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreVideo*>** value);
                [propget] HRESULT Availabilities([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Services.Store.StoreAvailability*>** value);
                [propget] HRESULT Price([out] [retval] Windows.Services.Store.StorePrice** value);
                [propget] HRESULT ExtendedJsonData([out] [retval] HSTRING* value);
                [propget] HRESULT IsInUserCollection([out] [retval] boolean* value);
                [propget] HRESULT BundledSkus([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT CollectionData([out] [retval] Windows.Services.Store.StoreCollectionData** value);
                HRESULT GetIsInstalledAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [overload("RequestPurchaseAsync")] HRESULT RequestPurchaseWithPurchasePropertiesAsync([in] Windows.Services.Store.StorePurchaseProperties* storePurchaseProperties, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Services.Store.StorePurchaseResult*>** operation);
                [propget] HRESULT IsSubscription([out] [retval] boolean* value);
                [propget] HRESULT SubscriptionInfo([out] [retval] Windows.Services.Store.StoreSubscriptionInfo** value);
            }

            [exclusiveto(Windows.Services.Store.StoreSubscriptionInfo)]
            [uuid(4189776A-0559-43AC-A9C6-3AB0011FB8EB)]
            [version(0x0A000002)]
            interface IStoreSubscriptionInfo : IInspectable
            {
                [propget] HRESULT BillingPeriod([out] [retval] UINT32* value);
                [propget] HRESULT BillingPeriodUnit([out] [retval] Windows.Services.Store.StoreDurationUnit* value);
                [propget] HRESULT HasTrialPeriod([out] [retval] boolean* value);
                [propget] HRESULT TrialPeriod([out] [retval] UINT32* value);
                [propget] HRESULT TrialPeriodUnit([out] [retval] Windows.Services.Store.StoreDurationUnit* value);
            }

            [exclusiveto(Windows.Services.Store.StoreVideo)]
            [uuid(F26CB184-6F5E-4DC2-886C-3C63083C2F94)]
            [version(0x0A000002)]
            interface IStoreVideo : IInspectable
            {
                [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT VideoPurposeTag([out] [retval] HSTRING* value);
                [propget] HRESULT Width([out] [retval] UINT32* value);
                [propget] HRESULT Height([out] [retval] UINT32* value);
                [propget] HRESULT Caption([out] [retval] HSTRING* value);
                [propget] HRESULT PreviewImage([out] [retval] Windows.Services.Store.StoreImage** value);
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreAcquireLicenseResult
            {
                [default] interface Windows.Services.Store.IStoreAcquireLicenseResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreAppLicense
            {
                [default] interface Windows.Services.Store.IStoreAppLicense;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreAvailability
            {
                [default] interface Windows.Services.Store.IStoreAvailability;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreCollectionData
            {
                [default] interface Windows.Services.Store.IStoreCollectionData;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreConsumableResult
            {
                [default] interface Windows.Services.Store.IStoreConsumableResult;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Services.Store.IStoreContextStatics, 0x0A000002)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreContext
            {
                [default] interface Windows.Services.Store.IStoreContext;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreImage
            {
                [default] interface Windows.Services.Store.IStoreImage;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreLicense
            {
                [default] interface Windows.Services.Store.IStoreLicense;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePackageLicense
            {
                [default] interface Windows.Services.Store.IStorePackageLicense;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePackageUpdate
            {
                [default] interface Windows.Services.Store.IStorePackageUpdate;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePackageUpdateResult
            {
                [default] interface Windows.Services.Store.IStorePackageUpdateResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePrice
            {
                [default] interface Windows.Services.Store.IStorePrice;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreProduct
            {
                [default] interface Windows.Services.Store.IStoreProduct;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreProductPagedQueryResult
            {
                [default] interface Windows.Services.Store.IStoreProductPagedQueryResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreProductQueryResult
            {
                [default] interface Windows.Services.Store.IStoreProductQueryResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreProductResult
            {
                [default] interface Windows.Services.Store.IStoreProductResult;
            }

            [activatable(0x0A000002)]
            [activatable(Windows.Services.Store.IStorePurchasePropertiesFactory, 0x0A000002)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePurchaseProperties
            {
                [default] interface Windows.Services.Store.IStorePurchaseProperties;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StorePurchaseResult
            {
                [default] interface Windows.Services.Store.IStorePurchaseResult;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Services.Store.IStoreRequestHelperStatics, 0x0A000002)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreRequestHelper
            {
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreSendRequestResult
            {
                [default] interface Windows.Services.Store.IStoreSendRequestResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreSku
            {
                [default] interface Windows.Services.Store.IStoreSku;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreSubscriptionInfo
            {
                [default] interface Windows.Services.Store.IStoreSubscriptionInfo;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000002)]
            runtimeclass StoreVideo
            {
                [default] interface Windows.Services.Store.IStoreVideo;
            }
        }
    }
}
