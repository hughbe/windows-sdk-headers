// Copyright (C) Microsoft Corporation. All rights reserved.

//
// NOTE: This header is generated by stubwork.  Please make any 
//       modifications to the corresponding template files 
//       (.x or .y) and use stubwork to regenerate the header
//

#ifndef _NETADAPTERCXTYPES_2_0_H_
#define _NETADAPTERCXTYPES_2_0_H_

#ifndef WDF_EXTERN_C
  #ifdef __cplusplus
    #define WDF_EXTERN_C       extern "C"
    #define WDF_EXTERN_C_START extern "C" {
    #define WDF_EXTERN_C_END   }
  #else
    #define WDF_EXTERN_C
    #define WDF_EXTERN_C_START
    #define WDF_EXTERN_C_END
  #endif
#endif

WDF_EXTERN_C_START



//
// core handles
//
DECLARE_HANDLE( NETADAPTER );
DECLARE_HANDLE( NETCONFIGURATION );
DECLARE_HANDLE( NETOFFLOAD );
DECLARE_HANDLE( NETPACKETQUEUE );
DECLARE_HANDLE( NETWAKESOURCE );
DECLARE_HANDLE( NETPOWEROFFLOAD );

struct _NETADAPTER_INIT;
typedef struct _NETADAPTER_INIT NETADAPTER_INIT;

typedef struct _NET_DRIVER_GLOBALS {
    ULONG Unused;
} NET_DRIVER_GLOBALS, *PNET_DRIVER_GLOBALS;

typedef void (*NETFUNC) (void);
extern NETFUNC NetFunctions[];

typedef union _NET_IPV4_ADDRESS
{
    UINT32 Address;
    UINT8 Value[4];
} NET_IPV4_ADDRESS;

C_ASSERT(sizeof(NET_IPV4_ADDRESS) == 4);

typedef union _NET_IPV6_ADDRESS
{
    struct
    {
        UINT64 NetworkPrefix;
        UINT64 InterfaceIdentifier;
    } Unicast;
    UINT8 Value[16];
} NET_IPV6_ADDRESS;

C_ASSERT(sizeof(NET_IPV6_ADDRESS) == 16);



WDF_EXTERN_C_END

#endif // _NETADAPTERCXTYPES_2_0_H_

