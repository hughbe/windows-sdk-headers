/*++
Copyright (c) 2007  Microsoft Corporation

Module Name:
    ndiswwan.h

Abstract:
    Header file for WWAN structures

Revision History:
    DATE            DESCRIPTION
    ------------        -----------
    23-FEB-2007     V0.40 Driver Model Compliant
    23-MAY-2007     V0.50 Driver Model Compliant
    02-APR-2008     V1.00 Driver Model Compliant
    15-FEB-2011     Incorporated device services

--*/

#ifndef __NDIS_WWAN_DECL__
#define __NDIS_WWAN_DECL__

typedef UCHAR NDIS_WWAN_MAC_ADDRESS[6];


///////////////////////////////////////////////////////////////////////////
//                           wwansvc requests                            //
///////////////////////////////////////////////////////////////////////////

#define NDIS_WWAN_DRIVER_CAPS_REVISION_1        1

typedef struct _NDIS_WWAN_DRIVER_CAPS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_DRIVER_CAPS    DriverCaps;
} NDIS_WWAN_DRIVER_CAPS, *PNDIS_WWAN_DRIVER_CAPS;

#define NDIS_WWAN_SERVICE_ACTIVATION_REVISION_1     1

typedef struct _NDIS_WWAN_SERVICE_ACTIVATION {
    NDIS_OBJECT_HEADER      Header;
    WWAN_SERVICE_ACTIVATION ServiceActivation;
} NDIS_WWAN_SERVICE_ACTIVATION, *PNDIS_WWAN_SERVICE_ACTIVATION;

#define NDIS_WWAN_SET_RADIO_STATE_REVISION_1        1

typedef struct _NDIS_WWAN_SET_RADIO_STATE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_RADIO      RadioAction;
} NDIS_WWAN_SET_RADIO_STATE, *PNDIS_WWAN_SET_RADIO_STATE;


#define NDIS_WWAN_SET_PIN_REVISION_1    1
#define NDIS_WWAN_SET_PIN_REVISION_2    2

typedef struct _NDIS_WWAN_SET_PIN {
    NDIS_OBJECT_HEADER  Header;
    WWAN_PIN_ACTION    PinAction;
} NDIS_WWAN_SET_PIN, *PNDIS_WWAN_SET_PIN;

typedef struct _NDIS_WWAN_SET_PIN_EX {
    NDIS_OBJECT_HEADER  Header;
    WWAN_PIN_ACTION     PinAction;
} NDIS_WWAN_SET_PIN_EX, *PNDIS_WWAN_SET_PIN_EX;

#define NDIS_WWAN_SET_PREFERRED_PROVIDERS_REVISION_1    1

typedef struct _NDIS_WWAN_SET_PREFERRED_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_LIST_HEADER    PreferredListHeader;
} NDIS_WWAN_SET_PREFERRED_PROVIDERS, *PNDIS_WWAN_SET_PREFERRED_PROVIDERS;

#define NDIS_WWAN_SET_REGISTER_STATE_REVISION_1     1
#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
#define NDIS_WWAN_SET_REGISTER_STATE_REVISION_2     2
#endif

typedef struct _NDIS_WWAN_SET_REGISTER_STATE {
    NDIS_OBJECT_HEADER      Header;
    WWAN_SET_REGISTER_STATE SetRegisterState;
} NDIS_WWAN_SET_REGISTER_STATE, *PNDIS_WWAN_SET_REGISTER_STATE;

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
typedef struct _NDIS_WWAN_SET_REGISTER_STATE_EX {
    NDIS_OBJECT_HEADER          Header;
    WWAN_SET_REGISTER_STATE_EX  SetRegisterState;
} NDIS_WWAN_SET_REGISTER_STATE_EX, *PNDIS_WWAN_SET_REGISTER_STATE_EX;
#endif

#define NDIS_WWAN_SET_SIGNAL_INDICATION_REVISION_1  1
#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
#define NDIS_WWAN_SET_SIGNAL_INDICATION_REVISION_2  2
#endif

typedef struct _NDIS_WWAN_SET_SIGNAL_INDICATION {
    NDIS_OBJECT_HEADER          Header;
    WWAN_SET_SIGNAL_INDICATION  SignalIndication;
} NDIS_WWAN_SET_SIGNAL_INDICATION, *PNDIS_WWAN_SET_SIGNAL_INDICATION;

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
typedef struct _NDIS_WWAN_SET_SIGNAL_INDICATION_EX {
    NDIS_OBJECT_HEADER              Header;
    WWAN_SET_SIGNAL_INDICATION_EX   SignalIndication;
} NDIS_WWAN_SET_SIGNAL_INDICATION_EX, *PNDIS_WWAN_SET_SIGNAL_INDICATION_EX;
#endif

#define NDIS_WWAN_SET_PACKET_SERVICE_REVISION_1     1

typedef struct _NDIS_WWAN_SET_PACKET_SERVICE {
    NDIS_OBJECT_HEADER      Header;
    WWAN_PACKET_SERVICE_ACTION  PacketServiceAction;
} NDIS_WWAN_SET_PACKET_SERVICE, *PNDIS_WWAN_SET_PACKET_SERVICE;

#define NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_1    1

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)
#define NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_2    2
#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

typedef struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT {
    NDIS_OBJECT_HEADER  Header;
    WWAN_SET_CONTEXT    ProvisionedContext;
} NDIS_WWAN_SET_PROVISIONED_CONTEXT, *PNDIS_WWAN_SET_PROVISIONED_CONTEXT;

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)
typedef struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT_V2 {
    NDIS_OBJECT_HEADER  Header;             // header version should be NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_2
    WWAN_SET_CONTEXT_V2 ProvisionedContext;
} NDIS_WWAN_SET_PROVISIONED_CONTEXT_V2, *PNDIS_WWAN_SET_PROVISIONED_CONTEXT_V2;
#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#define NDIS_WWAN_SET_CONTEXT_STATE_REVISION_1      1
#if(NTDDI_VERSION >= NTDDI_WIN8 || NDIS_SUPPORT_NDIS630 )
#define NDIS_WWAN_SET_CONTEXT_STATE_REVISION_2      2
#endif
#if(NTDDI_VERSION >= NTDDI_WIN10_RS1 || NDIS_SUPPORT_NDIS660 )
#define NDIS_WWAN_SET_CONTEXT_STATE_REVISION_3      3
#endif
#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_SET_CONTEXT_STATE_REVISION_4      4
#endif

typedef struct _NDIS_WWAN_SET_CONTEXT_STATE {
    NDIS_OBJECT_HEADER      Header;
    WWAN_SET_CONTEXT_STATE  SetContextState;
} NDIS_WWAN_SET_CONTEXT_STATE, *PNDIS_WWAN_SET_CONTEXT_STATE;

#if(NTDDI_VERSION >= NTDDI_WIN8 || NDIS_SUPPORT_NDIS630 )
#define SIZEOF_WWAN_SET_CONTEXT_STATE_REVISION_1                    \
    ( RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,AuthType) )
#define SIZEOF_NDIS_WWAN_SET_CONTEXT_STATE_REVISION_1               \
    ( FIELD_OFFSET(NDIS_WWAN_SET_CONTEXT_STATE,SetContextState) +   \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,AuthType) )
#define SIZEOF_WWAN_SET_CONTEXT_STATE_REVISION_2               \
    ( RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,IPType) )
#define SIZEOF_NDIS_WWAN_SET_CONTEXT_STATE_REVISION_2               \
    ( FIELD_OFFSET(NDIS_WWAN_SET_CONTEXT_STATE,SetContextState) +   \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,IPType) )
#endif

#if(NTDDI_VERSION >= NTDDI_WIN10_RS1 || NDIS_SUPPORT_NDIS660 )
#define SIZEOF_WWAN_SET_CONTEXT_STATE_REVISION_3               \
    ( RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,ConnectionMediaSource) )
#define SIZEOF_NDIS_WWAN_SET_CONTEXT_STATE_REVISION_3               \
    ( FIELD_OFFSET(NDIS_WWAN_SET_CONTEXT_STATE,SetContextState) +   \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,ConnectionMediaSource) )
#endif

// Since NDIS_WWAN_SET_CONTEXT_STATE_REVISION_4, struct has started to have appending TLV types
// The meaning of constant changes to indicate the minmal buffer size
#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define MIN_SIZEOF_WWAN_SET_CONTEXT_STATE_REVISION_4               \
    ( RTL_SIZEOF_THROUGH_FIELD(WWAN_SET_CONTEXT_STATE,ConnectionMediaSource) ) + 2 * sizeof(WWAN_TLV_IE)
#define MIN_SIZEOF_NDIS_WWAN_SET_CONTEXT_STATE_REVISION_4               \
    ( FIELD_OFFSET(NDIS_WWAN_SET_CONTEXT_STATE,SetContextState) +   \
      MIN_SIZEOF_WWAN_SET_CONTEXT_STATE_REVISION_4 )
#endif

#define NDIS_WWAN_SET_SMS_CONFIGURATION_REVISION_1  1

typedef struct _NDIS_WWAN_SET_SMS_CONFIGURATION {
    NDIS_OBJECT_HEADER      Header;
    WWAN_SET_SMS_CONFIGURATION  SetSmsConfiguration;
} NDIS_WWAN_SET_SMS_CONFIGURATION, *PNDIS_WWAN_SET_SMS_CONFIGURATION;

#define NDIS_WWAN_SMS_READ_REVISION_1           1

typedef struct _NDIS_WWAN_SMS_READ {
    NDIS_OBJECT_HEADER  Header;
    WWAN_SMS_READ   SmsRead;
} NDIS_WWAN_SMS_READ, *PNDIS_WWAN_SMS_READ;

#define NDIS_WWAN_SMS_SEND_REVISION_1           1

typedef struct _NDIS_WWAN_SMS_SEND {
    NDIS_OBJECT_HEADER  Header;
    WWAN_SMS_SEND   SmsSend;
} NDIS_WWAN_SMS_SEND, *PNDIS_WWAN_SMS_SEND;

#define NDIS_WWAN_SMS_DELETE_REVISION_1         1

typedef struct _NDIS_WWAN_SMS_DELETE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_SMS_FILTER SmsFilter;
} NDIS_WWAN_SMS_DELETE, *PNDIS_WWAN_SMS_DELETE;

#if (NTDDI_VERSION >= NTDDI_WIN8 || NDIS_SUPPORT_NDIS630)

#define NDIS_WWAN_SET_HOME_PROVIDER_REVISION_1      1

typedef struct _NDIS_WWAN_SET_HOME_PROVIDER {
    NDIS_OBJECT_HEADER      Header;
    WWAN_PROVIDER2          HomeProvider;
} NDIS_WWAN_SET_HOME_PROVIDER, *PNDIS_WWAN_SET_HOME_PROVIDER;

#define NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS_REVISION_1    1

typedef struct _NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_LIST_HEADER    PreferredListHeader;
} NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS, *PNDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS;

#define NDIS_WWAN_GET_VISIBLE_PROVIDERS_REVISION_1      1

typedef struct _NDIS_WWAN_GET_VISIBLE_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_GET_VISIBLE_PROVIDERS  VisibleProviders;
} NDIS_WWAN_GET_VISIBLE_PROVIDERS, *PNDIS_WWAN_GET_VISIBLE_PROVIDERS;

#define SIZEOF_NDIS_WWAN_GET_VISIBLE_PROVIDERS_REVISION_1      sizeof(NDIS_WWAN_GET_VISIBLE_PROVIDERS)

#define NDIS_WWAN_USSD_REQUEST_REVISION_1 1

typedef struct _NDIS_WWAN_USSD_REQUEST {
  NDIS_OBJECT_HEADER         Header;
  WWAN_USSD_REQUEST          UssdRequest;
} NDIS_WWAN_USSD_REQUEST, *PNDIS_WWAN_USSD_REQUEST;

#define NDIS_WWAN_DEVICE_SERVICE_COMMAND_REVISION_1 1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_COMMAND_1   sizeof(NDIS_WWAN_DEVICE_SERVICE_COMMAND)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_COMMAND {
  NDIS_OBJECT_HEADER Header;
  WWAN_DEVICE_SERVICE_COMMAND Command;
} NDIS_WWAN_DEVICE_SERVICE_COMMAND, *PNDIS_WWAN_DEVICE_SERVICE_COMMAND;

#define NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS_REVISION_1       1
#define SIZEOF_NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS_1         sizeof(NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS)

typedef struct _NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS {
  NDIS_OBJECT_HEADER Header;
  WWAN_LIST_HEADER DeviceServiceListHeader;
} NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS, *PNDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS;

#define NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS_REVISION_1 1
#define SIZEOF_NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS_1   sizeof(NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS)

typedef struct _NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS {
  NDIS_OBJECT_HEADER Header;
  GUID DeviceServiceGuid;
} NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS, *PNDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS;

#define NDIS_WWAN_SET_DEVICE_SERVICE_SESSION_REVISION_1     1
#define SIZEOF_NDIS_WWAN_SET_DEVICE_SERVICE_SESSION_1       sizeof(NDIS_WWAN_SET_DEVICE_SERVICE_SESSION)

typedef struct _NDIS_WWAN_DEVICE_SET_SERVICE_SESSION {
  NDIS_OBJECT_HEADER Header;
  WWAN_DEVICE_SERVICE_SESSION Session;
} NDIS_WWAN_SET_DEVICE_SERVICE_SESSION, *PNDIS_WWAN_SET_DEVICE_SERVICE_SESSION;

#define NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO_REVISION_1    1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO_1      sizeof(NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO {
  NDIS_OBJECT_HEADER Header;
  WWAN_STATUS uStatus;
  WWAN_DEVICE_SERVICE_SESSION Session;
} NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO, *PNDIS_WWAN_DEVICE_SERVICE_SESSION_COMPLETE;

#define NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_REVISION_1   1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_1     sizeof(NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE {
  NDIS_OBJECT_HEADER Header;
  WWAN_DEVICE_SERVICE_SESSION_WRITE WriteData;
} NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE, *PNDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE;

#define NDIS_WWAN_MAC_PARAMETERS_REVISION_1   1
#define SIZEOF_NDIS_WWAN_MAC_PARAMETERS_1     sizeof(NDIS_WWAN_MAC_PARAMETERS)

typedef struct _NDIS_WWAN_MAC_PARAMETERS{
    NDIS_OBJECT_HEADER Header;  
} NDIS_WWAN_MAC_PARAMETERS, *PNDIS_WWAN_MAC_PARAMETERS;

typedef struct _NDIS_WWAN_MAC_INFO  
{  
    ULONG uReserved;  
    ULONG uNdisPortNumber;  
    NDIS_WWAN_MAC_ADDRESS MacAddr;  
} NDIS_WWAN_MAC_INFO, * PNDIS_WWAN_MAC_INFO;

#endif

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
#define NDIS_WWAN_MBIM_VERSION_REVISION_1       1
#define SIZEOF_NDIS_WWAN_MBIM_VERSION_1                         \
    ( FIELD_OFFSET(NDIS_WWAN_MBIM_VERSION,MbimVersion) +   \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_MBIM_VERSION,MbimVersion) )

#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_MBIM_VERSION_REVISION_2       2
#endif
typedef struct _NDIS_WWAN_MBIM_VERSION {
    NDIS_OBJECT_HEADER Header;
    WWAN_MBIM_VERSION MbimVersion; 
} NDIS_WWAN_MBIM_VERSION, *PNDIS_WWAN_MBIM_VERSION;

#define NDIS_WWAN_SET_DEVICE_SLOT_MAPPING_INFO_REVISION_1   1

typedef struct _NDIS_WWAN_SET_DEVICE_SLOT_MAPPING_INFO {
    NDIS_OBJECT_HEADER              Header;
    WWAN_DEVICE_SLOT_MAPPING_INFO   SetDeviceSlotMappingInfo;
} NDIS_WWAN_SET_DEVICE_SLOT_MAPPING_INFO, *PNDIS_WWAN_SET_DEVICE_SLOT_MAPPING_INFO;

#define NDIS_WWAN_GET_SLOT_INFO_REVISION_1          1

typedef struct _NDIS_WWAN_GET_SLOT_INFO {
    NDIS_OBJECT_HEADER   Header;
    WWAN_GET_SLOT_INFO   GetSlotInfo;
} NDIS_WWAN_GET_SLOT_INFO, *PNDIS_WWAN_GET_SLOT_INFO;

#define NDIS_WWAN_SET_DEVICE_BINDINGS_INFO_REVISION_1   1

typedef struct _NDIS_WWAN_SET_DEVICE_BINDINGS_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_DEVICE_BINDINGS_INFO   SetDeviceBindingsInfo;
} NDIS_WWAN_SET_DEVICE_BINDINGS_INFO, *PNDIS_WWAN_SET_DEVICE_BINDINGS_INFO;

#define NDIS_WWAN_SET_IMS_VOICE_STATE_REVISION_1    1

typedef struct _NDIS_WWAN_SET_IMS_VOICE_STATE {
    NDIS_OBJECT_HEADER          Header;
    WWAN_SET_IMS_VOICE_STATE    SetImsVoiceState;
} NDIS_WWAN_SET_IMS_VOICE_STATE, *PNDIS_WWAN_SET_IMS_VOICE_STATE;

#define NDIS_WWAN_LOCATION_TRIGGER_MODE_REVISION_1  1

typedef struct _NDIS_WWAN_LOCATION_TRIGGER_MODE {
    NDIS_OBJECT_HEADER          Header;
    WWAN_SET_LOCATION_STATE     SetLocationState;
} NDIS_WWAN_LOCATION_TRIGGER_MODE, *PNDIS_WWAN_LOCATION_TRIGGER_MODE;

#define NDIS_WWAN_NETWORK_IDLE_HINT_REVISION_1  1
#define SIZEOF_NDIS_WWAN_NETWORK_IDLE_HINT_1   sizeof(NDIS_WWAN_NETWORK_IDLE_HINT)

typedef struct _NDIS_WWAN_NETWORK_IDLE_HINT {
    NDIS_OBJECT_HEADER      Header;
    WWAN_NETWORK_IDLE_HINT  IdleHint;
} NDIS_WWAN_NETWORK_IDLE_HINT, *PNDIS_WWAN_NETWORK_IDLE_HINT;

#define NDIS_WWAN_SET_PRESHUTDOWN_STATE_REVISION_1  1
#define SIZEOF_NDIS_WWAN_SET_PRESHUTDOWN_STATE_1    sizeof(NDIS_WWAN_SET_PRESHUTDOWN_STATE)

typedef struct _NDIS_WWAN_SET_PRESHUTDOWN_STATE{
    NDIS_OBJECT_HEADER      Header;
} NDIS_WWAN_SET_PRESHUTDOWN_STATE, *PNDIS_WWAN_SET_PRESHUTDOWN_STATE;

#endif // (NTDDI_VERSION >= NTDDI_WINTHRESHOLD)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS1 || NDIS_SUPPORT_NDIS660)

#define NDIS_WWAN_SET_UICC_OPEN_CHANNEL_REVISION_1 1

typedef struct _NDIS_WWAN_SET_UICC_OPEN_CHANNEL {
    NDIS_OBJECT_HEADER Header;
    WWAN_SET_UICC_OPEN_CHANNEL SetUiccOpenChannel;
} NDIS_WWAN_SET_UICC_OPEN_CHANNEL, *PNDIS_WWAN_SET_UICC_OPEN_CHANNEL;

#define NDIS_WWAN_SET_UICC_CLOSE_CHANNEL_REVISION_1 1

typedef struct _NDIS_WWAN_SET_UICC_CLOSE_CHANNEL {
    NDIS_OBJECT_HEADER Header;
    WWAN_SET_UICC_CLOSE_CHANNEL SetUiccCloseChannel;
} NDIS_WWAN_SET_UICC_CLOSE_CHANNEL, *PNDIS_WWAN_SET_UICC_CLOSE_CHANNEL;

#define NDIS_WWAN_SET_UICC_APDU_REVISION_1 1

typedef struct _NDIS_WWAN_SET_UICC_APDU {
    NDIS_OBJECT_HEADER Header;
    WWAN_SET_UICC_APDU SetUiccApdu;
} NDIS_WWAN_SET_UICC_APDU, *PNDIS_WWAN_SET_UICC_APDU;

#define NDIS_WWAN_SET_UICC_TERMINAL_CAPABILITY_REVISION_1 1

typedef struct _NDIS_WWAN_SET_UICC_TERMINAL_CAPABILITY {
    NDIS_OBJECT_HEADER Header;
    WWAN_LIST_HEADER CapabilityListHeader;
} NDIS_WWAN_SET_UICC_TERMINAL_CAPABILITY, *PNDIS_WWAN_SET_UICC_TERMINAL_CAPABILITY;

typedef struct _NDIS_WWAN_SET_PS_MEDIA_CONFIG {
    NDIS_OBJECT_HEADER              Header;
    WWAN_PS_MEDIA_CONFIG_ITEM       SetPSMediaConfigItem;
} NDIS_WWAN_SET_PS_MEDIA_CONFIG, *PNDIS_WWAN_SET_PS_MEDIA_CONFIG;

#define NDIS_WWAN_SET_PS_MEDIA_CONFIG_REVISION_1            1
#define SIZEOF_NDIS_WWAN_SET_PS_MEDIA_CONFIG_REVISION_1     sizeof(NDIS_WWAN_SET_PS_MEDIA_CONFIG)

typedef struct _NDIS_WWAN_QUERY_PS_MEDIA_CONFIG {
    NDIS_OBJECT_HEADER              Header;
    DWORD  	                        ServicesBitMap;	// a bit map of services to be queried
} NDIS_WWAN_QUERY_PS_MEDIA_CONFIG, *PNDIS_WWAN_QUERY_PS_MEDIA_CONFIG;

#define NDIS_WWAN_QUERY_PS_MEDIA_CONFIG_REVISION_1          1
#define SIZEOF_NDIS_WWAN_QUERY_PS_MEDIA_CONFIG_REVISION_1   sizeof(NDIS_WWAN_QUERY_PS_MEDIA_CONFIG)

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS1)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#define NDIS_WWAN_SET_SAR_CONFIG_REVISON_1                  1

typedef struct _NDIS_WWAN_SET_SAR_CONFIG {
    NDIS_OBJECT_HEADER    Header;
    WWAN_SET_SAR_CONFIG   SetSarConfig;
} NDIS_WWAN_SET_SAR_CONFIG, *PNDIS_WWAN_SET_SAR_CONFIG;

#define NDIS_WWAN_SET_SAR_TRANSMISSION_STATUS_REVISION_1        1

typedef struct _NDIS_WWAN_SET_SAR_TRANSMISSION_STATUS {
    NDIS_OBJECT_HEADER                Header;
    WWAN_SET_SAR_TRANSMISSION_STATUS  SetTransmissionStatus;
} NDIS_WWAN_SET_SAR_TRANSMISSION_STATUS, *PNDIS_WWAN_SET_SAR_TRANSMISSION_STATUS;

#define NDIS_WWAN_SET_NETWORK_BLACKLIST_REVISON_1               1

typedef struct _NDIS_WWAN_SET_NETWORK_BLACKLIST {
    NDIS_OBJECT_HEADER              Header;
    WWAN_NETWORK_BLACKLIST_INFO     SetNetworkBlacklist;
} NDIS_WWAN_SET_NETWORK_BLACKLIST, *PNDIS_WWAN_SET_NETWORK_BLACKLIST;

#define NDIS_WWAN_QUERY_NETWORK_BLACKLIST_REVISON_1             1
// no payload for query of network blacklist

typedef struct _NDIS_WWAN_SET_LTE_ATTACH_CONTEXT {
    NDIS_OBJECT_HEADER  Header;
    WWAN_SET_LTE_ATTACH SetLteAttachContext;
} NDIS_WWAN_SET_LTE_ATTACH_CONTEXT, *PNDIS_WWAN_SET_LTE_ATTACH_CONTEXT;
#define NDIS_WWAN_SET_LTE_ATTACH_CONTEXT_REVISION_1        1

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS3 || NDIS_SUPPORT_NDIS680)

#define NDIS_WWAN_SET_UICC_RESET_REVISION_1 1

typedef struct _NDIS_WWAN_SET_UICC_RESET {
    NDIS_OBJECT_HEADER Header;
    WWAN_SET_UICC_RESET SetUiccReset;
} NDIS_WWAN_SET_UICC_RESET, *PNDIS_WWAN_SET_UICC_RESET;

#define NDIS_WWAN_SET_DEVICE_RESET_REVISION_1 1

typedef struct _NDIS_WWAN_SET_DEVICE_RESET {
    NDIS_OBJECT_HEADER Header;
} NDIS_WWAN_SET_DEVICE_RESET, *PNDIS_WWAN_SET_DEVICE_RESET;

#define NDIS_WWAN_BASE_STATIONS_INFO_REQ_REVISION_1             1

typedef struct _NDIS_WWAN_BASE_STATIONS_INFO_REQ {
    NDIS_OBJECT_HEADER          Header;
    WWAN_BASE_STATIONS_INFO_REQ BaseStationsInfoRequest;
} NDIS_WWAN_BASE_STATIONS_INFO_REQ, *PNDIS_WWAN_BASE_STATIONS_INFO_REQ;

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS3 || NDIS_SUPPORT_NDIS680)

#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS683)
#define NDIS_WWAN_UICC_FILE_PATH_REVISION_1         1

typedef struct _NDIS_WWAN_UICC_FILE_PATH {
    NDIS_OBJECT_HEADER Header;
    WWAN_UICC_FILE_PATH UiccFilePath;
} NDIS_WWAN_UICC_FILE_PATH, *PNDIS_WWAN_UICC_FILE_PATH;

#define NDIS_WWAN_UICC_ACCESS_BINARY_REVISION_1     1

typedef struct _NDIS_WWAN_UICC_ACCESS_BINARY {
    NDIS_OBJECT_HEADER Header;
    WWAN_UICC_ACCESS_BINARY UiccAccessBinary;
} NDIS_WWAN_UICC_ACCESS_BINARY, *PNDIS_WWAN_UICC_ACCESS_BINARY;

#define NDIS_WWAN_UICC_ACCESS_RECORD_REVISION_1     1

typedef struct _NDIS_WWAN_UICC_ACCESS_RECORD {
    NDIS_OBJECT_HEADER Header;
    WWAN_UICC_ACCESS_RECORD UiccAccessRecord;
} NDIS_WWAN_UICC_ACCESS_RECORD, *PNDIS_WWAN_UICC_ACCESS_RECORD;

 
#define NDIS_WWAN_SET_PIN_REVISION_3                3

typedef struct _NDIS_WWAN_SET_PIN_EX2 {
    NDIS_OBJECT_HEADER     Header;
    WWAN_PIN_ACTION_EX2    PinAction;
} NDIS_WWAN_SET_PIN_EX2, *PNDIS_WWAN_SET_PIN_EX2;

#define NDIS_WWAN_PIN_APP_REVISION_1                1

typedef struct _NDIS_WWAN_PIN_APP {
    NDIS_OBJECT_HEADER     Header;
    WWAN_PIN_APP           PinApp;
} NDIS_WWAN_PIN_APP, *PNDIS_WWAN_PIN_APP;

#define NDIS_WWAN_SET_MODEM_LOGGING_CONFIG_REVISION_1               1

typedef struct _NDIS_WWAN_SET_MODEM_LOGGING_CONFIG {
    NDIS_OBJECT_HEADER Header;
    WWAN_MODEM_LOGGING_CONFIG ModemLoggingConfig;
} NDIS_WWAN_SET_MODEM_LOGGING_CONFIG, *PNDIS_WWAN_SET_MODEM_LOGGING_CONFIG;

#endif // (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS683)

#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_SET_REGISTER_PARAMS_REVISION_1        1

// data for OID_WWAN_REGISTER_PARAMS set request
typedef struct _NDIS_WWAN_SET_REGISTER_PARAMS {
    NDIS_OBJECT_HEADER          Header;
    WWAN_SET_REGISTER_PARAMS    SetRegisterParams;
} NDIS_WWAN_SET_REGISTER_PARAMS, *PNDIS_WWAN_SET_REGISTER_PARAMS;

#define NDIS_WWAN_QUERY_NETWORK_PARAMS_REVISION_1       1

// data for OID_WWAN_NETWORK_PARAMS query request
typedef struct _NDIS_WWAN_QUERY_NETWORK_PARAMS {
    NDIS_OBJECT_HEADER            Header;
    WWAN_QUERY_NETWORK_PARAMS     QueryNetworkParams;
} NDIS_WWAN_QUERY_NETWORK_PARAMS, *PNDIS_WWAN_QUERY_NETWORK_PARAMS;

#endif

///////////////////////////////////////////////////////////////////////////
//                    device indications and responses                   //
///////////////////////////////////////////////////////////////////////////
#define NDIS_WWAN_DEVICE_CAPS_REVISION_1        1
#define NDIS_WWAN_DEVICE_CAPS_REVISION_2        2

typedef struct _NDIS_WWAN_DEVICE_CAPS {
    NDIS_OBJECT_HEADER    Header;
    WWAN_STATUS           uStatus;
    WWAN_DEVICE_CAPS      DeviceCaps;
} NDIS_WWAN_DEVICE_CAPS, *PNDIS_WWAN_DEVICE_CAPS;

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#define NDIS_WWAN_DEVICE_CAPS_EX_REVISION_1     1

typedef struct _NDIS_WWAN_DEVICE_CAPS_EX {
    NDIS_OBJECT_HEADER    Header;
    WWAN_STATUS           uStatus;
    WWAN_DEVICE_CAPS_EX   DeviceCaps;
} NDIS_WWAN_DEVICE_CAPS_EX, *PNDIS_WWAN_DEVICE_CAPS_EX;
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_DEVICE_CAPS_EX_REVISION_2     2
#endif

#define NDIS_WWAN_READY_INFO_REVISION_1                 1

typedef struct _NDIS_WWAN_READY_INFO {
    NDIS_OBJECT_HEADER  Header;
    WWAN_READY_INFO ReadyInfo;
} NDIS_WWAN_READY_INFO, *PNDIS_WWAN_READY_INFO;

#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_READY_INFO_REVISION_2                 2
#endif

#define NDIS_WWAN_SERVICE_ACTIVATION_STATUS_REVISION_1  1

typedef struct _NDIS_WWAN_SERVICE_ACTIVATION_STATUS {
    NDIS_OBJECT_HEADER              Header;
    WWAN_STATUS                     uStatus;
    WWAN_SERVICE_ACTIVATION_STATUS  ServiceActivationStatus;
} NDIS_WWAN_SERVICE_ACTIVATION_STATUS, *PNDIS_WWAN_SERVICE_ACTIVATION_STATUS;

#define NDIS_WWAN_VENDOR_SPECIFIC_REVISION_1    1

typedef struct _NDIS_WWAN_VENDOR_SPECIFIC {
    NDIS_OBJECT_HEADER        Header;
    WWAN_VENDOR_SPECIFIC      VendorSpecificData;
} NDIS_WWAN_VENDOR_SPECIFIC, *PNDIS_WWAN_VENDOR_SPECIFIC;

#define NDIS_WWAN_RADIO_STATE_REVISION_1        1

typedef struct _NDIS_WWAN_RADIO_STATE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_RADIO_STATE    RadioState;
} NDIS_WWAN_RADIO_STATE, *PNDIS_WWAN_RADIO_STATE;

#define NDIS_WWAN_PIN_INFO_REVISION_1           1

typedef struct _NDIS_WWAN_PIN_INFO {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_PIN_INFO   PinInfo;
} NDIS_WWAN_PIN_INFO, *PNDIS_WWAN_PIN_INFO;

#define NDIS_WWAN_PIN_LIST_REVISION_1           1

typedef struct _NDIS_WWAN_PIN_LIST {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_PIN_LIST   PinList;
} NDIS_WWAN_PIN_LIST, *PNDIS_WWAN_PIN_LIST;

#define NDIS_WWAN_HOME_PROVIDER_REVISION_1      1

typedef struct _NDIS_WWAN_HOME_PROVIDER {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_PROVIDER   Provider;
} NDIS_WWAN_HOME_PROVIDER, *PNDIS_WWAN_HOME_PROVIDER;

#define NDIS_WWAN_PREFERRED_PROVIDERS_REVISION_1    1

typedef struct _NDIS_WWAN_PREFERRED_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_LIST_HEADER    PreferredListHeader;
} NDIS_WWAN_PREFERRED_PROVIDERS, *PNDIS_WWAN_PREFERRED_PROVIDERS;

#define NDIS_WWAN_VISIBLE_PROVIDERS_REVISION_1      1

typedef struct _NDIS_WWAN_VISIBLE_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_LIST_HEADER    VisibleListHeader;
} NDIS_WWAN_VISIBLE_PROVIDERS, *PNDIS_WWAN_VISIBLE_PROVIDERS;

#define NDIS_WWAN_REGISTRATION_STATE_REVISION_1     1
#define NDIS_WWAN_REGISTRATION_STATE_REVISION_2     2
#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
#define NDIS_WWAN_REGISTRATION_STATE_REVISION_3     3
#endif
#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_REGISTRATION_STATE_REVISION_4     4
#endif  // (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)

typedef struct _NDIS_WWAN_REGISTRATION_STATE {
    NDIS_OBJECT_HEADER      Header;
    WWAN_STATUS             uStatus;
    WWAN_REGISTRATION_STATE RegistrationState;
} NDIS_WWAN_REGISTRATION_STATE, *PNDIS_WWAN_REGISTRATION_STATE;

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
typedef struct _NDIS_WWAN_REGISTRATION_STATE_INFOS_EX {
    NDIS_OBJECT_HEADER              Header;
    WWAN_STATUS                     uStatus;
    WWAN_REGISTRATION_STATE_INFOS   RegistrationStateInfos;
} NDIS_WWAN_REGISTRATION_STATE_INFOS_EX, *PNDIS_WWAN_REGISTRATION_STATE_INFOS_EX;
#endif

#define NDIS_WWAN_SIGNAL_STATE_REVISION_1       1
#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
#define NDIS_WWAN_SIGNAL_STATE_REVISION_2       2
#endif
#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_SIGNAL_STATE_REVISION_3       3
#endif  // (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)

typedef struct _NDIS_WWAN_SIGNAL_STATE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS         uStatus;
    WWAN_SIGNAL_STATE   SignalState;
} NDIS_WWAN_SIGNAL_STATE, *PNDIS_WWAN_SIGNAL_STATE;

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)
typedef struct _NDIS_WWAN_SIGNAL_STATE_INFOS_EX {
    NDIS_OBJECT_HEADER      Header;
    WWAN_STATUS             uStatus;
    WWAN_SIGNAL_STATE_INFOS SignalStateInfos;
} NDIS_WWAN_SIGNAL_STATE_INFOS_EX, *PNDIS_WWAN_SIGNAL_STATE_INFOS_EX;
#endif

#define NDIS_WWAN_PACKET_SERVICE_STATE_REVISION_1   1
#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_PACKET_SERVICE_STATE_REVISION_2   2
#endif  // (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS684)
#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_PACKET_SERVICE_STATE_REVISION_3   3
#endif

typedef struct _NDIS_WWAN_PACKET_SERVICE_STATE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_PACKET_SERVICE PacketService;
} NDIS_WWAN_PACKET_SERVICE_STATE, *PNDIS_WWAN_PACKET_SERVICE_STATE;

#define NDIS_WWAN_CONTEXT_STATE_REVISION_1      1
#if(NTDDI_VERSION >= NTDDI_WIN8 || NDIS_SUPPORT_NDIS630 )
#define NDIS_WWAN_CONTEXT_STATE_REVISION_2      2
#endif
#if(NTDDI_VERSION >= NTDDI_WIN10_RS1 || NDIS_SUPPORT_NDIS660 )
#define NDIS_WWAN_CONTEXT_STATE_REVISION_3      3
#endif
#if(NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684 )
#define NDIS_WWAN_CONTEXT_STATE_REVISION_4      4
#endif

typedef struct _NDIS_WWAN_CONTEXT_STATE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_CONTEXT_STATE  ContextState;
} NDIS_WWAN_CONTEXT_STATE, *PNDIS_WWAN_CONTEXT_STATE;

#define SIZEOF_NDIS_WWAN_CONTEXT_STATE_REVISION_1                   \
    ( FIELD_OFFSET(NDIS_WWAN_CONTEXT_STATE,ContextState) +          \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_CONTEXT_STATE,VoiceCallState) )
#define SIZEOF_NDIS_WWAN_CONTEXT_STATE_REVISION_2                   \
    ( FIELD_OFFSET(NDIS_WWAN_CONTEXT_STATE,ContextState) +          \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_CONTEXT_STATE,IPType) )
#define SIZEOF_NDIS_WWAN_CONTEXT_STATE_REVISION_3                   \
    ( FIELD_OFFSET(NDIS_WWAN_CONTEXT_STATE,ContextState) +          \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_CONTEXT_STATE,ConnectionMedia) )
#define MIN_SIZEOF_NDIS_WWAN_CONTEXT_STATE_REVISION_4               \
    ( FIELD_OFFSET(NDIS_WWAN_CONTEXT_STATE,ContextState) +          \
      RTL_SIZEOF_THROUGH_FIELD(WWAN_CONTEXT_STATE,AdditionalRejectionInfo) )


#define NDIS_WWAN_PROVISIONED_CONTEXTS_REVISION_1   1

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)
// must be the same as NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_2
#define NDIS_WWAN_PROVISIONED_CONTEXTS_REVISION_2    NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_2
#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

typedef struct _NDIS_WWAN_PROVISIONED_CONTEXTS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_LIST_HEADER    ContextListHeader;
} NDIS_WWAN_PROVISIONED_CONTEXTS, *PNDIS_WWAN_PROVISIONED_CONTEXTS;

#define NDIS_WWAN_SMS_CONFIGURATION_REVISION_1      1

typedef struct _NDIS_WWAN_SMS_CONFIGURATION {
    NDIS_OBJECT_HEADER      Header;
    WWAN_STATUS         uStatus;
    WWAN_SMS_CONFIGURATION  SmsConfiguration;
} NDIS_WWAN_SMS_CONFIGURATION, *PNDIS_WWAN_SMS_CONFIGURATION;

#define NDIS_WWAN_SMS_RECEIVE_REVISION_1        1

typedef struct _NDIS_WWAN_SMS_RECEIVE {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_LIST_HEADER    SmsListHeader;
} NDIS_WWAN_SMS_RECEIVE, *PNDIS_WWAN_SMS_RECEIVE;

#define NDIS_WWAN_SMS_SEND_STATUS_REVISION_1        1

typedef struct _NDIS_WWAN_SMS_SEND_STATUS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    ULONG       MessageReference;
} NDIS_WWAN_SMS_SEND_STATUS, *PNDIS_WWAN_SMS_SEND_STATUS;

#define NDIS_WWAN_SMS_DELETE_STATUS_REVISION_1      1

typedef struct _NDIS_WWAN_SMS_DELETE_STATUS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
} NDIS_WWAN_SMS_DELETE_STATUS, *PNDIS_WWAN_SMS_DELETE_STATUS;

#define NDIS_WWAN_SMS_STATUS_REVISION_1         1

typedef struct _NDIS_WWAN_SMS_STATUS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_SMS_STATUS SmsStatus;
} NDIS_WWAN_SMS_STATUS, *PNDIS_WWAN_SMS_STATUS;

#if (NTDDI_VERSION >= NTDDI_WIN8 || NDIS_SUPPORT_NDIS630)

#define NDIS_WWAN_SUPPORTED_DEVICE_SERVICES_REVISION_1  1
#define SIZEOF_NDIS_WWAN_SUPPORTED_DEVICE_SERVICES_1              sizeof(NDIS_WWAN_SUPPORTED_DEVICE_SERVICES)

typedef struct _NDIS_WWAN_SUPPORTED_DEVICE_SERVICES {
  NDIS_OBJECT_HEADER Header;
  WWAN_STATUS uStatus;
  WWAN_SUPPORTED_DEVICE_SERVICES DeviceServices;
} NDIS_WWAN_SUPPORTED_DEVICE_SERVICES, *PNDIS_WWAN_SUPPORTED_DEVICE_SERVICES;

#define NDIS_WWAN_DEVICE_SERVICE_RESPONSE_REVISION_1    1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_RESPONSE_1      sizeof(NDIS_WWAN_DEVICE_SERVICE_RESPONSE)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_RESPONSE {
   NDIS_OBJECT_HEADER Header;
   WWAN_STATUS uStatus;
   WWAN_DEVICE_SERVICE_RESPONSE Response;
} NDIS_WWAN_DEVICE_SERVICE_RESPONSE, *PNDIS_WWAN_DEVICE_SERVICE_RESPONSE;

#define NDIS_WWAN_DEVICE_SERVICE_EVENT_REVISION_1       1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_EVENT_1         sizeof(NDIS_WWAN_DEVICE_SERVICE_EVENT)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_EVENT {
  NDIS_OBJECT_HEADER Header;
  WWAN_DEVICE_SERVICE_EVENT Event;
} NDIS_WWAN_DEVICE_SERVICE_EVENT, *PNDIS_WWAN_DEVICE_SERVICE_EVENT;

#define NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION_REVISION_1       1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION_1         sizeof(NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION {
  NDIS_OBJECT_HEADER Header;
  WWAN_STATUS uStatus;
  WWAN_LIST_HEADER DeviceServiceListHeader;
} NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION, *PNDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION;

#define NDIS_WWAN_HOME_PROVIDER_REVISION_2      2

typedef struct _NDIS_WWAN_HOME_PROVIDER2 {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_PROVIDER2  Provider;
} NDIS_WWAN_HOME_PROVIDER2, *PNDIS_WWAN_HOME_PROVIDER2;

#define NDIS_WWAN_USSD_EVENT_REVISION_1 1

typedef struct _NDIS_WWAN_USSD_EVENT {
  NDIS_OBJECT_HEADER     Header;
  WWAN_STATUS            uStatus;
  WWAN_USSD_EVENT        UssdEvent;
} NDIS_WWAN_USSD_EVENT, *PNDIS_WWAN_USSD_EVENT;

#define NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS_REVISION_1       1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS_1         sizeof(NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS {
  NDIS_OBJECT_HEADER Header;
  WWAN_STATUS uStatus;
  WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS SupportedCommands; 
} NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS, *PNDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;

#define NDIS_WWAN_AUTH_CHALLENGE_REVISION_1     1

typedef struct _NDIS_WWAN_AUTH_CHALLENGE {
    NDIS_OBJECT_HEADER        Header;
    WWAN_AUTH_CHALLENGE       AuthChallenge;
} NDIS_WWAN_AUTH_CHALLENGE, *PNDIS_WWAN_AUTH_CHALLENGE;

#define NDIS_WWAN_AUTH_RESPONSE_REVISION_1      1

typedef struct _NDIS_WWAN_AUTH_RESPONSE {
    NDIS_OBJECT_HEADER        Header;
    WWAN_STATUS           uStatus;
    WWAN_AUTH_RESPONSE       AuthResponse;
} NDIS_WWAN_AUTH_RESPONSE, *PNDIS_WWAN_AUTH_RESPONSE;

#define NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS_REVISION_1    1

typedef struct _NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS     uStatus;
    WWAN_LIST_HEADER    PreferredListHeader;
} NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS, *PNDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS;

#define NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE_REVISION_1  1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE_1    sizeof(NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE {
   NDIS_OBJECT_HEADER Header;
   WWAN_STATUS uStatus;
} NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE, *PNDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE;

#define NDIS_WWAN_DEVICE_SERVICE_SESSION_READ_REVISION_1    1
#define SIZEOF_NDIS_WWAN_DEVICE_SERVICE_SESSION_READ_1      sizeof(NDIS_WWAN_DEVICE_SERVICE_SESSION_READ)

typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_READ {
  NDIS_OBJECT_HEADER Header;
  WWAN_DEVICE_SERVICE_SESSION_READ ReadData;
} NDIS_WWAN_DEVICE_SERVICE_SESSION_READ, *PNDIS_WWAN_DEVICE_SERVICE_SESSION_READ;

#define NDIS_WWAN_IP_ADDRESS_STATE_REVISION_1    1
#define SIZEOF_NDIS_WWAN_IP_ADDRESS_STATE_1     sizeof(NDIS_WWAN_IP_ADDRESS_STATE)

typedef struct _NDIS_WWAN_IP_ADDRESS_STATE
{
   NDIS_OBJECT_HEADER           Header;   
   WWAN_IP_ADDRESS_STATE        WwanIpAddressState;
} NDIS_WWAN_IP_ADDRESS_STATE, *PNDIS_WWAN_IP_ADDRESS_STATE;

#endif

#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD || NDIS_SUPPORT_NDIS650)

#define NDIS_WWAN_SYS_CAPS_INFO_REVISION_1          1

typedef struct _NDIS_WWAN_SYS_CAPS_INFO {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS         uStatus;
    WWAN_SYS_CAPS_INFO  SysCapsInfo;
} NDIS_WWAN_SYS_CAPS_INFO, *PNDIS_WWAN_SYS_CAPS_INFO;

#define NDIS_WWAN_DEVICE_SLOT_MAPPING_INFO_REVISION_1          1

typedef struct _NDIS_WWAN_DEVICE_SLOT_MAPPING_INFO {
    NDIS_OBJECT_HEADER              Header;
    WWAN_STATUS                     uStatus;
    WWAN_DEVICE_SLOT_MAPPING_INFO   DeviceSlotMappingInfo;
} NDIS_WWAN_DEVICE_SLOT_MAPPING_INFO, *PNDIS_WWAN_DEVICE_SLOT_MAPPING_INFO;

#define NDIS_WWAN_SLOT_INFO_REVISION_1              1

typedef struct _NDIS_WWAN_SLOT_INFO {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS         uStatus;
    WWAN_SLOT_INFO      SlotInfo;
} NDIS_WWAN_SLOT_INFO, *PNDIS_WWAN_SLOT_INFO;

#define NDIS_WWAN_DEVICE_BINDINGS_INFO_REVISION_1   1

typedef struct _NDIS_WWAN_DEVICE_BINDINGS_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_DEVICE_BINDINGS_INFO   DeviceBindingsInfo;
} NDIS_WWAN_DEVICE_BINDINGS_INFO, *PNDIS_WWAN_DEVICE_BINDINGS_INFO;

#define NDIS_WWAN_IMS_VOICE_STATE_REVISION_1        1

typedef struct _NDIS_WWAN_IMS_VOICE_STATE {
    NDIS_OBJECT_HEADER      Header;
    WWAN_STATUS             uStatus;
    WWAN_IMS_VOICE_STATE    ImsVoiceState;
} NDIS_WWAN_IMS_VOICE_STATE, *PNDIS_WWAN_IMS_VOICE_STATE;

#define NDIS_WWAN_LOCATION_STATE_INFO_REVISION_1    1

typedef struct _NDIS_WWAN_LOCATION_STATE_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_LOCATION_STATE_INFO    LocationStateInfo;
} NDIS_WWAN_LOCATION_STATE_INFO, *PNDIS_WWAN_LOCATION_STATE_INFO;

#define NDIS_WWAN_PRESHUTDOWN_STATE_REVISION_1  1
#define SIZEOF_NDIS_WWAN_PRESHUTDOWN_STATE_1    sizeof(NDIS_WWAN_PRESHUTDOWN_STATE)

typedef struct _NDIS_WWAN_PRESHUTDOWN_STATE {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
} NDIS_WWAN_PRESHUTDOWN_STATE, *PNDIS_WWAN_PRESHUTDOWN_STATE;

#endif // (NTDDI_VERSION >= NTDDI_WINTHRESHOLD)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS1 || NDIS_SUPPORT_NDIS660)

#define NDIS_WWAN_ATR_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_ATR_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_ATR_INFO AtrInfo;
} NDIS_WWAN_ATR_INFO, *PNDIS_WWAN_ATR_INFO;

#define NDIS_WWAN_UICC_OPEN_CHANNEL_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_UICC_OPEN_CHANNEL_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_OPEN_CHANNEL_INFO UiccOpenChannelInfo;
} NDIS_WWAN_UICC_OPEN_CHANNEL_INFO, *PNDIS_WWAN_UICC_OPEN_CHANNEL_INFO;

#define NDIS_WWAN_UICC_CLOSE_CHANNEL_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_UICC_CLOSE_CHANNEL_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_CLOSE_CHANNEL_INFO UiccCloseChannelInfo;
} NDIS_WWAN_UICC_CLOSE_CHANNEL_INFO, *PNDIS_WWAN_UICC_CLOSE_CHANNEL_INFO;

#define NDIS_WWAN_UICC_APDU_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_UICC_APDU_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_APDU_INFO UiccApduInfo;
} NDIS_WWAN_UICC_APDU_INFO, *PNDIS_WWAN_UICC_APDU_INFO;

#define NDIS_WWAN_UICC_TERMINAL_CAPABILITY_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_UICC_TERMINAL_CAPABILITY_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_LIST_HEADER CapabilityListHeader;
} NDIS_WWAN_UICC_TERMINAL_CAPABILITY_INFO, *PNDIS_WWAN_UICC_TERMINAL_CAPABILITY_INFO;

#define NDIS_WWAN_PS_MEDIA_CONFIG_STATE_1      1

typedef struct _NDIS_WWAN_PS_MEDIA_CONFIG_STATE {
    NDIS_OBJECT_HEADER              Header;
    WWAN_STATUS                     uStatus;
    DWORD                           nNumItems;
    WWAN_PS_MEDIA_CONFIG_ITEM       PSMediaConfigItems[1];
} NDIS_WWAN_PS_MEDIA_CONFIG_STATE, *PNDIS_WWAN_PS_MEDIA_CONFIG_STATE;

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS1)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#define NDIS_WWAN_SAR_CONFIG_INFO_REVISION_1                 1

typedef struct _NDIS_WWAN_SAR_CONFIG_INFO {
    NDIS_OBJECT_HEADER        Header;
    WWAN_STATUS               uStatus;
    WWAN_SAR_CONFIG_INFO      SarConfig;
} NDIS_WWAN_SAR_CONFIG_INFO, *PNDIS_WWAN_SAR_CONFIG_INFO;

#define NDIS_WWAN_SAR_TRANSMISSION_STATUS_INFO_REVISION_1    1

typedef struct _NDIS_WWAN_SAR_TRANSMISSION_STATUS_INFO {
    NDIS_OBJECT_HEADER                    Header;
    WWAN_STATUS                           uStatus;
    WWAN_SAR_TRANSMISSION_STATUS_INFO     TransmissionStatus;
} NDIS_WWAN_SAR_TRANSMISSION_STATUS_INFO, *PNDIS_WWAN_SAR_TRANSMISSION_STATUS_INFO;

#define NDIS_WWAN_NETWORK_BLACKLIST_REVISION_1    1

typedef struct _NDIS_WWAN_NETWORK_BLACKLIST {
    NDIS_OBJECT_HEADER                    Header;
    WWAN_STATUS                           uStatus;
    WWAN_NETWORK_BLACKLIST_INFO           NetworkBlacklistInfo;
} NDIS_WWAN_NETWORK_BLACKLIST, *PNDIS_WWAN_NETWORK_BLACKLIST;

typedef struct _NDIS_WWAN_LTE_ATTACH_CONTEXTS {
    NDIS_OBJECT_HEADER         Header;
    WWAN_STATUS                uStatus;
    WWAN_LTE_ATTACH_CONFIG     LteAttachContext;
} NDIS_WWAN_LTE_ATTACH_CONTEXTS, *PNDIS_WWAN_LTE_ATTACH_CONTEXTS;
#define NDIS_WWAN_LTE_ATTACH_CONTEXT_REVISION_1        1

typedef struct _NDIS_WWAN_LTE_ATTACH_STATUS {
    NDIS_OBJECT_HEADER      Header;
    WWAN_STATUS             uStatus;
    WWAN_LTE_ATTACH_STATUS  LteAttachStatus;
} NDIS_WWAN_LTE_ATTACH_STATUS, *PNDIS_WWAN_LTE_ATTACH_STATUS;
#define NDIS_WWAN_LTE_ATTACH_STATUS_REVISION_1        1

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS2 || NDIS_SUPPORT_NDIS670)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS3 || NDIS_SUPPORT_NDIS680)

#define NDIS_WWAN_MODEM_CONFIG_INFO_REVISION_1                 1

typedef struct _NDIS_WWAN_MODEM_CONFIG_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_MODEM_CONFIG_INFO      ModemConfigInfo;
}  NDIS_WWAN_MODEM_CONFIG_INFO, *PNDIS_WWAN_MODEM_CONFIG_INFO;

#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)
#define NDIS_WWAN_MODEM_CONFIG_INFO_REVISION_2                 2
#endif

#define NDIS_WWAN_PCO_STATUS_REVISION_1                        1

typedef struct _NDIS_WWAN_PCO_STATUS {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_PCO_VALUE              PcoValue;
} NDIS_WWAN_PCO_STATUS, *PNDIS_WWAN_PCO_STATUS;

#define NDIS_WWAN_UICC_RESET_INFO_REVISION_1 1

typedef struct _NDIS_WWAN_UICC_RESET_INFO {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_RESET_INFO UiccResetInfo;
} NDIS_WWAN_UICC_RESET_INFO, *PNDIS_WWAN_UICC_RESET_INFO;

#define NDIS_WWAN_DEVICE_RESET_STATUS_REVISION_1 1

typedef struct _NDIS_WWAN_DEVICE_RESET_STATUS {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
} NDIS_WWAN_DEVICE_RESET_STATUS, *PNDIS_WWAN_DEVICE_RESET_STATUS;

#define NDIS_WWAN_BASE_STATIONS_INFO_REVISION_1                1

typedef struct _NDIS_WWAN_BASE_STATIONS_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_BASE_STATIONS_INFO     BaseStationsInfo;
} NDIS_WWAN_BASE_STATIONS_INFO, *PNDIS_WWAN_BASE_STATIONS_INFO;

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS3 || NDIS_SUPPORT_NDIS680)

#if (NTDDI_VERSION >= NTDDI_WIN10_RS4 || NDIS_SUPPORT_NDIS680)
// (may need to restrict to higher NDIS version such as 7.0)

typedef enum _WWAN_MPDP_OPERATION {
    WwanMPDPOperationCreateChildInterface = 0,      // create a new MPDP child interface
    WwanMPDPOperationDeleteChildInterface,          // delete an exiting MPDP child interface
    WwanMPDPOperationMax
} WWAN_MPDP_OPERATION, *PWWAN_MPDP_OPERATION;

typedef struct _NDIS_WWAN_MPDP_INFO  
{  
    WWAN_MPDP_OPERATION         Operation;          
    GUID                        ChildInterfaceGUID; // GUID of the child interface to be deleted.
    NDIS_WWAN_MAC_ADDRESS       MacAddr;            // unused at present
} NDIS_WWAN_MPDP_INFO, *PNDIS_WWAN_MPDP_INFO;

// data for OID_WWAN_MPDP set request
typedef struct _NDIS_WWAN_SET_MPDP_STATE{
    NDIS_OBJECT_HEADER          Header;
    NDIS_WWAN_MPDP_INFO         Info; 
} NDIS_WWAN_SET_MPDP_STATE, *PNDIS_WWAN_SET_MPDP_STATE;

// data for NDIS_STATUS_WWAN_MPDP_STATE notification
typedef struct _NDIS_WWAN_MPDP_STATE {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    NDIS_WWAN_MPDP_INFO         Info;
} NDIS_WWAN_MPDP_STATE, *PNDIS_WWAN_MPDP_STATE;

// data for NDIS_STATUS_WWAN_MPDP_LIST notification
// The ElementType of the list must be WwanStructMPDPChildInterface. 
// ElementCount of interface GUIDs must follow this header.
typedef struct _NDIS_WWAN_MPDP_LIST {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_LIST_HEADER            ChildInterfaceList;
} NDIS_WWAN_MPDP_LIST, *PNDIS_WWAN_MPDP_LIST;

#define NDIS_WWAN_MPDP_SET_QUERY_REVISION_1         1
#define SIZEOF_NDIS_WWAN_SET_MPDP_STATE_1           sizeof(NDIS_WWAN_SET_MPDP_STATE)
#define SIZEOF_NDIS_WWAN_MPDP_STATE_1               sizeof(NDIS_WWAN_MPDP_STATE)
#define SIZEOF_NDIS_WWAN_MPDP_LIST_1                sizeof(NDIS_WWAN_MPDP_LIST)

#endif // (NTDDI_VERSION >= NTDDI_WIN10_RS4 || NDIS_SUPPORT_NDIS680)

#if (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS683)
#define NDIS_WWAN_NITZ_INFO_REVISION_1              1

typedef struct _NDIS_WWAN_NITZ_INFO {
    NDIS_OBJECT_HEADER  Header;
    WWAN_STATUS         uStatus;
    WWAN_NITZ_INFO      NitzInfo;
} NDIS_WWAN_NITZ_INFO, *PNDIS_WWAN_NITZ_INFO;

#define NDIS_WWAN_UICC_APP_LIST_REVISION_1          1

typedef struct _NDIS_WWAN_UICC_APP_LIST {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_APP_LIST UiccAppList;
} NDIS_WWAN_UICC_APP_LIST, *PNDIS_WWAN_UICC_APP_LIST;
#define NDIS_WWAN_UICC_FILE_STATUS_REVISION_1       1

typedef struct _NDIS_WWAN_UICC_FILE_STATUS {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_FILE_STATUS UiccFileStatus;
} NDIS_WWAN_UICC_FILE_STATUS, *PNDIS_WWAN_UICC_FILE_STATUS;

#define NDIS_WWAN_UICC_RESPONSE_REVISION_1          1

typedef struct _NDIS_WWAN_UICC_RESPONSE {
    NDIS_OBJECT_HEADER Header;
    WWAN_STATUS uStatus;
    WWAN_UICC_RESPONSE UiccResponse;
} NDIS_WWAN_UICC_RESPONSE, *PNDIS_WWAN_UICC_RESPONSE;

#define NDIS_WWAN_MODEM_LOGGING_CONFIG_REVISION_1               1

typedef struct _NDIS_WWAN_MODEM_LOGGING_CONFIG {
    NDIS_OBJECT_HEADER        Header;
    WWAN_STATUS               uStatus;
    WWAN_MODEM_LOGGING_CONFIG ModemLoggingConfig;
} NDIS_WWAN_MODEM_LOGGING_CONFIG, *PNDIS_WWAN_MODEM_LOGGING_CONFIG;

#endif // (NTDDI_VERSION >= NTDDI_WIN10_19H1 || NDIS_SUPPORT_NDIS683)

#if (NTDDI_VERSION >= NTDDI_WIN10_VB || NDIS_SUPPORT_NDIS684)

#define NDIS_WWAN_REGISTER_PARAMS_INFO_REVISION_1       1

// data for NDIS_STATUS_WWAN_REGISTER_PARAMS_STATE
typedef struct _NDIS_WWAN_REGISTER_PARAMS_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_REGISTER_PARAMS_INFO   RegisterParamsInfo;
} NDIS_WWAN_REGISTER_PARAMS_INFO, *PNDIS_WWAN_REGISTER_PARAMS_INFO;

#define NDIS_WWAN_NETWORK_PARAMS_INFO_REVISION_1        1

// data for NDIS_STATUS_WWAN_NETWORK_PARAMS_STATE
typedef struct _NDIS_WWAN_NETWORK_PARAMS_INFO {
    NDIS_OBJECT_HEADER          Header;
    WWAN_STATUS                 uStatus;
    WWAN_NETWORK_PARAMS_INFO    NetworkParamsInfo;
} NDIS_WWAN_NETWORK_PARAMS_INFO, *PNDIS_WWAN_NETWORK_PARAMS_INFO;

#endif

#endif //__NDIS_WWAN_DECL__
