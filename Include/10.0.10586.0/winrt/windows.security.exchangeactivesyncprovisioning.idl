//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Security
    {
        namespace ExchangeActiveSyncProvisioning
        {
            typedef enum EasRequireEncryptionResult EasRequireEncryptionResult;

            typedef enum EasEncryptionProviderType EasEncryptionProviderType;

            typedef enum EasMinPasswordLengthResult EasMinPasswordLengthResult;

            typedef enum EasDisallowConvenienceLogonResult EasDisallowConvenienceLogonResult;

            typedef enum EasMinPasswordComplexCharactersResult EasMinPasswordComplexCharactersResult;

            typedef enum EasPasswordExpirationResult EasPasswordExpirationResult;

            typedef enum EasPasswordHistoryResult EasPasswordHistoryResult;

            typedef enum EasMaxPasswordFailedAttemptsResult EasMaxPasswordFailedAttemptsResult;

            typedef enum EasMaxInactivityTimeLockResult EasMaxInactivityTimeLockResult;

            interface IEasClientSecurityPolicy;

            interface IEasComplianceResults;

            interface IEasComplianceResults2;

            interface IEasClientDeviceInformation;

            interface IEasClientDeviceInformation2;

            runtimeclass EasComplianceResults;

            runtimeclass EasClientSecurityPolicy;

            runtimeclass EasClientDeviceInformation;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Security
    {
        namespace ExchangeActiveSyncProvisioning
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Security.ExchangeActiveSyncProvisioning.EasComplianceResults*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Security
    {
        namespace ExchangeActiveSyncProvisioning
        {
            [deprecated("EasRequireEncryptionResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasRequireEncryptionResult
            {
                NotEvaluated               = 0,
                Compliant                  = 1,
                CanBeCompliant             = 2,
                NotProvisionedOnAllVolumes = 3,
                [deprecated("DeFixedDataNotSupported may be altered or unavailable for releases after Windows 8.1. Instead, use FixedDataNotSupported.", deprecate, 0x06030000)]
                DeFixedDataNotSupported    = 4,
                [version(0x06030000)]
                FixedDataNotSupported      = 4,
                [deprecated("DeHardwareNotCompliant may be altered or unavailable for releases after Windows 8.1. Instead, use HardwareNotCompliant.", deprecate, 0x06030000)]
                DeHardwareNotCompliant     = 5,
                [version(0x06030000)]
                HardwareNotCompliant       = 5,
                [deprecated("DeWinReNotConfigured may be altered or unavailable for releases after Windows 8.1. Instead, use LockNotConfigured.", deprecate, 0x06030000)]
                DeWinReNotConfigured       = 6,
                [version(0x06030000)]
                LockNotConfigured          = 6,
                [deprecated("DeProtectionSuspended may be altered or unavailable for releases after Windows 8.1. Instead, use ProtectionSuspended.", deprecate, 0x06030000)]
                DeProtectionSuspended      = 7,
                [version(0x06030000)]
                ProtectionSuspended        = 7,
                [deprecated("DeOsVolumeNotProtected may be altered or unavailable for releases after Windows 8.1. Instead, use OsVolumeNotProtected.", deprecate, 0x06030000)]
                DeOsVolumeNotProtected     = 8,
                [version(0x06030000)]
                OsVolumeNotProtected       = 8,
                [deprecated("DeProtectionNotYetEnabled may be altered or unavailable for releases after Windows 8.1. Instead, use ProtectionNotYetEnabled.", deprecate, 0x06030000)]
                DeProtectionNotYetEnabled  = 9,
                [version(0x06030000)]
                ProtectionNotYetEnabled    = 9,
                NoFeatureLicense           = 10,
                OsNotProtected             = 11,
                [version(0x06030000)]
                UnexpectedFailure          = 12
            };

            [deprecated("EasEncryptionProviderType is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06030000)]
            enum EasEncryptionProviderType
            {
                NotEvaluated      = 0,
                WindowsEncryption = 1,
                OtherEncryption   = 2
            };

            [deprecated("EasMinPasswordLengthResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasMinPasswordLengthResult
            {
                NotEvaluated                             = 0,
                Compliant                                = 1,
                CanBeCompliant                           = 2,
                RequestedPolicyIsStricter                = 3,
                RequestedPolicyNotEnforceable            = 4,
                InvalidParameter                         = 5,
                CurrentUserHasBlankPassword              = 6,
                AdminsHaveBlankPassword                  = 7,
                UserCannotChangePassword                 = 8,
                AdminsCannotChangePassword               = 9,
                LocalControlledUsersCannotChangePassword = 10,
                ConnectedAdminsProviderPolicyIsWeak      = 11,
                ConnectedUserProviderPolicyIsWeak        = 12,
                ChangeConnectedAdminsPassword            = 13,
                ChangeConnectedUserPassword              = 14
            };

            [deprecated("EasDisallowConvenienceLogonResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasDisallowConvenienceLogonResult
            {
                NotEvaluated              = 0,
                Compliant                 = 1,
                CanBeCompliant            = 2,
                RequestedPolicyIsStricter = 3
            };

            [deprecated("EasMinPasswordComplexCharactersResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasMinPasswordComplexCharactersResult
            {
                NotEvaluated                             = 0,
                Compliant                                = 1,
                CanBeCompliant                           = 2,
                RequestedPolicyIsStricter                = 3,
                RequestedPolicyNotEnforceable            = 4,
                InvalidParameter                         = 5,
                CurrentUserHasBlankPassword              = 6,
                AdminsHaveBlankPassword                  = 7,
                UserCannotChangePassword                 = 8,
                AdminsCannotChangePassword               = 9,
                LocalControlledUsersCannotChangePassword = 10,
                ConnectedAdminsProviderPolicyIsWeak      = 11,
                ConnectedUserProviderPolicyIsWeak        = 12,
                ChangeConnectedAdminsPassword            = 13,
                ChangeConnectedUserPassword              = 14
            };

            [deprecated("EasPasswordExpirationResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasPasswordExpirationResult
            {
                NotEvaluated                             = 0,
                Compliant                                = 1,
                CanBeCompliant                           = 2,
                RequestedPolicyIsStricter                = 3,
                RequestedExpirationIncompatible          = 4,
                InvalidParameter                         = 5,
                UserCannotChangePassword                 = 6,
                AdminsCannotChangePassword               = 7,
                LocalControlledUsersCannotChangePassword = 8
            };

            [deprecated("EasPasswordHistoryResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasPasswordHistoryResult
            {
                NotEvaluated              = 0,
                Compliant                 = 1,
                CanBeCompliant            = 2,
                RequestedPolicyIsStricter = 3,
                InvalidParameter          = 4
            };

            [deprecated("EasMaxPasswordFailedAttemptsResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasMaxPasswordFailedAttemptsResult
            {
                NotEvaluated              = 0,
                Compliant                 = 1,
                CanBeCompliant            = 2,
                RequestedPolicyIsStricter = 3,
                InvalidParameter          = 4
            };

            [deprecated("EasMaxInactivityTimeLockResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            enum EasMaxInactivityTimeLockResult
            {
                NotEvaluated              = 0,
                Compliant                 = 1,
                CanBeCompliant            = 2,
                RequestedPolicyIsStricter = 3,
                InvalidParameter          = 4
            };

            [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [exclusiveto(Windows.Security.ExchangeActiveSyncProvisioning.EasClientSecurityPolicy)]
            [uuid(45B72362-DFBA-4A9B-ACED-6FE2ADCB6420)]
            [version(0x06020000)]
            interface IEasClientSecurityPolicy : IInspectable
            {
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT RequireEncryption([out] [retval] boolean* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT RequireEncryption([in] boolean value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MinPasswordLength([out] [retval] BYTE* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT MinPasswordLength([in] BYTE value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT DisallowConvenienceLogon([out] [retval] boolean* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT DisallowConvenienceLogon([in] boolean value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MinPasswordComplexCharacters([out] [retval] BYTE* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT MinPasswordComplexCharacters([in] BYTE value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT PasswordExpiration([out] [retval] Windows.Foundation.TimeSpan* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT PasswordExpiration([in] Windows.Foundation.TimeSpan value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT PasswordHistory([out] [retval] UINT32* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT PasswordHistory([in] UINT32 value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MaxPasswordFailedAttempts([out] [retval] BYTE* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT MaxPasswordFailedAttempts([in] BYTE value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MaxInactivityTimeLock([out] [retval] Windows.Foundation.TimeSpan* value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propput] HRESULT MaxInactivityTimeLock([in] Windows.Foundation.TimeSpan value);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] HRESULT CheckCompliance([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasComplianceResults** result);
                [deprecated("IEasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] HRESULT ApplyAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Security.ExchangeActiveSyncProvisioning.EasComplianceResults*>** operation);
            }

            [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [exclusiveto(Windows.Security.ExchangeActiveSyncProvisioning.EasComplianceResults)]
            [uuid(463C299C-7F19-4C66-B403-CB45DD57A2B3)]
            [version(0x06020000)]
            interface IEasComplianceResults : IInspectable
            {
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT Compliant([out] [retval] boolean* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT RequireEncryptionResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasRequireEncryptionResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MinPasswordLengthResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasMinPasswordLengthResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT DisallowConvenienceLogonResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasDisallowConvenienceLogonResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MinPasswordComplexCharactersResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasMinPasswordComplexCharactersResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT PasswordExpirationResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasPasswordExpirationResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT PasswordHistoryResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasPasswordHistoryResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MaxPasswordFailedAttemptsResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasMaxPasswordFailedAttemptsResult* value);
                [deprecated("IEasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT MaxInactivityTimeLockResult([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasMaxInactivityTimeLockResult* value);
            }

            [deprecated("IEasComplianceResults2 is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [exclusiveto(Windows.Security.ExchangeActiveSyncProvisioning.EasComplianceResults)]
            [uuid(2FBE60C9-1AA8-47F5-88BB-CB3EF0BFFB15)]
            [version(0x06030000)]
            interface IEasComplianceResults2 : IInspectable
                requires
                    Windows.Security.ExchangeActiveSyncProvisioning.IEasComplianceResults
            {
                [deprecated("IEasComplianceResults2 is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)] [propget] HRESULT EncryptionProviderType([out] [retval] Windows.Security.ExchangeActiveSyncProvisioning.EasEncryptionProviderType* value);
            }

            [exclusiveto(Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation)]
            [uuid(54DFD981-1968-4CA3-B958-E595D16505EB)]
            [version(0x06020000)]
            interface IEasClientDeviceInformation : IInspectable
            {
                [propget] HRESULT Id([out] [retval] GUID* value);
                [propget] HRESULT OperatingSystem([out] [retval] HSTRING* value);
                [propget] HRESULT FriendlyName([out] [retval] HSTRING* value);
                [propget] HRESULT SystemManufacturer([out] [retval] HSTRING* value);
                [propget] HRESULT SystemProductName([out] [retval] HSTRING* value);
                [propget] HRESULT SystemSku([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation)]
            [uuid(FFB35923-BB26-4D6A-81BC-165AEE0AD754)]
            [version(0x0A000000)]
            interface IEasClientDeviceInformation2 : IInspectable
                requires
                    Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation
            {
                [propget] HRESULT SystemHardwareVersion([out] [retval] HSTRING* value);
                [propget] HRESULT SystemFirmwareVersion([out] [retval] HSTRING* value);
            }

            [deprecated("EasComplianceResults is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [version(0x06020000)]
            runtimeclass EasComplianceResults
            {
                [default] interface Windows.Security.ExchangeActiveSyncProvisioning.IEasComplianceResults;
                [version(0x06030000)] interface Windows.Security.ExchangeActiveSyncProvisioning.IEasComplianceResults2;
            }

            [activatable(0x06020000)]
            [deprecated("EasClientSecurityPolicy is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass EasClientSecurityPolicy
            {
                [default] interface Windows.Security.ExchangeActiveSyncProvisioning.IEasClientSecurityPolicy;
            }

            [activatable(0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass EasClientDeviceInformation
            {
                [default] interface Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation;
                [version(0x0A000000)] interface Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation2;
            }
        }
    }
}
