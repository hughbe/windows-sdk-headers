//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Devices.Enumeration.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Graphics.Imaging.idl";
import "Windows.Media.idl";
import "Windows.Media.Devices.Core.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edevices2Eenumeration_h__)")
cpp_quote("#include <Windows.Devices.Enumeration.h>")
cpp_quote("#endif // !defined(__windows2Edevices2Eenumeration_h__)")
cpp_quote("#if !defined(__windows2Efoundation2Enumerics_h__)")
cpp_quote("#include <Windows.Foundation.Numerics.h>")
cpp_quote("#endif // !defined(__windows2Efoundation2Enumerics_h__)")
cpp_quote("#if !defined(__windows2Egraphics2Eimaging_h__)")
cpp_quote("#include <Windows.Graphics.Imaging.h>")
cpp_quote("#endif // !defined(__windows2Egraphics2Eimaging_h__)")
cpp_quote("#if !defined(__windows2Emedia_h__)")
cpp_quote("#include <Windows.Media.h>")
cpp_quote("#endif // !defined(__windows2Emedia_h__)")
cpp_quote("#if !defined(__windows2Emedia2Edevices2Ecore_h__)")
cpp_quote("#include <Windows.Media.Devices.Core.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Edevices2Ecore_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Devices
    {
        namespace Enumeration
        {
            typedef enum DeviceWatcherStatus DeviceWatcherStatus;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            typedef enum CollectionChange CollectionChange;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Matrix4x4 Matrix4x4;

            typedef struct Vector3 Vector3;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Imaging
        {
            typedef enum BitmapAlphaMode BitmapAlphaMode;

            typedef enum BitmapPixelFormat BitmapPixelFormat;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Devices
        {
            namespace Core
            {
                runtimeclass CameraIntrinsics;
            }
        }
    }
}
namespace Windows
{
    namespace Media
    {
        runtimeclass VideoFrame;
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Perception
        {
            typedef enum PerceptionFrameSourceAccessStatus PerceptionFrameSourceAccessStatus;

            typedef enum PerceptionFrameSourcePropertyChangeStatus PerceptionFrameSourcePropertyChangeStatus;

            interface IPerceptionColorFrameSourceWatcher;

            interface IPerceptionDepthFrameSourceWatcher;

            interface IPerceptionInfraredFrameSourceWatcher;

            interface IPerceptionColorFrameSourceAddedEventArgs;

            interface IPerceptionColorFrameSourceRemovedEventArgs;

            interface IPerceptionDepthFrameSourceAddedEventArgs;

            interface IPerceptionDepthFrameSourceRemovedEventArgs;

            interface IPerceptionInfraredFrameSourceAddedEventArgs;

            interface IPerceptionInfraredFrameSourceRemovedEventArgs;

            interface IKnownPerceptionFrameSourcePropertiesStatics;

            interface IKnownPerceptionFrameSourcePropertiesStatics2;

            interface IKnownPerceptionVideoFrameSourcePropertiesStatics;

            interface IKnownPerceptionInfraredFrameSourcePropertiesStatics;

            interface IKnownPerceptionDepthFrameSourcePropertiesStatics;

            interface IKnownPerceptionColorFrameSourcePropertiesStatics;

            interface IKnownPerceptionVideoProfilePropertiesStatics;

            interface IKnownCameraIntrinsicsPropertiesStatics;

            interface IPerceptionFrameSourcePropertyChangeResult;

            interface IPerceptionFrameSourcePropertiesChangedEventArgs;

            interface IPerceptionInfraredFrameSourceStatics;

            interface IPerceptionDepthFrameSourceStatics;

            interface IPerceptionColorFrameSourceStatics;

            interface IPerceptionColorFrameSource;

            interface IPerceptionColorFrameSource2;

            interface IPerceptionDepthFrameSource;

            interface IPerceptionDepthFrameSource2;

            interface IPerceptionInfraredFrameSource;

            interface IPerceptionInfraredFrameSource2;

            interface IPerceptionVideoProfile;

            interface IPerceptionColorFrameArrivedEventArgs;

            interface IPerceptionDepthFrameArrivedEventArgs;

            interface IPerceptionInfraredFrameArrivedEventArgs;

            interface IPerceptionDepthCorrelatedCameraIntrinsics;

            interface IPerceptionDepthCorrelatedCoordinateMapper;

            interface IPerceptionControlSession;

            interface IPerceptionColorFrameReader;

            interface IPerceptionDepthFrameReader;

            interface IPerceptionInfraredFrameReader;

            interface IPerceptionColorFrame;

            interface IPerceptionDepthFrame;

            interface IPerceptionInfraredFrame;

            runtimeclass PerceptionColorFrameSourceWatcher;

            runtimeclass PerceptionColorFrameSourceAddedEventArgs;

            runtimeclass PerceptionColorFrameSourceRemovedEventArgs;

            runtimeclass PerceptionDepthFrameSourceWatcher;

            runtimeclass PerceptionDepthFrameSourceAddedEventArgs;

            runtimeclass PerceptionDepthFrameSourceRemovedEventArgs;

            runtimeclass PerceptionInfraredFrameSourceWatcher;

            runtimeclass PerceptionInfraredFrameSourceAddedEventArgs;

            runtimeclass PerceptionInfraredFrameSourceRemovedEventArgs;

            runtimeclass PerceptionColorFrameSource;

            runtimeclass PerceptionDepthFrameSource;

            runtimeclass PerceptionInfraredFrameSource;

            runtimeclass PerceptionControlSession;

            runtimeclass PerceptionFrameSourcePropertyChangeResult;

            runtimeclass PerceptionFrameSourcePropertiesChangedEventArgs;

            runtimeclass PerceptionVideoProfile;

            runtimeclass PerceptionDepthCorrelatedCameraIntrinsics;

            runtimeclass PerceptionDepthCorrelatedCoordinateMapper;

            runtimeclass PerceptionColorFrameReader;

            runtimeclass PerceptionDepthFrameReader;

            runtimeclass PerceptionInfraredFrameReader;

            runtimeclass PerceptionColorFrameArrivedEventArgs;

            runtimeclass PerceptionColorFrame;

            runtimeclass PerceptionDepthFrameArrivedEventArgs;

            runtimeclass PerceptionDepthFrame;

            runtimeclass PerceptionInfraredFrameArrivedEventArgs;

            runtimeclass PerceptionInfraredFrame;

            runtimeclass KnownPerceptionFrameSourceProperties;

            runtimeclass KnownPerceptionVideoFrameSourceProperties;

            runtimeclass KnownPerceptionInfraredFrameSourceProperties;

            runtimeclass KnownPerceptionDepthFrameSourceProperties;

            runtimeclass KnownPerceptionColorFrameSourceProperties;

            runtimeclass KnownPerceptionVideoProfileProperties;

            runtimeclass KnownCameraIntrinsicsProperties;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Perception
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Devices.Perception.PerceptionColorFrameSource*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Devices.Perception.PerceptionDepthFrameSource*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Devices.Perception.PerceptionInfraredFrameSource*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Devices.Perception.PerceptionVideoProfile*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Devices.Perception.PerceptionColorFrameSource*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Devices.Perception.PerceptionDepthFrameSource*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Devices.Perception.PerceptionInfraredFrameSource*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Devices.Perception.PerceptionVideoProfile*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionColorFrameSource*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionDepthFrameSource*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionInfraredFrameSource*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionColorFrameSource*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCameraIntrinsics*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCoordinateMapper*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthFrameSource*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourceAccessStatus>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionInfraredFrameSource*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionColorFrameSource*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionDepthFrameSource*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionInfraredFrameSource*>*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameReader*, Windows.Devices.Perception.PerceptionColorFrameArrivedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, Windows.Devices.Perception.PerceptionColorFrameSourceAddedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, Windows.Devices.Perception.PerceptionColorFrameSourceRemovedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionControlSession*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameReader*, Windows.Devices.Perception.PerceptionDepthFrameArrivedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, Windows.Devices.Perception.PerceptionDepthFrameSourceAddedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, Windows.Devices.Perception.PerceptionDepthFrameSourceRemovedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameReader*, Windows.Devices.Perception.PerceptionInfraredFrameArrivedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, Windows.Devices.Perception.PerceptionInfraredFrameSourceAddedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, Windows.Devices.Perception.PerceptionInfraredFrameSourceRemovedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Perception
        {
            [version(0x0A000000)]
            enum PerceptionFrameSourceAccessStatus
            {
                Unspecified    = 0,
                Allowed        = 1,
                DeniedByUser   = 2,
                DeniedBySystem = 3
            };

            [version(0x0A000000)]
            enum PerceptionFrameSourcePropertyChangeStatus
            {
                Unknown              = 0,
                Accepted             = 1,
                LostControl          = 2,
                PropertyNotSupported = 3,
                PropertyReadOnly     = 4,
                ValueOutOfRange      = 5
            };

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSourceWatcher)]
            [uuid(96BD1392-E667-40C4-89F9-1462DEA6A9CC)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameSourceWatcher : IInspectable
            {
                [eventadd] HRESULT SourceAdded([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, Windows.Devices.Perception.PerceptionColorFrameSourceAddedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceAdded([in] EventRegistrationToken token);
                [eventadd] HRESULT SourceRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, Windows.Devices.Perception.PerceptionColorFrameSourceRemovedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceRemoved([in] EventRegistrationToken token);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken token);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken token);
                [propget] HRESULT Status([out] [retval] Windows.Devices.Enumeration.DeviceWatcherStatus* value);
                HRESULT Start();
                HRESULT Stop();
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher)]
            [uuid(780E96D1-8D02-4D2B-ADA4-5BA624A0EB10)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameSourceWatcher : IInspectable
            {
                [eventadd] HRESULT SourceAdded([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, Windows.Devices.Perception.PerceptionDepthFrameSourceAddedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceAdded([in] EventRegistrationToken token);
                [eventadd] HRESULT SourceRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, Windows.Devices.Perception.PerceptionDepthFrameSourceRemovedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceRemoved([in] EventRegistrationToken token);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken token);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken token);
                [propget] HRESULT Status([out] [retval] Windows.Devices.Enumeration.DeviceWatcherStatus* value);
                HRESULT Start();
                HRESULT Stop();
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher)]
            [uuid(383CFF99-D70C-444D-A8B0-720C2E66FE3B)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameSourceWatcher : IInspectable
            {
                [eventadd] HRESULT SourceAdded([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, Windows.Devices.Perception.PerceptionInfraredFrameSourceAddedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceAdded([in] EventRegistrationToken token);
                [eventadd] HRESULT SourceRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, Windows.Devices.Perception.PerceptionInfraredFrameSourceRemovedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SourceRemoved([in] EventRegistrationToken token);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken token);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken token);
                [propget] HRESULT Status([out] [retval] Windows.Devices.Enumeration.DeviceWatcherStatus* value);
                HRESULT Start();
                HRESULT Stop();
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSourceAddedEventArgs)]
            [uuid(D16BF4E6-DA24-442C-BBD5-55549B5B94F3)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameSourceAddedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionColorFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSourceRemovedEventArgs)]
            [uuid(D277FA69-EB4C-42EF-BA4F-288F615C93C1)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameSourceRemovedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionColorFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSourceAddedEventArgs)]
            [uuid(93A48168-8BF8-45D2-A2F8-4AC0931CC7A6)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameSourceAddedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionDepthFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSourceRemovedEventArgs)]
            [uuid(A0C0CC4D-E96C-4D81-86DD-38B95E49C6DF)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameSourceRemovedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionDepthFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSourceAddedEventArgs)]
            [uuid(6D334120-95CE-4660-907A-D98035AA2B7C)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameSourceAddedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSourceRemovedEventArgs)]
            [uuid(EA1A8071-7A70-4A61-AF94-07303853F695)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameSourceRemovedEventArgs : IInspectable
            {
                [propget] HRESULT FrameSource([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrameSource** value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionFrameSourceProperties)]
            [uuid(5DF1CCA2-01F8-4A87-B859-D5E5B7E1DE47)]
            [version(0x0A000000)]
            interface IKnownPerceptionFrameSourcePropertiesStatics : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT PhysicalDeviceIds([out] [retval] HSTRING* value);
                [propget] HRESULT FrameKind([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceModelVersion([out] [retval] HSTRING* value);
                [deprecated("Use DeviceId and DeviceInformation.FromIdAsync instead to access EnclosureLocation information.", deprecate, 0x0A000001)] [propget] HRESULT EnclosureLocation([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionFrameSourceProperties)]
            [uuid(A9C86871-05DC-4A4D-8A5C-A4ECF26BBC46)]
            [version(0x0A000001)]
            interface IKnownPerceptionFrameSourcePropertiesStatics2 : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionVideoFrameSourceProperties)]
            [uuid(5DF1CCA2-01F8-4A87-B859-D5E5B7E1DE48)]
            [version(0x0A000000)]
            interface IKnownPerceptionVideoFrameSourcePropertiesStatics : IInspectable
            {
                [propget] HRESULT VideoProfile([out] [retval] HSTRING* value);
                [propget] HRESULT SupportedVideoProfiles([out] [retval] HSTRING* value);
                [propget] HRESULT AvailableVideoProfiles([out] [retval] HSTRING* value);
                [propget] HRESULT IsMirrored([out] [retval] HSTRING* value);
                [propget] HRESULT CameraIntrinsics([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionInfraredFrameSourceProperties)]
            [uuid(5DF1CCA2-01F8-4A87-B859-D5E5B7E1DE49)]
            [version(0x0A000000)]
            interface IKnownPerceptionInfraredFrameSourcePropertiesStatics : IInspectable
            {
                [propget] HRESULT Exposure([out] [retval] HSTRING* value);
                [propget] HRESULT AutoExposureEnabled([out] [retval] HSTRING* value);
                [propget] HRESULT ExposureCompensation([out] [retval] HSTRING* value);
                [propget] HRESULT ActiveIlluminationEnabled([out] [retval] HSTRING* value);
                [propget] HRESULT AmbientSubtractionEnabled([out] [retval] HSTRING* value);
                [propget] HRESULT StructureLightPatternEnabled([out] [retval] HSTRING* value);
                [propget] HRESULT InterleavedIlluminationEnabled([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionDepthFrameSourceProperties)]
            [uuid(5DF1CCA2-01F8-4A87-B859-D5E5B7E1DE4A)]
            [version(0x0A000000)]
            interface IKnownPerceptionDepthFrameSourcePropertiesStatics : IInspectable
            {
                [propget] HRESULT MinDepth([out] [retval] HSTRING* value);
                [propget] HRESULT MaxDepth([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionColorFrameSourceProperties)]
            [uuid(5DF1CCA2-01F8-4A87-B859-D5E5B7E1DE4B)]
            [version(0x0A000000)]
            interface IKnownPerceptionColorFrameSourcePropertiesStatics : IInspectable
            {
                [propget] HRESULT Exposure([out] [retval] HSTRING* value);
                [propget] HRESULT AutoExposureEnabled([out] [retval] HSTRING* value);
                [propget] HRESULT ExposureCompensation([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownPerceptionVideoProfileProperties)]
            [uuid(8F08E2E7-5A76-43E3-A13A-DA3D91A9EF98)]
            [version(0x0A000000)]
            interface IKnownPerceptionVideoProfilePropertiesStatics : IInspectable
            {
                [propget] HRESULT BitmapPixelFormat([out] [retval] HSTRING* value);
                [propget] HRESULT BitmapAlphaMode([out] [retval] HSTRING* value);
                [propget] HRESULT Width([out] [retval] HSTRING* value);
                [propget] HRESULT Height([out] [retval] HSTRING* value);
                [propget] HRESULT FrameDuration([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.KnownCameraIntrinsicsProperties)]
            [uuid(08C03978-437A-4D97-A663-FD3195600249)]
            [version(0x0A000000)]
            interface IKnownCameraIntrinsicsPropertiesStatics : IInspectable
            {
                [propget] HRESULT FocalLength([out] [retval] HSTRING* value);
                [propget] HRESULT PrincipalPoint([out] [retval] HSTRING* value);
                [propget] HRESULT RadialDistortion([out] [retval] HSTRING* value);
                [propget] HRESULT TangentialDistortion([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult)]
            [uuid(1E33390A-3C90-4D22-B898-F42BBA6418FF)]
            [version(0x0A000000)]
            interface IPerceptionFrameSourcePropertyChangeResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeStatus* value);
                [propget] HRESULT NewValue([out] [retval] IInspectable** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs)]
            [uuid(6C68E068-BCF1-4ECC-B891-7625D1244B6B)]
            [version(0x0A000000)]
            interface IPerceptionFrameSourcePropertiesChangedEventArgs : IInspectable
            {
                [propget] HRESULT CollectionChange([out] [retval] Windows.Foundation.Collections.CollectionChange* value);
                [propget] HRESULT Key([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSource)]
            [uuid(5DF3CCA2-01F8-4A87-B859-D5E5B7E1DE47)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameSourceStatics : IInspectable
            {
                HRESULT CreateWatcher([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrameSourceWatcher** watcher);
                HRESULT FindAllAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionInfraredFrameSource*>*>** result);
                HRESULT FromIdAsync([in] HSTRING id, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionInfraredFrameSource*>** result);
                HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourceAccessStatus>** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSource)]
            [uuid(5DF3CCA2-01F8-4A87-B859-D5E5B7E1DE48)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameSourceStatics : IInspectable
            {
                HRESULT CreateWatcher([out] [retval] Windows.Devices.Perception.PerceptionDepthFrameSourceWatcher** watcher);
                HRESULT FindAllAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionDepthFrameSource*>*>** result);
                HRESULT FromIdAsync([in] HSTRING id, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthFrameSource*>** result);
                HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourceAccessStatus>** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSource)]
            [uuid(5DF3CCA2-01F8-4A87-B859-D5E5B7E1DE49)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameSourceStatics : IInspectable
            {
                HRESULT CreateWatcher([out] [retval] Windows.Devices.Perception.PerceptionColorFrameSourceWatcher** watcher);
                HRESULT FindAllAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionColorFrameSource*>*>** result);
                HRESULT FromIdAsync([in] HSTRING id, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionColorFrameSource*>** result);
                HRESULT RequestAccessAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourceAccessStatus>** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSource)]
            [uuid(DC6DBA7C-0B58-468D-9CA1-6DB04CC0477C)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameSource : IInspectable
            {
                [eventadd] HRESULT AvailableChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT AvailableChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT ActiveChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ActiveChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT PropertiesChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PropertiesChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT VideoProfileChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT VideoProfileChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT CameraIntrinsicsChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CameraIntrinsicsChanged([in] EventRegistrationToken token);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceKind([out] [retval] HSTRING* value);
                [propget] HRESULT Available([out] [retval] boolean* value);
                [propget] HRESULT Active([out] [retval] boolean* value);
                [propget] HRESULT IsControlled([out] [retval] boolean* value);
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>** value);
                [propget] HRESULT SupportedVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT AvailableVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT VideoProfile([out] [retval] Windows.Devices.Perception.PerceptionVideoProfile** value);
                [propget] HRESULT CameraIntrinsics([out] [retval] Windows.Media.Devices.Core.CameraIntrinsics** value);
                HRESULT AcquireControlSession([out] [retval] Windows.Devices.Perception.PerceptionControlSession** value);
                HRESULT CanControlIndependentlyFrom([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT IsCorrelatedWith([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT TryGetTransformTo([in] HSTRING targetId, [out] Windows.Foundation.Numerics.Matrix4x4* result, [out] [retval] boolean* hasResult);
                HRESULT TryGetDepthCorrelatedCameraIntrinsicsAsync([in] Windows.Devices.Perception.PerceptionDepthFrameSource* correlatedDepthFrameSource, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCameraIntrinsics*>** result);
                HRESULT TryGetDepthCorrelatedCoordinateMapperAsync([in] HSTRING targetSourceId, [in] Windows.Devices.Perception.PerceptionDepthFrameSource* correlatedDepthFrameSource, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCoordinateMapper*>** result);
                HRESULT TrySetVideoProfileAsync([in] Windows.Devices.Perception.PerceptionControlSession* controlSession, [in] Windows.Devices.Perception.PerceptionVideoProfile* profile, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult*>** result);
                HRESULT OpenReader([out] [retval] Windows.Devices.Perception.PerceptionColorFrameReader** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameSource)]
            [uuid(F88008E5-5631-45ED-AD98-8C6AA04CFB91)]
            [version(0x0A000001)]
            interface IPerceptionColorFrameSource2 : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSource)]
            [uuid(79D433D6-47FB-4DF1-BFC9-F01D40BD9942)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameSource : IInspectable
            {
                [eventadd] HRESULT AvailableChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT AvailableChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT ActiveChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ActiveChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT PropertiesChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PropertiesChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT VideoProfileChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT VideoProfileChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT CameraIntrinsicsChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CameraIntrinsicsChanged([in] EventRegistrationToken token);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceKind([out] [retval] HSTRING* value);
                [propget] HRESULT Available([out] [retval] boolean* value);
                [propget] HRESULT Active([out] [retval] boolean* value);
                [propget] HRESULT IsControlled([out] [retval] boolean* value);
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>** value);
                [propget] HRESULT SupportedVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT AvailableVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT VideoProfile([out] [retval] Windows.Devices.Perception.PerceptionVideoProfile** value);
                [propget] HRESULT CameraIntrinsics([out] [retval] Windows.Media.Devices.Core.CameraIntrinsics** value);
                HRESULT AcquireControlSession([out] [retval] Windows.Devices.Perception.PerceptionControlSession** result);
                HRESULT CanControlIndependentlyFrom([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT IsCorrelatedWith([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT TryGetTransformTo([in] HSTRING targetId, [out] Windows.Foundation.Numerics.Matrix4x4* result, [out] [retval] boolean* hasResult);
                HRESULT TryGetDepthCorrelatedCameraIntrinsicsAsync([in] Windows.Devices.Perception.PerceptionDepthFrameSource* target, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCameraIntrinsics*>** result);
                HRESULT TryGetDepthCorrelatedCoordinateMapperAsync([in] HSTRING targetId, [in] Windows.Devices.Perception.PerceptionDepthFrameSource* depthFrameSourceToMapWith, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCoordinateMapper*>** result);
                HRESULT TrySetVideoProfileAsync([in] Windows.Devices.Perception.PerceptionControlSession* controlSession, [in] Windows.Devices.Perception.PerceptionVideoProfile* profile, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult*>** result);
                HRESULT OpenReader([out] [retval] Windows.Devices.Perception.PerceptionDepthFrameReader** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameSource)]
            [uuid(E3D23D2E-6E2C-4E6D-91D9-704CD8DFF79D)]
            [version(0x0A000001)]
            interface IPerceptionDepthFrameSource2 : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSource)]
            [uuid(55B08742-1808-494E-9E30-9D2A7BE8F700)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameSource : IInspectable
            {
                [eventadd] HRESULT AvailableChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT AvailableChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT ActiveChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ActiveChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT PropertiesChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, Windows.Devices.Perception.PerceptionFrameSourcePropertiesChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT PropertiesChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT VideoProfileChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT VideoProfileChanged([in] EventRegistrationToken token);
                [eventadd] HRESULT CameraIntrinsicsChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameSource*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT CameraIntrinsicsChanged([in] EventRegistrationToken token);
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceKind([out] [retval] HSTRING* value);
                [propget] HRESULT Available([out] [retval] boolean* value);
                [propget] HRESULT Active([out] [retval] boolean* value);
                [propget] HRESULT IsControlled([out] [retval] boolean* value);
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IMapView<HSTRING, IInspectable*>** value);
                [propget] HRESULT SupportedVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT AvailableVideoProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Perception.PerceptionVideoProfile*>** value);
                [propget] HRESULT VideoProfile([out] [retval] Windows.Devices.Perception.PerceptionVideoProfile** value);
                [propget] HRESULT CameraIntrinsics([out] [retval] Windows.Media.Devices.Core.CameraIntrinsics** value);
                HRESULT AcquireControlSession([out] [retval] Windows.Devices.Perception.PerceptionControlSession** result);
                HRESULT CanControlIndependentlyFrom([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT IsCorrelatedWith([in] HSTRING targetId, [out] [retval] boolean* result);
                HRESULT TryGetTransformTo([in] HSTRING targetId, [out] Windows.Foundation.Numerics.Matrix4x4* result, [out] [retval] boolean* hasResult);
                HRESULT TryGetDepthCorrelatedCameraIntrinsicsAsync([in] Windows.Devices.Perception.PerceptionDepthFrameSource* target, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCameraIntrinsics*>** result);
                HRESULT TryGetDepthCorrelatedCoordinateMapperAsync([in] HSTRING targetId, [in] Windows.Devices.Perception.PerceptionDepthFrameSource* depthFrameSourceToMapWith, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionDepthCorrelatedCoordinateMapper*>** result);
                HRESULT TrySetVideoProfileAsync([in] Windows.Devices.Perception.PerceptionControlSession* controlSession, [in] Windows.Devices.Perception.PerceptionVideoProfile* profile, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult*>** result);
                HRESULT OpenReader([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrameReader** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameSource)]
            [uuid(DCD4D798-4B0B-4300-8D85-410817FAA032)]
            [version(0x0A000001)]
            interface IPerceptionInfraredFrameSource2 : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionVideoProfile)]
            [uuid(75763EA3-011A-470E-8225-6F05ADE25648)]
            [version(0x0A000000)]
            interface IPerceptionVideoProfile : IInspectable
            {
                [propget] HRESULT BitmapPixelFormat([out] [retval] Windows.Graphics.Imaging.BitmapPixelFormat* value);
                [propget] HRESULT BitmapAlphaMode([out] [retval] Windows.Graphics.Imaging.BitmapAlphaMode* value);
                [propget] HRESULT Width([out] [retval] INT32* value);
                [propget] HRESULT Height([out] [retval] INT32* value);
                [propget] HRESULT FrameDuration([out] [retval] Windows.Foundation.TimeSpan* value);
                HRESULT IsEqual([in] Windows.Devices.Perception.PerceptionVideoProfile* other, [out] [retval] boolean* result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameArrivedEventArgs)]
            [uuid(8FAD02D5-86F7-4D8D-B966-5A3761BA9F59)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameArrivedEventArgs : IInspectable
            {
                [propget] HRESULT RelativeTime([out] [retval] Windows.Foundation.TimeSpan* value);
                HRESULT TryOpenFrame([out] [retval] Windows.Devices.Perception.PerceptionColorFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameArrivedEventArgs)]
            [uuid(443D25B2-B282-4637-9173-AC978435C985)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameArrivedEventArgs : IInspectable
            {
                [propget] HRESULT RelativeTime([out] [retval] Windows.Foundation.TimeSpan* value);
                HRESULT TryOpenFrame([out] [retval] Windows.Devices.Perception.PerceptionDepthFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameArrivedEventArgs)]
            [uuid(9F77FAC7-B4BD-4857-9D50-BE8EF075DAEF)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameArrivedEventArgs : IInspectable
            {
                [propget] HRESULT RelativeTime([out] [retval] Windows.Foundation.TimeSpan* value);
                HRESULT TryOpenFrame([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthCorrelatedCameraIntrinsics)]
            [uuid(6548CA01-86DE-5BE1-6582-807FCF4C95CF)]
            [version(0x0A000000)]
            interface IPerceptionDepthCorrelatedCameraIntrinsics : IInspectable
            {
                HRESULT UnprojectPixelAtCorrelatedDepth([in] Windows.Foundation.Point pixelCoordinate, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [out] [retval] Windows.Foundation.Numerics.Vector3* result);
                HRESULT UnprojectPixelsAtCorrelatedDepth([in] UINT32 __sourceCoordinatesSize, [in] [size_is(__sourceCoordinatesSize)] Windows.Foundation.Point* sourceCoordinates, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __resultsSize, [out] [size_is(__resultsSize)] Windows.Foundation.Numerics.Vector3* results);
                HRESULT UnprojectRegionPixelsAtCorrelatedDepthAsync([in] Windows.Foundation.Rect region, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __resultsSize, [out] [size_is(__resultsSize)] Windows.Foundation.Numerics.Vector3* results, [out] [retval] Windows.Foundation.IAsyncAction** result);
                HRESULT UnprojectAllPixelsAtCorrelatedDepthAsync([in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __resultsSize, [out] [size_is(__resultsSize)] Windows.Foundation.Numerics.Vector3* results, [out] [retval] Windows.Foundation.IAsyncAction** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthCorrelatedCoordinateMapper)]
            [uuid(5B4D9D1D-B5F6-469C-B8C2-B97A45E6863B)]
            [version(0x0A000000)]
            interface IPerceptionDepthCorrelatedCoordinateMapper : IInspectable
            {
                HRESULT MapPixelToTarget([in] Windows.Foundation.Point sourcePixelCoordinate, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [out] [retval] Windows.Foundation.Point* result);
                HRESULT MapPixelsToTarget([in] UINT32 __sourceCoordinatesSize, [in] [size_is(__sourceCoordinatesSize)] Windows.Foundation.Point* sourceCoordinates, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __resultsSize, [out] [size_is(__resultsSize)] Windows.Foundation.Point* results);
                HRESULT MapRegionOfPixelsToTargetAsync([in] Windows.Foundation.Rect region, [in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __targetCoordinatesSize, [out] [size_is(__targetCoordinatesSize)] Windows.Foundation.Point* targetCoordinates, [out] [retval] Windows.Foundation.IAsyncAction** result);
                HRESULT MapAllPixelsToTargetAsync([in] Windows.Devices.Perception.PerceptionDepthFrame* depthFrame, [in] UINT32 __targetCoordinatesSize, [out] [size_is(__targetCoordinatesSize)] Windows.Foundation.Point* targetCoordinates, [out] [retval] Windows.Foundation.IAsyncAction** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionControlSession)]
            [uuid(99998653-5A3D-417F-9239-F1889E548B48)]
            [version(0x0A000000)]
            interface IPerceptionControlSession : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [eventadd] HRESULT ControlLost([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionControlSession*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ControlLost([in] EventRegistrationToken token);
                HRESULT TrySetPropertyAsync([in] HSTRING name, [in] IInspectable* value, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Perception.PerceptionFrameSourcePropertyChangeResult*>** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrameReader)]
            [uuid(7650F56E-B9F5-461B-83AD-F222AF2AAADC)]
            [version(0x0A000000)]
            interface IPerceptionColorFrameReader : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [eventadd] HRESULT FrameArrived([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionColorFrameReader*, Windows.Devices.Perception.PerceptionColorFrameArrivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT FrameArrived([in] EventRegistrationToken token);
                [propget] HRESULT Source([out] [retval] Windows.Devices.Perception.PerceptionColorFrameSource** value);
                [propget] HRESULT IsPaused([out] [retval] boolean* value);
                [propput] HRESULT IsPaused([in] boolean value);
                HRESULT TryReadLatestFrame([out] [retval] Windows.Devices.Perception.PerceptionColorFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrameReader)]
            [uuid(B1A3C09F-299B-4612-A4F7-270F25A096EC)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrameReader : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [eventadd] HRESULT FrameArrived([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionDepthFrameReader*, Windows.Devices.Perception.PerceptionDepthFrameArrivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT FrameArrived([in] EventRegistrationToken token);
                [propget] HRESULT Source([out] [retval] Windows.Devices.Perception.PerceptionDepthFrameSource** value);
                [propget] HRESULT IsPaused([out] [retval] boolean* value);
                [propput] HRESULT IsPaused([in] boolean value);
                HRESULT TryReadLatestFrame([out] [retval] Windows.Devices.Perception.PerceptionDepthFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrameReader)]
            [uuid(7960CE18-D39B-4FC8-A04A-929734C6756C)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrameReader : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [eventadd] HRESULT FrameArrived([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Perception.PerceptionInfraredFrameReader*, Windows.Devices.Perception.PerceptionInfraredFrameArrivedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT FrameArrived([in] EventRegistrationToken token);
                [propget] HRESULT Source([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrameSource** value);
                [propget] HRESULT IsPaused([out] [retval] boolean* value);
                [propput] HRESULT IsPaused([in] boolean value);
                HRESULT TryReadLatestFrame([out] [retval] Windows.Devices.Perception.PerceptionInfraredFrame** result);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionColorFrame)]
            [uuid(FE621549-2CBF-4F94-9861-F817EA317747)]
            [version(0x0A000000)]
            interface IPerceptionColorFrame : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT VideoFrame([out] [retval] Windows.Media.VideoFrame** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionDepthFrame)]
            [uuid(A37B81FC-9906-4FFD-9161-0024B360B657)]
            [version(0x0A000000)]
            interface IPerceptionDepthFrame : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT VideoFrame([out] [retval] Windows.Media.VideoFrame** value);
            }

            [exclusiveto(Windows.Devices.Perception.PerceptionInfraredFrame)]
            [uuid(B0886276-849E-4C7A-8AE6-B56064532153)]
            [version(0x0A000000)]
            interface IPerceptionInfraredFrame : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                [propget] HRESULT VideoFrame([out] [retval] Windows.Media.VideoFrame** value);
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameSourceWatcher
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameSourceWatcher;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameSourceAddedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameSourceAddedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameSourceRemovedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameSourceRemovedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameSourceWatcher
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameSourceWatcher;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameSourceAddedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameSourceAddedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameSourceRemovedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameSourceRemovedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameSourceWatcher
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameSourceWatcher;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameSourceAddedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameSourceAddedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameSourceRemovedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameSourceRemovedEventArgs;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IPerceptionColorFrameSourceStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameSource
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameSource;
                [version(0x0A000001)] interface Windows.Devices.Perception.IPerceptionColorFrameSource2;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IPerceptionDepthFrameSourceStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameSource
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameSource;
                [version(0x0A000001)] interface Windows.Devices.Perception.IPerceptionDepthFrameSource2;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IPerceptionInfraredFrameSourceStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameSource
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameSource;
                [version(0x0A000001)] interface Windows.Devices.Perception.IPerceptionInfraredFrameSource2;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionControlSession
            {
                [default] interface Windows.Devices.Perception.IPerceptionControlSession;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionFrameSourcePropertyChangeResult
            {
                [default] interface Windows.Devices.Perception.IPerceptionFrameSourcePropertyChangeResult;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionFrameSourcePropertiesChangedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionFrameSourcePropertiesChangedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionVideoProfile
            {
                [default] interface Windows.Devices.Perception.IPerceptionVideoProfile;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthCorrelatedCameraIntrinsics
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthCorrelatedCameraIntrinsics;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthCorrelatedCoordinateMapper
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthCorrelatedCoordinateMapper;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameReader
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameReader;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameReader
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameReader;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameReader
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameReader;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrameArrivedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrameArrivedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionColorFrame
            {
                [default] interface Windows.Devices.Perception.IPerceptionColorFrame;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrameArrivedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrameArrivedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionDepthFrame
            {
                [default] interface Windows.Devices.Perception.IPerceptionDepthFrame;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrameArrivedEventArgs
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrameArrivedEventArgs;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PerceptionInfraredFrame
            {
                [default] interface Windows.Devices.Perception.IPerceptionInfraredFrame;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionFrameSourcePropertiesStatics, 0x0A000000)]
            [static(Windows.Devices.Perception.IKnownPerceptionFrameSourcePropertiesStatics2, 0x0A000001)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionFrameSourceProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionVideoFrameSourcePropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionVideoFrameSourceProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionInfraredFrameSourcePropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionInfraredFrameSourceProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionDepthFrameSourcePropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionDepthFrameSourceProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionColorFrameSourcePropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionColorFrameSourceProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownPerceptionVideoProfilePropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownPerceptionVideoProfileProperties
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Perception.IKnownCameraIntrinsicsPropertiesStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass KnownCameraIntrinsicsProperties
            {
            }
        }
    }
}
