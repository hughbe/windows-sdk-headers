

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eui2Examl2Emedia_h__
#define __windows2Eui2Examl2Emedia_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRateChangedRoutedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITimelineMarkerRoutedEventHandler;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IVisualTreeHelper;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IVisualTreeHelperStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IVisualTreeHelperStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPartialMediaFailureDetectedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPartialMediaFailureDetectedEventArgs2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixHelper;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixHelperStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositionTarget;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositionTargetStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamily;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamilyFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IFontFamilyStatics2;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRenderingEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBrushFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICacheMode;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICacheModeFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransformOverrides;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeneralTransformFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometry;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientStop;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientStopStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageSource;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageSourceFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathFigure;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathFigureStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathSegmentFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IProjection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IProjectionFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRateChangedRoutedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITimelineMarker;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITimelineMarkerStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITimelineMarkerRoutedEventArgs;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IArcSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IArcSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBezierSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBezierSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IBitmapCache;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IEllipseGeometry;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IEllipseGeometryStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryGroup;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGeometryGroupStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IGradientBrushFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineGeometry;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineGeometryStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILineSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrix3DProjection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrix3DProjectionStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathGeometry;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPathGeometryStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPlaneProjection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPlaneProjectionStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyBezierSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyBezierSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyLineSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyLineSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyQuadraticBezierSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IPolyQuadraticBezierSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IQuadraticBezierSegment;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IQuadraticBezierSegmentStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRectangleGeometry;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRectangleGeometryStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISolidColorBrushFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositeTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ICompositeTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ILinearGradientBrushFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IMatrixTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRotateTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IRotateTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IScaleTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IScaleTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISkewTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ISkewTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformGroup;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITransformGroupStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITranslateTransform;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITranslateTransformStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface ITileBrushFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageBrush;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    interface IImageBrushStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.Media.Playback.h"
#include "Windows.UI.Xaml.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Geometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface IGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3843 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3843 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3843_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3843_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8726dcbf-961d-527a-a7cb-2db47e1c9092"))
IIterator<ABI::Windows::UI::Xaml::Media::Geometry*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Geometry*, ABI::Windows::UI::Xaml::Media::IGeometry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Geometry>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Geometry*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3844 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3844 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3844_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3844_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("35340039-0dfc-52b4-8748-0d9a755db8a8"))
IIterable<ABI::Windows::UI::Xaml::Media::Geometry*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Geometry*, ABI::Windows::UI::Xaml::Media::IGeometry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Geometry>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Geometry*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GradientStop;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface IGradientStop;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3845 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3845 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3845_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3845_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("01dca32b-0938-5e4a-94ad-bb4906f651ed"))
IIterator<ABI::Windows::UI::Xaml::Media::GradientStop*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::GradientStop*, ABI::Windows::UI::Xaml::Media::IGradientStop*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.GradientStop>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::GradientStop*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3846 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3846 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3846_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3846_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9105bb93-ac26-5bae-8c1e-df8ecf00dee6"))
IIterable<ABI::Windows::UI::Xaml::Media::GradientStop*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::GradientStop*, ABI::Windows::UI::Xaml::Media::IGradientStop*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.GradientStop>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::GradientStop*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PathFigure;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface IPathFigure;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0004 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3847 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3847 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3847_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3847_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("71bd579b-088e-5e59-8876-80613dcff83e"))
IIterator<ABI::Windows::UI::Xaml::Media::PathFigure*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathFigure*, ABI::Windows::UI::Xaml::Media::IPathFigure*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.PathFigure>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::PathFigure*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3848 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3848 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3848_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3848_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0006 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cd1dc421-d6e5-5b3f-a8c7-9938f28b2995"))
IIterable<ABI::Windows::UI::Xaml::Media::PathFigure*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathFigure*, ABI::Windows::UI::Xaml::Media::IPathFigure*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.PathFigure>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::PathFigure*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PathSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface IPathSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0006 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3849 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3849 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3849_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3849_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0007 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3cfedcfb-7a75-5bc7-a7e2-95ee9bc6dd32"))
IIterator<ABI::Windows::UI::Xaml::Media::PathSegment*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathSegment*, ABI::Windows::UI::Xaml::Media::IPathSegment*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.PathSegment>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::PathSegment*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3850 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3850 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3850_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3850_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("37e2cb21-b9c9-5006-bed7-4c328981b551"))
IIterable<ABI::Windows::UI::Xaml::Media::PathSegment*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathSegment*, ABI::Windows::UI::Xaml::Media::IPathSegment*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.PathSegment>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::PathSegment*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TimelineMarker;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface ITimelineMarker;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0008 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3851 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3851 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3851_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3851_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("63e1e513-fca3-51c0-8c2b-09db5f8f4c40"))
IIterator<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3852 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3852 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3852_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3852_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("946c5af5-4c09-5784-9cf2-506947378e8e"))
IIterable<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Transform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface ITransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0010 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3853 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3853 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3853_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3853_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2cdbd536-4598-5f0f-a236-11ec053c8e4b"))
IIterator<ABI::Windows::UI::Xaml::Media::Transform*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Transform*, ABI::Windows::UI::Xaml::Media::ITransform*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Transform>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Transform*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0011 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3854 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3854 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3854_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3854_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fb8cacbc-d3ec-51b8-9778-99ede8463611"))
IIterable<ABI::Windows::UI::Xaml::Media::Transform*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Transform*, ABI::Windows::UI::Xaml::Media::ITransform*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Transform>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Transform*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0012 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3855 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3855 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3855_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3855_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0013 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1905e02c-de78-5136-b761-7b7a33402583"))
IVectorView<ABI::Windows::UI::Xaml::Media::Geometry*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Geometry*, ABI::Windows::UI::Xaml::Media::IGeometry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Geometry>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Geometry*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0013 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3856 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3856 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3856_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3856_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0014 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4c4a7b50-4bc3-52cb-8c81-2ea77702b566"))
IVectorView<ABI::Windows::UI::Xaml::Media::GradientStop*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::GradientStop*, ABI::Windows::UI::Xaml::Media::IGradientStop*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.GradientStop>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::GradientStop*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0014 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3857 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3857 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3857_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3857_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0015 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bfe78700-1265-548c-a06b-259cc2bd032b"))
IVectorView<ABI::Windows::UI::Xaml::Media::PathFigure*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathFigure*, ABI::Windows::UI::Xaml::Media::IPathFigure*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.PathFigure>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::PathFigure*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0015 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3858 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3858 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3858_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3858_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0016 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("54735271-a3db-5e42-85be-4ff85432364b"))
IVectorView<ABI::Windows::UI::Xaml::Media::PathSegment*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathSegment*, ABI::Windows::UI::Xaml::Media::IPathSegment*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.PathSegment>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::PathSegment*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0016 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3859 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3859 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3859_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3859_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0017 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fef8133f-98e9-5ca3-a667-0d234c5d1d96"))
IVectorView<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0017 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3860 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3860 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3860_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3860_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0018 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b3a869c7-9c78-525b-943e-16a2c8979b03"))
IVectorView<ABI::Windows::UI::Xaml::Media::Transform*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Transform*, ABI::Windows::UI::Xaml::Media::ITransform*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Transform>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Transform*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0018 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3861 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3861 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3861_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3861_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0019 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("84c6ac3a-8207-5599-9583-606ac2139ddd"))
IVector<ABI::Windows::UI::Xaml::Media::Geometry*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Geometry*, ABI::Windows::UI::Xaml::Media::IGeometry*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Geometry>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Geometry*> __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0019 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3862 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3862 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3862_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3862_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0020 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33422da4-24f3-5b52-9e8d-11dd71f08bb1"))
IVector<ABI::Windows::UI::Xaml::Media::GradientStop*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::GradientStop*, ABI::Windows::UI::Xaml::Media::IGradientStop*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.GradientStop>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::GradientStop*> __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0020 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3863 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3863 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3863_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3863_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0021 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("de29d405-26dd-5e72-8bcb-495199d4e5b5"))
IVector<ABI::Windows::UI::Xaml::Media::PathFigure*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathFigure*, ABI::Windows::UI::Xaml::Media::IPathFigure*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.PathFigure>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::PathFigure*> __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0021 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3864 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3864 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3864_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3864_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0022 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("11fdd506-b21d-564d-b6a8-ff991057b8f3"))
IVector<ABI::Windows::UI::Xaml::Media::PathSegment*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PathSegment*, ABI::Windows::UI::Xaml::Media::IPathSegment*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.PathSegment>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::PathSegment*> __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3865 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3865 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3865_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3865_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0023 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b2d8ddb4-d2b8-5930-942d-26118756bd46"))
IVector<ABI::Windows::UI::Xaml::Media::TimelineMarker*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::TimelineMarker*, ABI::Windows::UI::Xaml::Media::ITimelineMarker*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.TimelineMarker>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::TimelineMarker*> __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0023 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3866 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3866 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3866_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3866_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("62d7bbc1-71f5-5611-a984-e571c2de7baa"))
IVector<ABI::Windows::UI::Xaml::Media::Transform*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Transform*, ABI::Windows::UI::Xaml::Media::ITransform*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Transform>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Transform*> __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MediaElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface IMediaElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PartialMediaFailureDetectedEventArgs;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
interface IPartialMediaFailureDetectedEventArgs;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0024 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3867 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3867 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3867_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3867_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0025 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b402b0ca-beca-5537-8192-8f30f7cb5d0e"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::MediaElement*,ABI::Windows::UI::Xaml::Media::PartialMediaFailureDetectedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::MediaElement*, ABI::Windows::UI::Xaml::Controls::IMediaElement*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::PartialMediaFailureDetectedEventArgs*, ABI::Windows::UI::Xaml::Media::IPartialMediaFailureDetectedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.MediaElement, Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::MediaElement*,ABI::Windows::UI::Xaml::Media::PartialMediaFailureDetectedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IUIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0025 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3868 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3868 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3868_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3868_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0026 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1d1f9d60-d53b-57f7-b144-8f7c487846e8"))
IIterator<ABI::Windows::UI::Xaml::UIElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::UIElement*> __FIIterator_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0026 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3869 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3869 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3869_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3869_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0027 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42e26ae1-d357-57e8-bb48-f75c9ff69d91"))
IIterable<ABI::Windows::UI::Xaml::UIElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::UIElement*> __FIIterable_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class Popup;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
interface IPopup;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0027 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3870 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3870 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3870_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3870_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0028 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5bcb0970-5472-56e8-b184-d01fb81e408a"))
IIterator<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*, ABI::Windows::UI::Xaml::Controls::Primitives::IPopup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Controls.Primitives.Popup>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> __FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0028 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3871 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3871 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3871_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3871_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0029 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0af05ce9-3b0f-5a6d-a053-d01a1a554f8c"))
IIterable<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*, ABI::Windows::UI::Xaml::Controls::Primitives::IPopup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Controls.Primitives.Popup>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> __FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0029 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3872 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3872 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3872_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3872_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0030 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7d899fb2-4666-5a3e-b36c-9886bcbc4663"))
IVectorView<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*, ABI::Windows::UI::Xaml::Controls::Primitives::IPopup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Controls.Primitives.Popup>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Controls::Primitives::Popup*> __FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup_USE */

interface IInspectable;


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0030 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0030_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3873 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3873 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3873_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3873_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0031 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Object>"; }
};
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define ____FIEventHandler_1_IInspectable_FWD_DEFINED__
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_IInspectable_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct Point;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0031 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3874 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3874 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3874_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3874_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0032 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c602b59e-0a8e-5e99-b478-2b564585278d"))
IIterator<struct ABI::Windows::Foundation::Point> : IIterator_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Point>"; }
};
typedef IIterator<struct ABI::Windows::Foundation::Point> __FIIterator_1_Windows__CFoundation__CPoint_t;
#define ____FIIterator_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterator_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0032 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0032_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3875 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3875 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3875_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3875_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0033 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c192280d-3a09-5423-9dc5-67b83ebde41d"))
IIterable<struct ABI::Windows::Foundation::Point> : IIterable_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>"; }
};
typedef IIterable<struct ABI::Windows::Foundation::Point> __FIIterable_1_Windows__CFoundation__CPoint_t;
#define ____FIIterable_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0033 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3876 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3876 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3876_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3876_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0034 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE
#define DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0b7b4c9d-182f-582a-bddb-42b1aac30cad"))
IVectorView<struct ABI::Windows::Foundation::Point> : IVectorView_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Point>"; }
};
typedef IVectorView<struct ABI::Windows::Foundation::Point> __FIVectorView_1_Windows__CFoundation__CPoint_t;
#define ____FIVectorView_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIVectorView_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0034 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0034_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3877 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3877 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3877_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3877_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0035 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CFoundation__CPoint_USE
#define DEF___FIVector_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c0d513a9-ec4a-5a5d-b6d5-b707defdb9f7"))
IVector<struct ABI::Windows::Foundation::Point> : IVector_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Foundation.Point>"; }
};
typedef IVector<struct ABI::Windows::Foundation::Point> __FIVector_1_Windows__CFoundation__CPoint_t;
#define ____FIVector_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIVector_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0035 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3878 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3878 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3878_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3878_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0036 */
/* [local] */ 

#ifndef DEF___FIIterator_1_double_USE
#define DEF___FIIterator_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("638a2cf4-f474-5318-9055-141cb909ac4b"))
IIterator<double> : IIterator_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Double>"; }
};
typedef IIterator<double> __FIIterator_1_double_t;
#define ____FIIterator_1_double_FWD_DEFINED__
#define __FIIterator_1_double ABI::Windows::Foundation::Collections::__FIIterator_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_double_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0036 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0036_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3879 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3879 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3879_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3879_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0037 */
/* [local] */ 

#ifndef DEF___FIIterable_1_double_USE
#define DEF___FIIterable_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c738964e-9c64-5bce-b5ce-61e9a282ec4a"))
IIterable<double> : IIterable_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Double>"; }
};
typedef IIterable<double> __FIIterable_1_double_t;
#define ____FIIterable_1_double_FWD_DEFINED__
#define __FIIterable_1_double ABI::Windows::Foundation::Collections::__FIIterable_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_double_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0037 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3880 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3880 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3880_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3880_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0038 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_double_USE
#define DEF___FIVectorView_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af7586a8-6b21-5f61-bff1-1b682293ad96"))
IVectorView<double> : IVectorView_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Double>"; }
};
typedef IVectorView<double> __FIVectorView_1_double_t;
#define ____FIVectorView_1_double_FWD_DEFINED__
#define __FIVectorView_1_double ABI::Windows::Foundation::Collections::__FIVectorView_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_double_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0038 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0038_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3881 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3881 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3881_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3881_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0039 */
/* [local] */ 

#ifndef DEF___FIVector_1_double_USE
#define DEF___FIVector_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f452d23c-bf05-5f3e-88e7-d17a6716b911"))
IVector<double> : IVector_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Double>"; }
};
typedef IVector<double> __FIVector_1_double_t;
#define ____FIVector_1_double_FWD_DEFINED__
#define __FIVector_1_double ABI::Windows::Foundation::Collections::__FIVector_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_double_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Emedia2Eplayback_h__)
#include <Windows.Media.Playback.h>
#endif // !defined(__windows2Emedia2Eplayback_h__)
#if !defined(__windows2Eui_h__)
#include <Windows.UI.h>
#endif // !defined(__windows2Eui_h__)
#if !defined(__windows2Eui2Examl_h__)
#include <Windows.UI.Xaml.h>
#endif // !defined(__windows2Eui2Examl_h__)
#if !defined(__windows2Eui2Examl2Econtrols_h__)
#include <Windows.UI.Xaml.Controls.h>
#endif // !defined(__windows2Eui2Examl2Econtrols_h__)
#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#include <Windows.UI.Xaml.Controls.Primitives.h>
#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#if !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)
#include <Windows.UI.Xaml.Media.Media3D.h>
#endif // !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CMedia_CPlayback_CFailedMediaStreamKind __x_ABI_CWindows_CMedia_CPlayback_CFailedMediaStreamKind;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyObject;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyProperty;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CMatrix3D __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CMatrix3D;

#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Window;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CBrushMappingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CBrushMappingMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CColorInterpolationMode __x_ABI_CWindows_CUI_CXaml_CMedia_CColorInterpolationMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CGradientSpreadMethod __x_ABI_CWindows_CUI_CXaml_CMedia_CGradientSpreadMethod;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineCap __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineCap;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineJoin __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineJoin;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CSweepDirection __x_ABI_CWindows_CUI_CXaml_CMedia_CSweepDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentX __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentX;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentY __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentY;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix;

#endif




























































































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class VisualTreeHelper;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class MatrixHelper;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class CompositionTarget;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class DoubleCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class FontFamily;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GeometryCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GradientStopCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PathFigureCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PathSegmentCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PointCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class RenderingEventArgs;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TimelineMarkerCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TransformCollection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Brush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class CacheMode;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GeneralTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class ImageSource;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Projection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class RateChangedRoutedEventArgs;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TimelineMarkerRoutedEventArgs;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class ArcSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class BezierSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class BitmapCache;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class EllipseGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GeometryGroup;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GradientBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class LineGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class LineSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Matrix3DProjection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PathGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PlaneProjection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PolyBezierSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PolyLineSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class PolyQuadraticBezierSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class QuadraticBezierSegment;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class RectangleGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class SolidColorBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class CompositeTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class LinearGradientBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class MatrixTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class RotateTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class ScaleTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class SkewTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TransformGroup;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TranslateTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class TileBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class ImageBrush;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0039 */
/* [local] */ 


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Rect Rect;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Size Size;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Playback {
                
                typedef enum FailedMediaStreamKind FailedMediaStreamKind;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            
            typedef struct Color Color;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Media3D {
                        
                        typedef struct Matrix3D Matrix3D;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum MediaElementState MediaElementState;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AudioCategory AudioCategory;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AudioDeviceType AudioDeviceType;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum BrushMappingMode BrushMappingMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum ColorInterpolationMode ColorInterpolationMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum ElementCompositeMode ElementCompositeMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum FillRule FillRule;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum GradientSpreadMethod GradientSpreadMethod;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum MediaCanPlayResponse MediaCanPlayResponse;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum PenLineCap PenLineCap;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum PenLineJoin PenLineJoin;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum Stretch Stretch;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum StyleSimulations StyleSimulations;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum SweepDirection SweepDirection;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AlignmentX AlignmentX;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum AlignmentY AlignmentY;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef struct Matrix Matrix;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif































































































extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3882 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3882 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3882_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3882_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0040 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0040 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0040_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8726dcbf-961d-527a-a7cb-2db47e1c9092")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeometry **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0041 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0041 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3883 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3883 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3883_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3883_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0042 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0042 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0042_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35340039-0dfc-52b4-8748-0d9a755db8a8")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CGeometry **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0043 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGeometry */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0043 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3884 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3884 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3884_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3884_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0044 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0044 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0044_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01dca32b-0938-5e4a-94ad-bb4906f651ed")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGradientStop **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0045 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0045 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3885 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3885 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3885_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3885_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0046 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0046 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0046_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9105bb93-ac26-5bae-8c1e-df8ecf00dee6")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CGradientStop **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0047 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CGradientStop */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0047 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3886 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3886 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3886_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3886_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0048 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0048 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0048_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71bd579b-088e-5e59-8876-80613dcff83e")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathFigure **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0049 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0049 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3887 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3887 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3887_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3887_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0050 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0050 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0050_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("cd1dc421-d6e5-5b3f-a8c7-9938f28b2995")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathFigure **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0051 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathFigure */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0051 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3888 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3888 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3888_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3888_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0052 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0052 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0052_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3cfedcfb-7a75-5bc7-a7e2-95ee9bc6dd32")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathSegment **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0053 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0053 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3889 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3889 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3889_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3889_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0054 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0054 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0054_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37e2cb21-b9c9-5006-bed7-4c328981b551")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CPathSegment **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0055 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CPathSegment */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0055 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3890 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3890 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3890_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3890_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0056 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0056 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0056_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63e1e513-fca3-51c0-8c2b-09db5f8f4c40")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0057 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0057 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3891 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3891 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3891_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3891_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0058 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0058 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0058_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("946c5af5-4c09-5784-9cf2-506947378e8e")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0059 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0059 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3892 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3892 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3892_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3892_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0060 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0060 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0060_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2cdbd536-4598-5f0f-a236-11ec053c8e4b")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransformVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0061 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0061 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3893 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3893 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3893_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3893_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0062 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0062 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0062_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fb8cacbc-d3ec-51b8-9778-99ede8463611")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CTransform **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransformVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0063 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CTransform */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0063 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0063_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3894 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3894 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3894_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3894_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0064 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0064 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0064_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1905e02c-de78-5136-b761-7b7a33402583")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeometry **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0065 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0065 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0065_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3895 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3895 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3895_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3895_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0066 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0066 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0066_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4c4a7b50-4bc3-52cb-8c81-2ea77702b566")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGradientStop **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGradientStop *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0067 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0067 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0067_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3896 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3896 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3896_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3896_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0068 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0068 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0068_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bfe78700-1265-548c-a06b-259cc2bd032b")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathFigure **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathFigure *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0069 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0069 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0069_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3897 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3897 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3897_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3897_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0070 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0070 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0070_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54735271-a3db-5e42-85be-4ff85432364b")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathSegment **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathSegment *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0071 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0071 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0071_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3898 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3898 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3898_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3898_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0072 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0072 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0072_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fef8133f-98e9-5ca3-a667-0d234c5d1d96")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0073 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0073 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0073_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3899 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3899 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3899_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3899_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0074 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0074 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0074_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b3a869c7-9c78-525b-943e-16a2c8979b03")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransformVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0075 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0075 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0075_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3900 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3900 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3900_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3900_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0076 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0076 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0076_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84c6ac3a-8207-5599-9583-606ac2139ddd")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeometry **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGeometry *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::IGeometry **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGeometry **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0077 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0077 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0077_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3901 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3901 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3901_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3901_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0078 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0078 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0078_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33422da4-24f3-5b52-9e8d-11dd71f08bb1")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGradientStop **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGradientStop *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGradientStop *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGradientStop *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IGradientStop *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::IGradientStop **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CGradientStop **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStopVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0079 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0079 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0079_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3902 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3902 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3902_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3902_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0080 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0080 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0080_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("de29d405-26dd-5e72-8bcb-495199d4e5b5")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathFigure **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathFigure *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathFigure *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathFigure *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathFigure *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::IPathFigure **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathFigure **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0081 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0081 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0081_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3903 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3903 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3903_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3903_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0082 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0082 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0082_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11fdd506-b21d-564d-b6a8-ff991057b8f3")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IPathSegment **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathSegment *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathSegment *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathSegment *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPathSegment *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::IPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::IPathSegment **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CPathSegment **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0083 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0083 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0083_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3904 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3904 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3904_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3904_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0084 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0084 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0084_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b2d8ddb4-d2b8-5930-942d-26118756bd46")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::ITimelineMarker **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTimelineMarker **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0085 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTimelineMarker */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0085 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0085_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3905 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3905 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3905_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3905_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0086 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0086_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("62d7bbc1-71f5-5611-a984-e571c2de7baa")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::ITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::ITransform **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CTransform **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CTransformVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0087 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CTransform */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0087_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3906 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_3906 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3906_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_3906_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0088 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0088_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b402b0ca-beca-5537-8192-8f30f7cb5d0e")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMediaElement *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IPartialMediaFailureDetectedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0089 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CMediaElement_Windows__CUI__CXaml__CMedia__CPartialMediaFailureDetectedEventArgs */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaElementState
    {
        MediaElementState_Closed	= 0,
        MediaElementState_Opening	= 1,
        MediaElementState_Buffering	= 2,
        MediaElementState_Playing	= 3,
        MediaElementState_Paused	= 4,
        MediaElementState_Stopped	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioCategory
    {
        AudioCategory_Other	= 0,
        AudioCategory_ForegroundOnlyMedia	= 1,
        AudioCategory_BackgroundCapableMedia	= 2,
        AudioCategory_Communications	= 3,
        AudioCategory_Alerts	= 4,
        AudioCategory_SoundEffects	= 5,
        AudioCategory_GameEffects	= 6,
        AudioCategory_GameMedia	= 7,
        AudioCategory_GameChat	= 8,
        AudioCategory_Speech	= 9,
        AudioCategory_Movie	= 10,
        AudioCategory_Media	= 11
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAudioDeviceType
    {
        AudioDeviceType_Console	= 0,
        AudioDeviceType_Multimedia	= 1,
        AudioDeviceType_Communications	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CBrushMappingMode
    {
        BrushMappingMode_Absolute	= 0,
        BrushMappingMode_RelativeToBoundingBox	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CColorInterpolationMode
    {
        ColorInterpolationMode_ScRgbLinearInterpolation	= 0,
        ColorInterpolationMode_SRgbLinearInterpolation	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode
    {
        ElementCompositeMode_Inherit	= 0,
        ElementCompositeMode_SourceOver	= 1,
        ElementCompositeMode_MinBlend	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule
    {
        FillRule_EvenOdd	= 0,
        FillRule_Nonzero	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CGradientSpreadMethod
    {
        GradientSpreadMethod_Pad	= 0,
        GradientSpreadMethod_Reflect	= 1,
        GradientSpreadMethod_Repeat	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CMediaCanPlayResponse
    {
        MediaCanPlayResponse_NotSupported	= 0,
        MediaCanPlayResponse_Maybe	= 1,
        MediaCanPlayResponse_Probably	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineCap
    {
        PenLineCap_Flat	= 0,
        PenLineCap_Square	= 1,
        PenLineCap_Round	= 2,
        PenLineCap_Triangle	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CPenLineJoin
    {
        PenLineJoin_Miter	= 0,
        PenLineJoin_Bevel	= 1,
        PenLineJoin_Round	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoPackingMode
    {
        Stereo3DVideoPackingMode_None	= 0,
        Stereo3DVideoPackingMode_SideBySide	= 1,
        Stereo3DVideoPackingMode_TopBottom	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStereo3DVideoRenderMode
    {
        Stereo3DVideoRenderMode_Mono	= 0,
        Stereo3DVideoRenderMode_Stereo	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch
    {
        Stretch_None	= 0,
        Stretch_Fill	= 1,
        Stretch_Uniform	= 2,
        Stretch_UniformToFill	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CStyleSimulations
    {
        StyleSimulations_None	= 0,
        StyleSimulations_BoldSimulation	= 1,
        StyleSimulations_ItalicSimulation	= 2,
        StyleSimulations_BoldItalicSimulation	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CSweepDirection
    {
        SweepDirection_Counterclockwise	= 0,
        SweepDirection_Clockwise	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentX
    {
        AlignmentX_Left	= 0,
        AlignmentX_Center	= 1,
        AlignmentX_Right	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentY
    {
        AlignmentY_Top	= 0,
        AlignmentY_Center	= 1,
        AlignmentY_Bottom	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix
    {
    DOUBLE M11;
    DOUBLE M12;
    DOUBLE M21;
    DOUBLE M22;
    DOUBLE OffsetX;
    DOUBLE OffsetY;
    } ;
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0089 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum MediaElementState
                        {
                            MediaElementState_Closed	= 0,
                            MediaElementState_Opening	= 1,
                            MediaElementState_Buffering	= 2,
                            MediaElementState_Playing	= 3,
                            MediaElementState_Paused	= 4,
                            MediaElementState_Stopped	= 5
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum AudioCategory
                        {
                            AudioCategory_Other	= 0,
                            AudioCategory_ForegroundOnlyMedia	= 1,
                            AudioCategory_BackgroundCapableMedia	= 2,
                            AudioCategory_Communications	= 3,
                            AudioCategory_Alerts	= 4,
                            AudioCategory_SoundEffects	= 5,
                            AudioCategory_GameEffects	= 6,
                            AudioCategory_GameMedia	= 7,
                            AudioCategory_GameChat	= 8,
                            AudioCategory_Speech	= 9,
                            AudioCategory_Movie	= 10,
                            AudioCategory_Media	= 11
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum AudioDeviceType
                        {
                            AudioDeviceType_Console	= 0,
                            AudioDeviceType_Multimedia	= 1,
                            AudioDeviceType_Communications	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum BrushMappingMode
                        {
                            BrushMappingMode_Absolute	= 0,
                            BrushMappingMode_RelativeToBoundingBox	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum ColorInterpolationMode
                        {
                            ColorInterpolationMode_ScRgbLinearInterpolation	= 0,
                            ColorInterpolationMode_SRgbLinearInterpolation	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum ElementCompositeMode
                        {
                            ElementCompositeMode_Inherit	= 0,
                            ElementCompositeMode_SourceOver	= 1,
                            ElementCompositeMode_MinBlend	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum FillRule
                        {
                            FillRule_EvenOdd	= 0,
                            FillRule_Nonzero	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum GradientSpreadMethod
                        {
                            GradientSpreadMethod_Pad	= 0,
                            GradientSpreadMethod_Reflect	= 1,
                            GradientSpreadMethod_Repeat	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum MediaCanPlayResponse
                        {
                            MediaCanPlayResponse_NotSupported	= 0,
                            MediaCanPlayResponse_Maybe	= 1,
                            MediaCanPlayResponse_Probably	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum PenLineCap
                        {
                            PenLineCap_Flat	= 0,
                            PenLineCap_Square	= 1,
                            PenLineCap_Round	= 2,
                            PenLineCap_Triangle	= 3
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum PenLineJoin
                        {
                            PenLineJoin_Miter	= 0,
                            PenLineJoin_Bevel	= 1,
                            PenLineJoin_Round	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum Stereo3DVideoPackingMode
                        {
                            Stereo3DVideoPackingMode_None	= 0,
                            Stereo3DVideoPackingMode_SideBySide	= 1,
                            Stereo3DVideoPackingMode_TopBottom	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum Stereo3DVideoRenderMode
                        {
                            Stereo3DVideoRenderMode_Mono	= 0,
                            Stereo3DVideoRenderMode_Stereo	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum Stretch
                        {
                            Stretch_None	= 0,
                            Stretch_Fill	= 1,
                            Stretch_Uniform	= 2,
                            Stretch_UniformToFill	= 3
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum StyleSimulations
                        {
                            StyleSimulations_None	= 0,
                            StyleSimulations_BoldSimulation	= 1,
                            StyleSimulations_ItalicSimulation	= 2,
                            StyleSimulations_BoldItalicSimulation	= 3
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum SweepDirection
                        {
                            SweepDirection_Counterclockwise	= 0,
                            SweepDirection_Clockwise	= 1
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum AlignmentX
                        {
                            AlignmentX_Left	= 0,
                            AlignmentX_Center	= 1,
                            AlignmentX_Right	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    /* [v1_enum] */ 
                    enum AlignmentY
                        {
                            AlignmentY_Top	= 0,
                            AlignmentY_Center	= 1,
                            AlignmentY_Bottom	= 2
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    struct Matrix
                        {
                        DOUBLE M11;
                        DOUBLE M12;
                        DOUBLE M21;
                        DOUBLE M22;
                        DOUBLE OffsetX;
                        DOUBLE OffsetY;
                        } ;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0089_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRateChangedRoutedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("08E9A257-AE05-489B-8839-28C6225D2349")
                        IRateChangedRoutedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IRateChangedRoutedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRateChangedRoutedEventHandler = __uuidof(IRateChangedRoutedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITimelineMarkerRoutedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("72E2FA9C-6DEA-4CBE-A159-06CE95FBECED")
                        ITimelineMarkerRoutedEventHandler : public IUnknown
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Invoke( 
                                /* [in] */ __RPC__in_opt IInspectable *sender,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarkerRoutedEventArgs *e) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimelineMarkerRoutedEventHandler = __uuidof(ITimelineMarkerRoutedEventHandler);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0091 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IVisualTreeHelper[] = L"Windows.UI.Xaml.Media.IVisualTreeHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0091_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IVisualTreeHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("24B935E3-52C7-4141-8BAC-A73D06130569")
                        IVisualTreeHelper : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IVisualTreeHelper = __uuidof(IVisualTreeHelper);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0092 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IVisualTreeHelperStatics[] = L"Windows.UI.Xaml.Media.IVisualTreeHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0092_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IVisualTreeHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("E75758C4-D25D-4B1D-971F-596F17F12BAA")
                        IVisualTreeHelperStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE FindElementsInHostCoordinatesPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point intersectingPoint,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *subtree,
                                /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE FindElementsInHostCoordinatesRect( 
                                /* [in] */ ABI::Windows::Foundation::Rect intersectingRect,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *subtree,
                                /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE FindAllElementsInHostCoordinatesPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point intersectingPoint,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *subtree,
                                /* [in] */ boolean includeAllElements,
                                /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE FindAllElementsInHostCoordinatesRect( 
                                /* [in] */ ABI::Windows::Foundation::Rect intersectingRect,
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *subtree,
                                /* [in] */ boolean includeAllElements,
                                /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetChild( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *reference,
                                /* [in] */ INT32 childIndex,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **child) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetChildrenCount( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *reference,
                                /* [out][retval] */ __RPC__out INT32 *count) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetParent( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *reference,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **parent) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE DisconnectChildrenRecursive( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVisualTreeHelperStatics = __uuidof(IVisualTreeHelperStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FindElementsInHostCoordinatesPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *subtree,
            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements);
        
        HRESULT ( STDMETHODCALLTYPE *FindElementsInHostCoordinatesRect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect intersectingRect,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *subtree,
            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements);
        
        HRESULT ( STDMETHODCALLTYPE *FindAllElementsInHostCoordinatesPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint intersectingPoint,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *subtree,
            /* [in] */ boolean includeAllElements,
            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements);
        
        HRESULT ( STDMETHODCALLTYPE *FindAllElementsInHostCoordinatesRect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect intersectingRect,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *subtree,
            /* [in] */ boolean includeAllElements,
            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1_Windows__CUI__CXaml__CUIElement **elements);
        
        HRESULT ( STDMETHODCALLTYPE *GetChild )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *reference,
            /* [in] */ INT32 childIndex,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **child);
        
        HRESULT ( STDMETHODCALLTYPE *GetChildrenCount )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *reference,
            /* [out][retval] */ __RPC__out INT32 *count);
        
        HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *reference,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **parent);
        
        HRESULT ( STDMETHODCALLTYPE *DisconnectChildrenRecursive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindElementsInHostCoordinatesPoint(This,intersectingPoint,subtree,elements)	\
    ( (This)->lpVtbl -> FindElementsInHostCoordinatesPoint(This,intersectingPoint,subtree,elements) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindElementsInHostCoordinatesRect(This,intersectingRect,subtree,elements)	\
    ( (This)->lpVtbl -> FindElementsInHostCoordinatesRect(This,intersectingRect,subtree,elements) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindAllElementsInHostCoordinatesPoint(This,intersectingPoint,subtree,includeAllElements,elements)	\
    ( (This)->lpVtbl -> FindAllElementsInHostCoordinatesPoint(This,intersectingPoint,subtree,includeAllElements,elements) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_FindAllElementsInHostCoordinatesRect(This,intersectingRect,subtree,includeAllElements,elements)	\
    ( (This)->lpVtbl -> FindAllElementsInHostCoordinatesRect(This,intersectingRect,subtree,includeAllElements,elements) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetChild(This,reference,childIndex,child)	\
    ( (This)->lpVtbl -> GetChild(This,reference,childIndex,child) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetChildrenCount(This,reference,count)	\
    ( (This)->lpVtbl -> GetChildrenCount(This,reference,count) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_GetParent(This,reference,parent)	\
    ( (This)->lpVtbl -> GetParent(This,reference,parent) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_DisconnectChildrenRecursive(This,element)	\
    ( (This)->lpVtbl -> DisconnectChildrenRecursive(This,element) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0093 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IVisualTreeHelperStatics2[] = L"Windows.UI.Xaml.Media.IVisualTreeHelperStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0093_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IVisualTreeHelperStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("07BCD176-869F-44A7-8797-2103A4C3E47A")
                        IVisualTreeHelperStatics2 : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE GetOpenPopups( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindow *window,
                                /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup **popups) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IVisualTreeHelperStatics2 = __uuidof(IVisualTreeHelperStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetOpenPopups )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindow *window,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CControls__CPrimitives__CPopup **popups);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_GetOpenPopups(This,window,popups)	\
    ( (This)->lpVtbl -> GetOpenPopups(This,window,popups) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIVisualTreeHelperStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0094 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPartialMediaFailureDetectedEventArgs[] = L"Windows.UI.Xaml.Media.IPartialMediaFailureDetectedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0094_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPartialMediaFailureDetectedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("02B65A91-E5A1-442B-88D3-2DC127BFC59B")
                        IPartialMediaFailureDetectedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StreamKind( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Media::Playback::FailedMediaStreamKind *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPartialMediaFailureDetectedEventArgs = __uuidof(IPartialMediaFailureDetectedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StreamKind )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CMedia_CPlayback_CFailedMediaStreamKind *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_get_StreamKind(This,value)	\
    ( (This)->lpVtbl -> get_StreamKind(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0095 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPartialMediaFailureDetectedEventArgs2[] = L"Windows.UI.Xaml.Media.IPartialMediaFailureDetectedEventArgs2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0095_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPartialMediaFailureDetectedEventArgs2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("73074875-890D-416B-B9AE-E84DFD9C4B1B")
                        IPartialMediaFailureDetectedEventArgs2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedError( 
                                /* [out][retval] */ __RPC__out HRESULT *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPartialMediaFailureDetectedEventArgs2 = __uuidof(IPartialMediaFailureDetectedEventArgs2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedError )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2 * This,
            /* [out][retval] */ __RPC__out HRESULT *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_get_ExtendedError(This,value)	\
    ( (This)->lpVtbl -> get_ExtendedError(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPartialMediaFailureDetectedEventArgs2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0096 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrixHelper[] = L"Windows.UI.Xaml.Media.IMatrixHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0096_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrixHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("F3CF4882-06B5-48C8-9EB2-1763E9364038")
                        IMatrixHelper : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IMatrixHelper = __uuidof(IMatrixHelper);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0097 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrixHelperStatics[] = L"Windows.UI.Xaml.Media.IMatrixHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0097_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrixHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C18606A6-39F4-4B8A-8403-28E5E5F033B4")
                        IMatrixHelperStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Identity( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Matrix *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE FromElements( 
                                /* [in] */ DOUBLE m11,
                                /* [in] */ DOUBLE m12,
                                /* [in] */ DOUBLE m21,
                                /* [in] */ DOUBLE m22,
                                /* [in] */ DOUBLE offsetX,
                                /* [in] */ DOUBLE offsetY,
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Matrix *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE GetIsIdentity( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Matrix target,
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Transform( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Matrix target,
                                /* [in] */ ABI::Windows::Foundation::Point point,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMatrixHelperStatics = __uuidof(IMatrixHelperStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Identity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix *value);
        
        HRESULT ( STDMETHODCALLTYPE *FromElements )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [in] */ DOUBLE m11,
            /* [in] */ DOUBLE m12,
            /* [in] */ DOUBLE m21,
            /* [in] */ DOUBLE m22,
            /* [in] */ DOUBLE offsetX,
            /* [in] */ DOUBLE offsetY,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsIdentity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *Transform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_get_Identity(This,value)	\
    ( (This)->lpVtbl -> get_Identity(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_FromElements(This,m11,m12,m21,m22,offsetX,offsetY,returnValue)	\
    ( (This)->lpVtbl -> FromElements(This,m11,m12,m21,m22,offsetX,offsetY,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_GetIsIdentity(This,target,value)	\
    ( (This)->lpVtbl -> GetIsIdentity(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_Transform(This,target,point,returnValue)	\
    ( (This)->lpVtbl -> Transform(This,target,point,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0098 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICompositionTarget[] = L"Windows.UI.Xaml.Media.ICompositionTarget";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0098_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICompositionTarget */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("26CFBFF0-713C-4BEC-8803-E101F7B14ED3")
                        ICompositionTarget : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ICompositionTarget = __uuidof(ICompositionTarget);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTarget_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0099 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICompositionTargetStatics[] = L"Windows.UI.Xaml.Media.ICompositionTargetStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0099_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICompositionTargetStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("2B1AF03D-1ED2-4B59-BD00-7594EE92832B")
                        ICompositionTargetStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE add_Rendering( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_Rendering( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_SurfaceContentsLost( 
                                /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_SurfaceContentsLost( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICompositionTargetStatics = __uuidof(ICompositionTargetStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Rendering )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Rendering )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SurfaceContentsLost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SurfaceContentsLost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_add_Rendering(This,value,token)	\
    ( (This)->lpVtbl -> add_Rendering(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_remove_Rendering(This,token)	\
    ( (This)->lpVtbl -> remove_Rendering(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_add_SurfaceContentsLost(This,value,token)	\
    ( (This)->lpVtbl -> add_SurfaceContentsLost(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_remove_SurfaceContentsLost(This,token)	\
    ( (This)->lpVtbl -> remove_SurfaceContentsLost(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositionTargetStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0100 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IFontFamily[] = L"Windows.UI.Xaml.Media.IFontFamily";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0100_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IFontFamily */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("92467E64-D66A-4CF4-9322-3D23B3C0C361")
                        IFontFamily : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontFamily = __uuidof(IFontFamily);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0101 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IFontFamilyFactory[] = L"Windows.UI.Xaml.Media.IFontFamilyFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0101_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IFontFamilyFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("D5603377-3DAE-4DCD-AF09-F9498E9EC659")
                        IFontFamilyFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithName( 
                                /* [in] */ __RPC__in HSTRING familyName,
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontFamilyFactory = __uuidof(IFontFamilyFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory * This,
            /* [in] */ __RPC__in HSTRING familyName,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_CreateInstanceWithName(This,familyName,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithName(This,familyName,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0102 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IFontFamilyStatics2[] = L"Windows.UI.Xaml.Media.IFontFamilyStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0102_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IFontFamilyStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("52AD7AF9-37E6-4297-A238-97FB6A408D9E")
                        IFontFamilyStatics2 : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_XamlAutoFontFamily( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IFontFamily **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IFontFamilyStatics2 = __uuidof(IFontFamilyStatics2);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_XamlAutoFontFamily )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamily **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_get_XamlAutoFontFamily(This,value)	\
    ( (This)->lpVtbl -> get_XamlAutoFontFamily(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIFontFamilyStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0103 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRenderingEventArgs[] = L"Windows.UI.Xaml.Media.IRenderingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0103_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRenderingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("5BF7D30D-9748-4AED-8380-D7890EB776A0")
                        IRenderingEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderingTime( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRenderingEventArgs = __uuidof(IRenderingEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderingTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_get_RenderingTime(This,value)	\
    ( (This)->lpVtbl -> get_RenderingTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRenderingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0104 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBrush[] = L"Windows.UI.Xaml.Media.IBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0104_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("8806A321-1E06-422C-A1CC-01696559E021")
                        IBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Opacity( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Opacity( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transform( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Transform( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RelativeTransform( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RelativeTransform( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBrush = __uuidof(IBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Opacity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Opacity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Transform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelativeTransform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RelativeTransform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_get_Opacity(This,value)	\
    ( (This)->lpVtbl -> get_Opacity(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_put_Opacity(This,value)	\
    ( (This)->lpVtbl -> put_Opacity(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_get_Transform(This,value)	\
    ( (This)->lpVtbl -> get_Transform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_put_Transform(This,value)	\
    ( (This)->lpVtbl -> put_Transform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_get_RelativeTransform(This,value)	\
    ( (This)->lpVtbl -> get_RelativeTransform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_put_RelativeTransform(This,value)	\
    ( (This)->lpVtbl -> put_RelativeTransform(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0105 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBrushStatics[] = L"Windows.UI.Xaml.Media.IBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0105_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("E70C3102-0225-47F5-B22E-0467619F6A22")
                        IBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpacityProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TransformProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RelativeTransformProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBrushStatics = __uuidof(IBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpacityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransformProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RelativeTransformProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_get_OpacityProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpacityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_get_TransformProperty(This,value)	\
    ( (This)->lpVtbl -> get_TransformProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_get_RelativeTransformProperty(This,value)	\
    ( (This)->lpVtbl -> get_RelativeTransformProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0106 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBrushFactory[] = L"Windows.UI.Xaml.Media.IBrushFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0106_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBrushFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("399658A2-14FB-4B8F-83E6-6E3DAB12069B")
                        IBrushFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IBrush **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBrushFactory = __uuidof(IBrushFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrush **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBrushFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0107 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICacheMode[] = L"Windows.UI.Xaml.Media.ICacheMode";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0107_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICacheMode */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("98DC8B11-C6F9-4DAB-B838-5FD5EC8C7350")
                        ICacheMode : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ICacheMode = __uuidof(ICacheMode);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0108 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICacheModeFactory[] = L"Windows.UI.Xaml.Media.ICacheModeFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0108_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICacheModeFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("EB1F8C5B-0ABB-4E70-B8A8-620D0D953AB2")
                        ICacheModeFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ICacheMode **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICacheModeFactory = __uuidof(ICacheModeFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICacheModeFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0109 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeneralTransform[] = L"Windows.UI.Xaml.Media.IGeneralTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0109_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeneralTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("A06798B7-A2EC-415F-ADE2-EADE9333F2C7")
                        IGeneralTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Inverse( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeneralTransform **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TransformPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point point,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryTransform( 
                                /* [in] */ ABI::Windows::Foundation::Point inPoint,
                                /* [out] */ __RPC__out ABI::Windows::Foundation::Point *outPoint,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TransformBounds( 
                                /* [in] */ ABI::Windows::Foundation::Rect rect,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeneralTransform = __uuidof(IGeneralTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Inverse )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform **value);
        
        HRESULT ( STDMETHODCALLTYPE *TransformPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryTransform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint inPoint,
            /* [out] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *outPoint,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *TransformBounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect rect,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_get_Inverse(This,value)	\
    ( (This)->lpVtbl -> get_Inverse(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_TransformPoint(This,point,returnValue)	\
    ( (This)->lpVtbl -> TransformPoint(This,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_TryTransform(This,inPoint,outPoint,returnValue)	\
    ( (This)->lpVtbl -> TryTransform(This,inPoint,outPoint,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_TransformBounds(This,rect,returnValue)	\
    ( (This)->lpVtbl -> TransformBounds(This,rect,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0110 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeneralTransformOverrides[] = L"Windows.UI.Xaml.Media.IGeneralTransformOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0110_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeneralTransformOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("4F121083-24CF-4524-90AD-8A42B1C12783")
                        IGeneralTransformOverrides : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_InverseCore( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeneralTransform **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryTransformCore( 
                                /* [in] */ ABI::Windows::Foundation::Point inPoint,
                                /* [out] */ __RPC__out ABI::Windows::Foundation::Point *outPoint,
                                /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TransformBoundsCore( 
                                /* [in] */ ABI::Windows::Foundation::Rect rect,
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeneralTransformOverrides = __uuidof(IGeneralTransformOverrides);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_InverseCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform **value);
        
        HRESULT ( STDMETHODCALLTYPE *TryTransformCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint inPoint,
            /* [out] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *outPoint,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *TransformBoundsCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect rect,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_get_InverseCore(This,value)	\
    ( (This)->lpVtbl -> get_InverseCore(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_TryTransformCore(This,inPoint,outPoint,returnValue)	\
    ( (This)->lpVtbl -> TryTransformCore(This,inPoint,outPoint,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_TransformBoundsCore(This,rect,returnValue)	\
    ( (This)->lpVtbl -> TransformBoundsCore(This,rect,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0111 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeneralTransformFactory[] = L"Windows.UI.Xaml.Media.IGeneralTransformFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0111_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeneralTransformFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("7A25C930-29C4-4E31-B6F9-DEDD52E4DF1B")
                        IGeneralTransformFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeneralTransform **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeneralTransformFactory = __uuidof(IGeneralTransformFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransformFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0112 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeometry[] = L"Windows.UI.Xaml.Media.IGeometry";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0112_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeometry */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("FA123889-0ACD-417B-B62D-5CA1BF4DFC0E")
                        IGeometry : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transform( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Transform( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Bounds( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeometry = __uuidof(IGeometry);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Transform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_get_Transform(This,value)	\
    ( (This)->lpVtbl -> get_Transform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_put_Transform(This,value)	\
    ( (This)->lpVtbl -> put_Transform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_get_Bounds(This,value)	\
    ( (This)->lpVtbl -> get_Bounds(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0113 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeometryStatics[] = L"Windows.UI.Xaml.Media.IGeometryStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0113_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeometryStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("7A70AA8C-0B06-465F-B637-9A47E5A70111")
                        IGeometryStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Empty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeometry **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StandardFlatteningTolerance( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TransformProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeometryStatics = __uuidof(IGeometryStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Empty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometry **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StandardFlatteningTolerance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransformProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_get_Empty(This,value)	\
    ( (This)->lpVtbl -> get_Empty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_get_StandardFlatteningTolerance(This,value)	\
    ( (This)->lpVtbl -> get_StandardFlatteningTolerance(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_get_TransformProperty(This,value)	\
    ( (This)->lpVtbl -> get_TransformProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0114 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeometryFactory[] = L"Windows.UI.Xaml.Media.IGeometryFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0114_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeometryFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("F65DAF23-D5FD-42F9-B32A-929C5A4B54E1")
                        IGeometryFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IGeometryFactory = __uuidof(IGeometryFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0115 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGradientStop[] = L"Windows.UI.Xaml.Media.IGradientStop";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0115_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGradientStop */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("665F44FE-2E59-4C4A-AB53-076A100CCD81")
                        IGradientStop : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
                                /* [in] */ ABI::Windows::UI::Color value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Offset( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Offset( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGradientStop = __uuidof(IGradientStop);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Offset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Offset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_get_Color(This,value)	\
    ( (This)->lpVtbl -> get_Color(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_put_Color(This,value)	\
    ( (This)->lpVtbl -> put_Color(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_get_Offset(This,value)	\
    ( (This)->lpVtbl -> get_Offset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_put_Offset(This,value)	\
    ( (This)->lpVtbl -> put_Offset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStop_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0116 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGradientStopStatics[] = L"Windows.UI.Xaml.Media.IGradientStopStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0116_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGradientStopStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("602A6D75-6193-4FE5-8E82-C7C6F6FEBAFD")
                        IGradientStopStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffsetProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGradientStopStatics = __uuidof(IGradientStopStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_get_ColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_get_OffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_OffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientStopStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0117 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IImageSource[] = L"Windows.UI.Xaml.Media.IImageSource";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0117_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IImageSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("737EF309-EA41-4D96-A71C-98E98EFCAB07")
                        IImageSource : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IImageSource = __uuidof(IImageSource);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0118 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IImageSourceFactory[] = L"Windows.UI.Xaml.Media.IImageSourceFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0118_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IImageSourceFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("297EC001-2540-4E5A-AB66-88035DD3DDB5")
                        IImageSourceFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IImageSourceFactory = __uuidof(IImageSourceFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSourceFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0119 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathFigure[] = L"Windows.UI.Xaml.Media.IPathFigure";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0119_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathFigure */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("5D955C8C-5FA9-4DDA-A3CC-10FCDCAA20D7")
                        IPathFigure : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Segments( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Segments( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsClosed( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsClosed( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsFilled( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsFilled( 
                                /* [in] */ boolean value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathFigure = __uuidof(IPathFigure);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Segments )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Segments )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathSegment *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsClosed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFilled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsFilled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_get_Segments(This,value)	\
    ( (This)->lpVtbl -> get_Segments(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_put_Segments(This,value)	\
    ( (This)->lpVtbl -> put_Segments(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_get_StartPoint(This,value)	\
    ( (This)->lpVtbl -> get_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_put_StartPoint(This,value)	\
    ( (This)->lpVtbl -> put_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_get_IsClosed(This,value)	\
    ( (This)->lpVtbl -> get_IsClosed(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_put_IsClosed(This,value)	\
    ( (This)->lpVtbl -> put_IsClosed(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_get_IsFilled(This,value)	\
    ( (This)->lpVtbl -> get_IsFilled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_put_IsFilled(This,value)	\
    ( (This)->lpVtbl -> put_IsFilled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigure_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0120 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathFigureStatics[] = L"Windows.UI.Xaml.Media.IPathFigureStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0120_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathFigureStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("B60591D9-2395-4317-9552-3A58526F8C7B")
                        IPathFigureStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SegmentsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsClosedProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsFilledProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathFigureStatics = __uuidof(IPathFigureStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SegmentsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsClosedProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsFilledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_get_SegmentsProperty(This,value)	\
    ( (This)->lpVtbl -> get_SegmentsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_get_StartPointProperty(This,value)	\
    ( (This)->lpVtbl -> get_StartPointProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_get_IsClosedProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsClosedProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_get_IsFilledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsFilledProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathFigureStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0121 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathSegment[] = L"Windows.UI.Xaml.Media.IPathSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0121_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("FCFA71CF-9CE3-474F-8157-10B6435A616B")
                        IPathSegment : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IPathSegment = __uuidof(IPathSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0122 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathSegmentFactory[] = L"Windows.UI.Xaml.Media.IPathSegmentFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0122_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathSegmentFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("2A1C0AAE-ECCD-4464-A148-6FFDB3AA281F")
                        IPathSegmentFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IPathSegmentFactory = __uuidof(IPathSegmentFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathSegmentFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0123 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IProjection[] = L"Windows.UI.Xaml.Media.IProjection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0123_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IProjection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("B3443557-7F39-4D04-A89C-844338CAC897")
                        IProjection : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IProjection = __uuidof(IProjection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0124 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IProjectionFactory[] = L"Windows.UI.Xaml.Media.IProjectionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0124_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IProjectionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C4F29CAB-60AD-4F24-BD27-9D69C3127C9A")
                        IProjectionFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IProjection **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IProjectionFactory = __uuidof(IProjectionFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIProjectionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0125 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRateChangedRoutedEventArgs[] = L"Windows.UI.Xaml.Media.IRateChangedRoutedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0125_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRateChangedRoutedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("9016AA6F-3CA8-4C80-8E2F-8851A68F131F")
                        IRateChangedRoutedEventArgs : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IRateChangedRoutedEventArgs = __uuidof(IRateChangedRoutedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRateChangedRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0126 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITimelineMarker[] = L"Windows.UI.Xaml.Media.ITimelineMarker";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0126_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITimelineMarker */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("A68EF02D-45BA-4E50-8CAD-AAEA3A227AF5")
                        ITimelineMarker : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Time( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Time( 
                                /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Text( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Text( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimelineMarker = __uuidof(ITimelineMarker);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Time )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Time )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Text )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_get_Time(This,value)	\
    ( (This)->lpVtbl -> get_Time(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_put_Time(This,value)	\
    ( (This)->lpVtbl -> put_Time(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_get_Type(This,value)	\
    ( (This)->lpVtbl -> get_Type(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_put_Type(This,value)	\
    ( (This)->lpVtbl -> put_Type(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_get_Text(This,value)	\
    ( (This)->lpVtbl -> get_Text(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_put_Text(This,value)	\
    ( (This)->lpVtbl -> put_Text(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0127 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITimelineMarkerStatics[] = L"Windows.UI.Xaml.Media.ITimelineMarkerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0127_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITimelineMarkerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C4AEF0C6-16A3-484B-87F5-6528B8F04A47")
                        ITimelineMarkerStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TimeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TypeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TextProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimelineMarkerStatics = __uuidof(ITimelineMarkerStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_get_TimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_TimeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_get_TypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_TypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_get_TextProperty(This,value)	\
    ( (This)->lpVtbl -> get_TextProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0128 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITimelineMarkerRoutedEventArgs[] = L"Windows.UI.Xaml.Media.ITimelineMarkerRoutedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0128_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITimelineMarkerRoutedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("7C3B3EF3-2C88-4D9C-99B6-46CDBD48D4C1")
                        ITimelineMarkerRoutedEventArgs : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Marker( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Marker( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITimelineMarker *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITimelineMarkerRoutedEventArgs = __uuidof(ITimelineMarkerRoutedEventArgs);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Marker )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Marker )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarker *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_get_Marker(This,value)	\
    ( (This)->lpVtbl -> get_Marker(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_put_Marker(This,value)	\
    ( (This)->lpVtbl -> put_Marker(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITimelineMarkerRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0129 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IArcSegment[] = L"Windows.UI.Xaml.Media.IArcSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0129_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IArcSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("07940C5F-63FB-4469-91BE-F1097C168052")
                        IArcSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Size( 
                                /* [in] */ ABI::Windows::Foundation::Size value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationAngle( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RotationAngle( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsLargeArc( 
                                /* [out][retval] */ __RPC__out boolean *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsLargeArc( 
                                /* [in] */ boolean value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SweepDirection( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::SweepDirection *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SweepDirection( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::SweepDirection value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IArcSegment = __uuidof(IArcSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Size )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLargeArc )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsLargeArc )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SweepDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CSweepDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SweepDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CSweepDirection value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_get_Point(This,value)	\
    ( (This)->lpVtbl -> get_Point(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_put_Point(This,value)	\
    ( (This)->lpVtbl -> put_Point(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_get_Size(This,value)	\
    ( (This)->lpVtbl -> get_Size(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_put_Size(This,value)	\
    ( (This)->lpVtbl -> put_Size(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_get_RotationAngle(This,value)	\
    ( (This)->lpVtbl -> get_RotationAngle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_put_RotationAngle(This,value)	\
    ( (This)->lpVtbl -> put_RotationAngle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_get_IsLargeArc(This,value)	\
    ( (This)->lpVtbl -> get_IsLargeArc(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_put_IsLargeArc(This,value)	\
    ( (This)->lpVtbl -> put_IsLargeArc(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_get_SweepDirection(This,value)	\
    ( (This)->lpVtbl -> get_SweepDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_put_SweepDirection(This,value)	\
    ( (This)->lpVtbl -> put_SweepDirection(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0130 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IArcSegmentStatics[] = L"Windows.UI.Xaml.Media.IArcSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0130_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IArcSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("82348F6E-8A69-4204-9C12-7207DF317643")
                        IArcSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SizeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationAngleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsLargeArcProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SweepDirectionProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IArcSegmentStatics = __uuidof(IArcSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SizeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationAngleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsLargeArcProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SweepDirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_get_PointProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_get_SizeProperty(This,value)	\
    ( (This)->lpVtbl -> get_SizeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_get_RotationAngleProperty(This,value)	\
    ( (This)->lpVtbl -> get_RotationAngleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_get_IsLargeArcProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsLargeArcProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_get_SweepDirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_SweepDirectionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIArcSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0131 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBezierSegment[] = L"Windows.UI.Xaml.Media.IBezierSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0131_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBezierSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("AF4BB9EE-8984-49B7-81DF-3F35994B95EB")
                        IBezierSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point1( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point1( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point2( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point2( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point3( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point3( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBezierSegment = __uuidof(IBezierSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point3 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point3 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_get_Point1(This,value)	\
    ( (This)->lpVtbl -> get_Point1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_put_Point1(This,value)	\
    ( (This)->lpVtbl -> put_Point1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_get_Point2(This,value)	\
    ( (This)->lpVtbl -> get_Point2(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_put_Point2(This,value)	\
    ( (This)->lpVtbl -> put_Point2(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_get_Point3(This,value)	\
    ( (This)->lpVtbl -> get_Point3(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_put_Point3(This,value)	\
    ( (This)->lpVtbl -> put_Point3(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0132 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBezierSegmentStatics[] = L"Windows.UI.Xaml.Media.IBezierSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0132_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBezierSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C0287BAC-1410-4530-8452-1C9D0AD1F341")
                        IBezierSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point1Property( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point2Property( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point3Property( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IBezierSegmentStatics = __uuidof(IBezierSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point1Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point2Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point3Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point1Property(This,value)	\
    ( (This)->lpVtbl -> get_Point1Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point2Property(This,value)	\
    ( (This)->lpVtbl -> get_Point2Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_get_Point3Property(This,value)	\
    ( (This)->lpVtbl -> get_Point3Property(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBezierSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0133 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IBitmapCache[] = L"Windows.UI.Xaml.Media.IBitmapCache";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0133_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IBitmapCache */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("79C2219E-44D2-4610-9735-9BEC83809ECF")
                        IBitmapCache : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_IBitmapCache = __uuidof(IBitmapCache);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCacheVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCacheVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCacheVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIBitmapCache_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0134 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IEllipseGeometry[] = L"Windows.UI.Xaml.Media.IEllipseGeometry";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0134_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IEllipseGeometry */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("D4F61BBA-4EA2-40D6-AA6C-8D38AA87651F")
                        IEllipseGeometry : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Center( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Center( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RadiusX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RadiusX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RadiusY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RadiusY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IEllipseGeometry = __uuidof(IEllipseGeometry);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Center )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Center )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RadiusX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RadiusY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_get_Center(This,value)	\
    ( (This)->lpVtbl -> get_Center(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_put_Center(This,value)	\
    ( (This)->lpVtbl -> put_Center(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_get_RadiusX(This,value)	\
    ( (This)->lpVtbl -> get_RadiusX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_put_RadiusX(This,value)	\
    ( (This)->lpVtbl -> put_RadiusX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_get_RadiusY(This,value)	\
    ( (This)->lpVtbl -> get_RadiusY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_put_RadiusY(This,value)	\
    ( (This)->lpVtbl -> put_RadiusY(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0135 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IEllipseGeometryStatics[] = L"Windows.UI.Xaml.Media.IEllipseGeometryStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0135_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IEllipseGeometryStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("1744DB47-F635-4B16-AEE6-E052A65DEFB2")
                        IEllipseGeometryStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RadiusXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RadiusYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IEllipseGeometryStatics = __uuidof(IEllipseGeometryStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RadiusYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_CenterProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_RadiusXProperty(This,value)	\
    ( (This)->lpVtbl -> get_RadiusXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_get_RadiusYProperty(This,value)	\
    ( (This)->lpVtbl -> get_RadiusYProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIEllipseGeometryStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0136 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeometryGroup[] = L"Windows.UI.Xaml.Media.IGeometryGroup";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0136_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeometryGroup */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("55225A61-8677-4C8C-8E46-EE3DC355114B")
                        IGeometryGroup : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillRule( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::FillRule *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FillRule( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::FillRule value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Children( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Children( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeometryGroup = __uuidof(IGeometryGroup);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillRule )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FillRule )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGeometry *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_get_FillRule(This,value)	\
    ( (This)->lpVtbl -> get_FillRule(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_put_FillRule(This,value)	\
    ( (This)->lpVtbl -> put_FillRule(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_get_Children(This,value)	\
    ( (This)->lpVtbl -> get_Children(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_put_Children(This,value)	\
    ( (This)->lpVtbl -> put_Children(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0137 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGeometryGroupStatics[] = L"Windows.UI.Xaml.Media.IGeometryGroupStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0137_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGeometryGroupStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("56C955F4-8496-4BB6-ABF0-617B1FE78B45")
                        IGeometryGroupStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillRuleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildrenProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGeometryGroupStatics = __uuidof(IGeometryGroupStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillRuleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildrenProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_get_FillRuleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FillRuleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_get_ChildrenProperty(This,value)	\
    ( (This)->lpVtbl -> get_ChildrenProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGeometryGroupStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0138 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGradientBrush[] = L"Windows.UI.Xaml.Media.IGradientBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0138_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGradientBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("2166E69F-935A-4191-8E3C-1C8DFDFCDC78")
                        IGradientBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SpreadMethod( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::GradientSpreadMethod *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SpreadMethod( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::GradientSpreadMethod value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MappingMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::BrushMappingMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MappingMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::BrushMappingMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColorInterpolationMode( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::ColorInterpolationMode *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ColorInterpolationMode( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::ColorInterpolationMode value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GradientStops( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GradientStops( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGradientBrush = __uuidof(IGradientBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SpreadMethod )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CGradientSpreadMethod *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SpreadMethod )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CGradientSpreadMethod value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MappingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CBrushMappingMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MappingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CBrushMappingMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorInterpolationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CColorInterpolationMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColorInterpolationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CColorInterpolationMode value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GradientStops )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GradientStops )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_get_SpreadMethod(This,value)	\
    ( (This)->lpVtbl -> get_SpreadMethod(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_put_SpreadMethod(This,value)	\
    ( (This)->lpVtbl -> put_SpreadMethod(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_get_MappingMode(This,value)	\
    ( (This)->lpVtbl -> get_MappingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_put_MappingMode(This,value)	\
    ( (This)->lpVtbl -> put_MappingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_get_ColorInterpolationMode(This,value)	\
    ( (This)->lpVtbl -> get_ColorInterpolationMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_put_ColorInterpolationMode(This,value)	\
    ( (This)->lpVtbl -> put_ColorInterpolationMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_get_GradientStops(This,value)	\
    ( (This)->lpVtbl -> get_GradientStops(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_put_GradientStops(This,value)	\
    ( (This)->lpVtbl -> put_GradientStops(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0139 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGradientBrushStatics[] = L"Windows.UI.Xaml.Media.IGradientBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0139_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGradientBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("961661F9-8BB4-4E6C-B923-B5D787E0F1A9")
                        IGradientBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SpreadMethodProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MappingModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColorInterpolationModeProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GradientStopsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGradientBrushStatics = __uuidof(IGradientBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SpreadMethodProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MappingModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorInterpolationModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GradientStopsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_get_SpreadMethodProperty(This,value)	\
    ( (This)->lpVtbl -> get_SpreadMethodProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_get_MappingModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_MappingModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_get_ColorInterpolationModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColorInterpolationModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_get_GradientStopsProperty(This,value)	\
    ( (This)->lpVtbl -> get_GradientStopsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0140 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IGradientBrushFactory[] = L"Windows.UI.Xaml.Media.IGradientBrushFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0140_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IGradientBrushFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("ED4779CA-45BD-4131-B625-BE86E07C6112")
                        IGradientBrushFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGradientBrush **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IGradientBrushFactory = __uuidof(IGradientBrushFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrush **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIGradientBrushFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0141 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILineGeometry[] = L"Windows.UI.Xaml.Media.ILineGeometry";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0141_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILineGeometry */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("30EDD4A2-8FC5-40AF-A7A2-C27FE7AA1363")
                        ILineGeometry : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILineGeometry = __uuidof(ILineGeometry);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_get_StartPoint(This,value)	\
    ( (This)->lpVtbl -> get_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_put_StartPoint(This,value)	\
    ( (This)->lpVtbl -> put_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_get_EndPoint(This,value)	\
    ( (This)->lpVtbl -> get_EndPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_put_EndPoint(This,value)	\
    ( (This)->lpVtbl -> put_EndPoint(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0142 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILineGeometryStatics[] = L"Windows.UI.Xaml.Media.ILineGeometryStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0142_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILineGeometryStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("578AE763-5562-4EE4-8703-EA4036D891E3")
                        ILineGeometryStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EndPointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILineGeometryStatics = __uuidof(ILineGeometryStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_get_StartPointProperty(This,value)	\
    ( (This)->lpVtbl -> get_StartPointProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_get_EndPointProperty(This,value)	\
    ( (This)->lpVtbl -> get_EndPointProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineGeometryStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0143 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILineSegment[] = L"Windows.UI.Xaml.Media.ILineSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0143_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILineSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("EF6A2E25-3FF0-4420-A411-7182A4CECB15")
                        ILineSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILineSegment = __uuidof(ILineSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_get_Point(This,value)	\
    ( (This)->lpVtbl -> get_Point(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_put_Point(This,value)	\
    ( (This)->lpVtbl -> put_Point(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0144 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILineSegmentStatics[] = L"Windows.UI.Xaml.Media.ILineSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0144_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILineSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("9FCAB141-04C0-4AFB-87B3-E800B969B894")
                        ILineSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILineSegmentStatics = __uuidof(ILineSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_get_PointProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILineSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0145 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrix3DProjection[] = L"Windows.UI.Xaml.Media.IMatrix3DProjection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0145_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrix3DProjection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("6F03E149-BFC9-4C01-B578-50338CEC97FC")
                        IMatrix3DProjection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProjectionMatrix( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Media3D::Matrix3D *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ProjectionMatrix( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Media3D::Matrix3D value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMatrix3DProjection = __uuidof(IMatrix3DProjection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectionMatrix )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CMatrix3D *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProjectionMatrix )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CMatrix3D value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_get_ProjectionMatrix(This,value)	\
    ( (This)->lpVtbl -> get_ProjectionMatrix(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_put_ProjectionMatrix(This,value)	\
    ( (This)->lpVtbl -> put_ProjectionMatrix(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0146 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrix3DProjectionStatics[] = L"Windows.UI.Xaml.Media.IMatrix3DProjectionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0146_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrix3DProjectionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("AE9D5895-41EC-4E37-ABAA-69F41D2F876B")
                        IMatrix3DProjectionStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProjectionMatrixProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMatrix3DProjectionStatics = __uuidof(IMatrix3DProjectionStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectionMatrixProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_get_ProjectionMatrixProperty(This,value)	\
    ( (This)->lpVtbl -> get_ProjectionMatrixProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrix3DProjectionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0147 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathGeometry[] = L"Windows.UI.Xaml.Media.IPathGeometry";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0147_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathGeometry */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("081B9DF8-BAE6-4BCB-813C-BDE0E46DC8B7")
                        IPathGeometry : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillRule( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::FillRule *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FillRule( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::FillRule value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Figures( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Figures( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathGeometry = __uuidof(IPathGeometry);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillRule )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FillRule )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CFillRule value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Figures )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Figures )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CPathFigure *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_get_FillRule(This,value)	\
    ( (This)->lpVtbl -> get_FillRule(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_put_FillRule(This,value)	\
    ( (This)->lpVtbl -> put_FillRule(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_get_Figures(This,value)	\
    ( (This)->lpVtbl -> get_Figures(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_put_Figures(This,value)	\
    ( (This)->lpVtbl -> put_Figures(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0148 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPathGeometryStatics[] = L"Windows.UI.Xaml.Media.IPathGeometryStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0148_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPathGeometryStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("D9E58BBA-2CBA-4741-8F8D-3198CF5186B9")
                        IPathGeometryStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillRuleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FiguresProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPathGeometryStatics = __uuidof(IPathGeometryStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillRuleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FiguresProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_get_FillRuleProperty(This,value)	\
    ( (This)->lpVtbl -> get_FillRuleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_get_FiguresProperty(This,value)	\
    ( (This)->lpVtbl -> get_FiguresProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPathGeometryStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0149 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPlaneProjection[] = L"Windows.UI.Xaml.Media.IPlaneProjection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0149_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPlaneProjection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("E6F82BFA-6726-469A-B259-A5188347CA8F")
                        IPlaneProjection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LocalOffsetX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LocalOffsetY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetZ( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LocalOffsetZ( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RotationX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RotationY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationZ( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RotationZ( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterOfRotationX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterOfRotationY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationZ( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterOfRotationZ( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GlobalOffsetX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GlobalOffsetY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetZ( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GlobalOffsetZ( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProjectionMatrix( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Media3D::Matrix3D *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPlaneProjection = __uuidof(IPlaneProjection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocalOffsetX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocalOffsetY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocalOffsetZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RotationX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RotationY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RotationZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterOfRotationX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterOfRotationY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterOfRotationZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GlobalOffsetX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GlobalOffsetY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GlobalOffsetZ )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectionMatrix )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CMatrix3D *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetX(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetX(This,value)	\
    ( (This)->lpVtbl -> put_LocalOffsetX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetY(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetY(This,value)	\
    ( (This)->lpVtbl -> put_LocalOffsetY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_LocalOffsetZ(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_LocalOffsetZ(This,value)	\
    ( (This)->lpVtbl -> put_LocalOffsetZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationX(This,value)	\
    ( (This)->lpVtbl -> get_RotationX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationX(This,value)	\
    ( (This)->lpVtbl -> put_RotationX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationY(This,value)	\
    ( (This)->lpVtbl -> get_RotationY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationY(This,value)	\
    ( (This)->lpVtbl -> put_RotationY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_RotationZ(This,value)	\
    ( (This)->lpVtbl -> get_RotationZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_RotationZ(This,value)	\
    ( (This)->lpVtbl -> put_RotationZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationX(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationX(This,value)	\
    ( (This)->lpVtbl -> put_CenterOfRotationX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationY(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationY(This,value)	\
    ( (This)->lpVtbl -> put_CenterOfRotationY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_CenterOfRotationZ(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_CenterOfRotationZ(This,value)	\
    ( (This)->lpVtbl -> put_CenterOfRotationZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetX(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetX(This,value)	\
    ( (This)->lpVtbl -> put_GlobalOffsetX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetY(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetY(This,value)	\
    ( (This)->lpVtbl -> put_GlobalOffsetY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_GlobalOffsetZ(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_put_GlobalOffsetZ(This,value)	\
    ( (This)->lpVtbl -> put_GlobalOffsetZ(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_get_ProjectionMatrix(This,value)	\
    ( (This)->lpVtbl -> get_ProjectionMatrix(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0150 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPlaneProjectionStatics[] = L"Windows.UI.Xaml.Media.IPlaneProjectionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0150_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPlaneProjectionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("AD919C67-3BDC-4855-8969-D1F9A3ADC27D")
                        IPlaneProjectionStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LocalOffsetZProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationZProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterOfRotationZProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GlobalOffsetZProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProjectionMatrixProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPlaneProjectionStatics = __uuidof(IPlaneProjectionStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocalOffsetZProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationZProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterOfRotationZProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalOffsetZProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectionMatrixProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetXProperty(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetYProperty(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_LocalOffsetZProperty(This,value)	\
    ( (This)->lpVtbl -> get_LocalOffsetZProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationXProperty(This,value)	\
    ( (This)->lpVtbl -> get_RotationXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationYProperty(This,value)	\
    ( (This)->lpVtbl -> get_RotationYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_RotationZProperty(This,value)	\
    ( (This)->lpVtbl -> get_RotationZProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_CenterOfRotationZProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterOfRotationZProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetXProperty(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetYProperty(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_GlobalOffsetZProperty(This,value)	\
    ( (This)->lpVtbl -> get_GlobalOffsetZProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_get_ProjectionMatrixProperty(This,value)	\
    ( (This)->lpVtbl -> get_ProjectionMatrixProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPlaneProjectionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0151 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyBezierSegment[] = L"Windows.UI.Xaml.Media.IPolyBezierSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0151_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyBezierSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("36805271-38C4-4BCF-96CD-028A6D38AF25")
                        IPolyBezierSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Points( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Points( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyBezierSegment = __uuidof(IPolyBezierSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_get_Points(This,value)	\
    ( (This)->lpVtbl -> get_Points(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_put_Points(This,value)	\
    ( (This)->lpVtbl -> put_Points(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0152 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyBezierSegmentStatics[] = L"Windows.UI.Xaml.Media.IPolyBezierSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0152_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyBezierSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("1D91A6DA-1492-4ACC-BD66-A496F3D829D6")
                        IPolyBezierSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyBezierSegmentStatics = __uuidof(IPolyBezierSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_get_PointsProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyBezierSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0153 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyLineSegment[] = L"Windows.UI.Xaml.Media.IPolyLineSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0153_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyLineSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("4B397F87-A2E6-479D-BDC8-6F4464646887")
                        IPolyLineSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Points( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Points( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyLineSegment = __uuidof(IPolyLineSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_get_Points(This,value)	\
    ( (This)->lpVtbl -> get_Points(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_put_Points(This,value)	\
    ( (This)->lpVtbl -> put_Points(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0154 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyLineSegmentStatics[] = L"Windows.UI.Xaml.Media.IPolyLineSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0154_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyLineSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("D64A2C87-33F1-4E70-A47F-B4981EF648A2")
                        IPolyLineSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyLineSegmentStatics = __uuidof(IPolyLineSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_get_PointsProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyLineSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0155 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyQuadraticBezierSegment[] = L"Windows.UI.Xaml.Media.IPolyQuadraticBezierSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0155_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyQuadraticBezierSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("DD5CED7D-E6DB-4C96-B6A1-3FCE96E987A6")
                        IPolyQuadraticBezierSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Points( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Points( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyQuadraticBezierSegment = __uuidof(IPolyQuadraticBezierSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Points )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CFoundation__CPoint *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_get_Points(This,value)	\
    ( (This)->lpVtbl -> get_Points(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_put_Points(This,value)	\
    ( (This)->lpVtbl -> put_Points(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0156 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IPolyQuadraticBezierSegmentStatics[] = L"Windows.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0156_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IPolyQuadraticBezierSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("FDF5EB75-7AD5-4C89-8169-8C9786ABD9EB")
                        IPolyQuadraticBezierSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointsProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IPolyQuadraticBezierSegmentStatics = __uuidof(IPolyQuadraticBezierSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_get_PointsProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointsProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIPolyQuadraticBezierSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0157 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IQuadraticBezierSegment[] = L"Windows.UI.Xaml.Media.IQuadraticBezierSegment";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0157_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IQuadraticBezierSegment */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("2C509A5B-BF18-455A-A078-914B5232D8AF")
                        IQuadraticBezierSegment : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point1( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point1( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point2( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Point2( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IQuadraticBezierSegment = __uuidof(IQuadraticBezierSegment);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Point2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_get_Point1(This,value)	\
    ( (This)->lpVtbl -> get_Point1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_put_Point1(This,value)	\
    ( (This)->lpVtbl -> put_Point1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_get_Point2(This,value)	\
    ( (This)->lpVtbl -> get_Point2(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_put_Point2(This,value)	\
    ( (This)->lpVtbl -> put_Point2(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegment_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0158 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IQuadraticBezierSegmentStatics[] = L"Windows.UI.Xaml.Media.IQuadraticBezierSegmentStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0158_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IQuadraticBezierSegmentStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("69C78278-3C0B-4B4F-B7A2-F003DED41BB0")
                        IQuadraticBezierSegmentStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point1Property( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Point2Property( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IQuadraticBezierSegmentStatics = __uuidof(IQuadraticBezierSegmentStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point1Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Point2Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_get_Point1Property(This,value)	\
    ( (This)->lpVtbl -> get_Point1Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_get_Point2Property(This,value)	\
    ( (This)->lpVtbl -> get_Point2Property(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIQuadraticBezierSegmentStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0159 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRectangleGeometry[] = L"Windows.UI.Xaml.Media.IRectangleGeometry";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0159_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRectangleGeometry */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("A25A1F58-C575-4196-91CF-9FDFB10445C3")
                        IRectangleGeometry : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Rect( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rect( 
                                /* [in] */ ABI::Windows::Foundation::Rect value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRectangleGeometry = __uuidof(IRectangleGeometry);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_get_Rect(This,value)	\
    ( (This)->lpVtbl -> get_Rect(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_put_Rect(This,value)	\
    ( (This)->lpVtbl -> put_Rect(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0160 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRectangleGeometryStatics[] = L"Windows.UI.Xaml.Media.IRectangleGeometryStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0160_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRectangleGeometryStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("377F8DBA-7902-48E3-83BE-7C8002A6653C")
                        IRectangleGeometryStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RectProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRectangleGeometryStatics = __uuidof(IRectangleGeometryStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RectProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_get_RectProperty(This,value)	\
    ( (This)->lpVtbl -> get_RectProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometryStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0161 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ISolidColorBrush[] = L"Windows.UI.Xaml.Media.ISolidColorBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0161_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ISolidColorBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("9D850850-66F3-48DF-9A8F-824BD5E070AF")
                        ISolidColorBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Color( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Color( 
                                /* [in] */ ABI::Windows::UI::Color value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISolidColorBrush = __uuidof(ISolidColorBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Color )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Color )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_get_Color(This,value)	\
    ( (This)->lpVtbl -> get_Color(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_put_Color(This,value)	\
    ( (This)->lpVtbl -> put_Color(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0162 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ISolidColorBrushStatics[] = L"Windows.UI.Xaml.Media.ISolidColorBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0162_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ISolidColorBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("E1A65EFA-2B23-41BA-B9BA-7094EC8E4E9F")
                        ISolidColorBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ColorProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISolidColorBrushStatics = __uuidof(ISolidColorBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_get_ColorProperty(This,value)	\
    ( (This)->lpVtbl -> get_ColorProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0163 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ISolidColorBrushFactory[] = L"Windows.UI.Xaml.Media.ISolidColorBrushFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0163_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ISolidColorBrushFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("D935CE0C-86F5-4DA6-8A27-B1619EF7F92B")
                        ISolidColorBrushFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithColor( 
                                /* [in] */ ABI::Windows::UI::Color color,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ISolidColorBrush **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISolidColorBrushFactory = __uuidof(ISolidColorBrushFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithColor )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor color,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrush **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_CreateInstanceWithColor(This,color,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithColor(This,color,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISolidColorBrushFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0164 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITransform[] = L"Windows.UI.Xaml.Media.ITransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0164_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("4DF74078-BFD6-4ED1-9682-D2FD8BF2FE6F")
                        ITransform : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ITransform = __uuidof(ITransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0165 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITransformFactory[] = L"Windows.UI.Xaml.Media.ITransformFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0165_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITransformFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("1A955A66-7CF4-4320-B416-6181192FCC6D")
                        ITransformFactory : public IInspectable
                        {
                        public:
                        };

                        extern const __declspec(selectany) IID & IID_ITransformFactory = __uuidof(ITransformFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0166 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICompositeTransform[] = L"Windows.UI.Xaml.Media.ICompositeTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0166_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICompositeTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C8A4385B-F24A-4701-A265-A78846F142B9")
                        ICompositeTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SkewX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SkewX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SkewY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SkewY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Rotation( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Rotation( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TranslateX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TranslateX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TranslateY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TranslateY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICompositeTransform = __uuidof(ICompositeTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SkewX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SkewX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SkewY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SkewY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Rotation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Rotation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TranslateX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TranslateY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_CenterX(This,value)	\
    ( (This)->lpVtbl -> get_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_CenterX(This,value)	\
    ( (This)->lpVtbl -> put_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_CenterY(This,value)	\
    ( (This)->lpVtbl -> get_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_CenterY(This,value)	\
    ( (This)->lpVtbl -> put_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_ScaleX(This,value)	\
    ( (This)->lpVtbl -> get_ScaleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_ScaleX(This,value)	\
    ( (This)->lpVtbl -> put_ScaleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_ScaleY(This,value)	\
    ( (This)->lpVtbl -> get_ScaleY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_ScaleY(This,value)	\
    ( (This)->lpVtbl -> put_ScaleY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_SkewX(This,value)	\
    ( (This)->lpVtbl -> get_SkewX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_SkewX(This,value)	\
    ( (This)->lpVtbl -> put_SkewX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_SkewY(This,value)	\
    ( (This)->lpVtbl -> get_SkewY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_SkewY(This,value)	\
    ( (This)->lpVtbl -> put_SkewY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_Rotation(This,value)	\
    ( (This)->lpVtbl -> get_Rotation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_Rotation(This,value)	\
    ( (This)->lpVtbl -> put_Rotation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_TranslateX(This,value)	\
    ( (This)->lpVtbl -> get_TranslateX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_TranslateX(This,value)	\
    ( (This)->lpVtbl -> put_TranslateX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_get_TranslateY(This,value)	\
    ( (This)->lpVtbl -> get_TranslateY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_put_TranslateY(This,value)	\
    ( (This)->lpVtbl -> put_TranslateY(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0167 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ICompositeTransformStatics[] = L"Windows.UI.Xaml.Media.ICompositeTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0167_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ICompositeTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("2F190C08-8266-496F-9653-A18BD4F836AA")
                        ICompositeTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SkewXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SkewYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RotationProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TranslateXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TranslateYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ICompositeTransformStatics = __uuidof(ICompositeTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SkewXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SkewYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RotationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TranslateYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_CenterXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_CenterYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_ScaleXProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScaleXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_ScaleYProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScaleYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_SkewXProperty(This,value)	\
    ( (This)->lpVtbl -> get_SkewXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_SkewYProperty(This,value)	\
    ( (This)->lpVtbl -> get_SkewYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_RotationProperty(This,value)	\
    ( (This)->lpVtbl -> get_RotationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_TranslateXProperty(This,value)	\
    ( (This)->lpVtbl -> get_TranslateXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_get_TranslateYProperty(This,value)	\
    ( (This)->lpVtbl -> get_TranslateYProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CICompositeTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0168 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILinearGradientBrush[] = L"Windows.UI.Xaml.Media.ILinearGradientBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0168_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILinearGradientBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("8E96D16B-BB84-4C6F-9DBF-9D6C5C6D9C39")
                        ILinearGradientBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPoint( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_StartPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EndPoint( 
                                /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EndPoint( 
                                /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILinearGradientBrush = __uuidof(ILinearGradientBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_StartPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EndPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_get_StartPoint(This,value)	\
    ( (This)->lpVtbl -> get_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_put_StartPoint(This,value)	\
    ( (This)->lpVtbl -> put_StartPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_get_EndPoint(This,value)	\
    ( (This)->lpVtbl -> get_EndPoint(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_put_EndPoint(This,value)	\
    ( (This)->lpVtbl -> put_EndPoint(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0169 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILinearGradientBrushStatics[] = L"Windows.UI.Xaml.Media.ILinearGradientBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0169_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILinearGradientBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("7AF6E504-2DC3-40E3-BE0B-B314C13CB991")
                        ILinearGradientBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StartPointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EndPointProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILinearGradientBrushStatics = __uuidof(ILinearGradientBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartPointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EndPointProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_get_StartPointProperty(This,value)	\
    ( (This)->lpVtbl -> get_StartPointProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_get_EndPointProperty(This,value)	\
    ( (This)->lpVtbl -> get_EndPointProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0170 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ILinearGradientBrushFactory[] = L"Windows.UI.Xaml.Media.ILinearGradientBrushFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0170_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ILinearGradientBrushFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("0AE0861C-1E7A-4FED-9857-EA8CAA798490")
                        ILinearGradientBrushFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithGradientStopCollectionAndAngle( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop *gradientStopCollection,
                                /* [in] */ DOUBLE angle,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ILinearGradientBrush **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ILinearGradientBrushFactory = __uuidof(ILinearGradientBrushFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithGradientStopCollectionAndAngle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CGradientStop *gradientStopCollection,
            /* [in] */ DOUBLE angle,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrush **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_CreateInstanceWithGradientStopCollectionAndAngle(This,gradientStopCollection,angle,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithGradientStopCollectionAndAngle(This,gradientStopCollection,angle,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CILinearGradientBrushFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0171 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrixTransform[] = L"Windows.UI.Xaml.Media.IMatrixTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0171_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrixTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("EDFDD551-5FED-45FC-AE62-92A4B6CF9707")
                        IMatrixTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Matrix( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Matrix *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Matrix( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Matrix value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMatrixTransform = __uuidof(IMatrixTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Matrix )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Matrix )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_get_Matrix(This,value)	\
    ( (This)->lpVtbl -> get_Matrix(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_put_Matrix(This,value)	\
    ( (This)->lpVtbl -> put_Matrix(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0172 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IMatrixTransformStatics[] = L"Windows.UI.Xaml.Media.IMatrixTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0172 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0172_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IMatrixTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("43E02E47-15B8-4758-BB97-7D52420ACC5B")
                        IMatrixTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MatrixProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IMatrixTransformStatics = __uuidof(IMatrixTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MatrixProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_get_MatrixProperty(This,value)	\
    ( (This)->lpVtbl -> get_MatrixProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIMatrixTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0173 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRotateTransform[] = L"Windows.UI.Xaml.Media.IRotateTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0173_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRotateTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("688EA9B9-1E4E-4596-86E3-428B27334FAF")
                        IRotateTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Angle( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Angle( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRotateTransform = __uuidof(IRotateTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Angle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Angle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_get_CenterX(This,value)	\
    ( (This)->lpVtbl -> get_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_put_CenterX(This,value)	\
    ( (This)->lpVtbl -> put_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_get_CenterY(This,value)	\
    ( (This)->lpVtbl -> get_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_put_CenterY(This,value)	\
    ( (This)->lpVtbl -> put_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_get_Angle(This,value)	\
    ( (This)->lpVtbl -> get_Angle(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_put_Angle(This,value)	\
    ( (This)->lpVtbl -> put_Angle(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0174 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IRotateTransformStatics[] = L"Windows.UI.Xaml.Media.IRotateTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0174_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IRotateTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("A131EB8A-51A3-41B6-B9D3-A10E429054AB")
                        IRotateTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AngleProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IRotateTransformStatics = __uuidof(IRotateTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_get_CenterXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_get_CenterYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_get_AngleProperty(This,value)	\
    ( (This)->lpVtbl -> get_AngleProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIRotateTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0175 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IScaleTransform[] = L"Windows.UI.Xaml.Media.IScaleTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0175_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IScaleTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("ED67F18D-936E-43AB-929A-E9CD0A511E52")
                        IScaleTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ScaleY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScaleTransform = __uuidof(IScaleTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ScaleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_get_CenterX(This,value)	\
    ( (This)->lpVtbl -> get_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_put_CenterX(This,value)	\
    ( (This)->lpVtbl -> put_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_get_CenterY(This,value)	\
    ( (This)->lpVtbl -> get_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_put_CenterY(This,value)	\
    ( (This)->lpVtbl -> put_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_get_ScaleX(This,value)	\
    ( (This)->lpVtbl -> get_ScaleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_put_ScaleX(This,value)	\
    ( (This)->lpVtbl -> put_ScaleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_get_ScaleY(This,value)	\
    ( (This)->lpVtbl -> get_ScaleY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_put_ScaleY(This,value)	\
    ( (This)->lpVtbl -> put_ScaleY(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0176 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IScaleTransformStatics[] = L"Windows.UI.Xaml.Media.IScaleTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0176_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IScaleTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("9D9436F4-40A7-46DD-975A-07D337CD852E")
                        IScaleTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ScaleYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IScaleTransformStatics = __uuidof(IScaleTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ScaleYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_get_CenterXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_get_CenterYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_get_ScaleXProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScaleXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_get_ScaleYProperty(This,value)	\
    ( (This)->lpVtbl -> get_ScaleYProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIScaleTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0177 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ISkewTransform[] = L"Windows.UI.Xaml.Media.ISkewTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0177_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ISkewTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("4E8A3B15-7A0F-4617-9E98-1E65BDC92115")
                        ISkewTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CenterY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AngleX( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AngleX( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AngleY( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AngleY( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISkewTransform = __uuidof(ISkewTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CenterY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AngleX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AngleY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_get_CenterX(This,value)	\
    ( (This)->lpVtbl -> get_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_put_CenterX(This,value)	\
    ( (This)->lpVtbl -> put_CenterX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_get_CenterY(This,value)	\
    ( (This)->lpVtbl -> get_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_put_CenterY(This,value)	\
    ( (This)->lpVtbl -> put_CenterY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_get_AngleX(This,value)	\
    ( (This)->lpVtbl -> get_AngleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_put_AngleX(This,value)	\
    ( (This)->lpVtbl -> put_AngleX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_get_AngleY(This,value)	\
    ( (This)->lpVtbl -> get_AngleY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_put_AngleY(This,value)	\
    ( (This)->lpVtbl -> put_AngleY(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0178 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ISkewTransformStatics[] = L"Windows.UI.Xaml.Media.ISkewTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0178_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ISkewTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("ECD11D73-5614-4B31-B6AF-BEAE10105624")
                        ISkewTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CenterYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AngleXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AngleYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ISkewTransformStatics = __uuidof(ISkewTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CenterYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AngleYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_get_CenterXProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_get_CenterYProperty(This,value)	\
    ( (This)->lpVtbl -> get_CenterYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_get_AngleXProperty(This,value)	\
    ( (This)->lpVtbl -> get_AngleXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_get_AngleYProperty(This,value)	\
    ( (This)->lpVtbl -> get_AngleYProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CISkewTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0179 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITransformGroup[] = L"Windows.UI.Xaml.Media.ITransformGroup";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0179_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITransformGroup */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("63418CCC-8D2D-4737-B951-2AFCE1DDC4C4")
                        ITransformGroup : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Children( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Children( 
                                /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Matrix *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITransformGroup = __uuidof(ITransformGroup);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CTransform *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CMatrix *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_get_Children(This,value)	\
    ( (This)->lpVtbl -> get_Children(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_put_Children(This,value)	\
    ( (This)->lpVtbl -> put_Children(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0180 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITransformGroupStatics[] = L"Windows.UI.Xaml.Media.ITransformGroupStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0180_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITransformGroupStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("25312F2A-CFAB-4B24-9713-5BDEAD1929C0")
                        ITransformGroupStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ChildrenProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITransformGroupStatics = __uuidof(ITransformGroupStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChildrenProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_get_ChildrenProperty(This,value)	\
    ( (This)->lpVtbl -> get_ChildrenProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITransformGroupStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0181 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITranslateTransform[] = L"Windows.UI.Xaml.Media.ITranslateTransform";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0181_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITranslateTransform */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C975905C-3C36-4229-817B-178F64C0E113")
                        ITranslateTransform : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_X( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_X( 
                                /* [in] */ DOUBLE value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Y( 
                                /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Y( 
                                /* [in] */ DOUBLE value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITranslateTransform = __uuidof(ITranslateTransform);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_X )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_X )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Y )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Y )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_get_X(This,value)	\
    ( (This)->lpVtbl -> get_X(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_put_X(This,value)	\
    ( (This)->lpVtbl -> put_X(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_get_Y(This,value)	\
    ( (This)->lpVtbl -> get_Y(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_put_Y(This,value)	\
    ( (This)->lpVtbl -> put_Y(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransform_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0182 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITranslateTransformStatics[] = L"Windows.UI.Xaml.Media.ITranslateTransformStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0182_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITranslateTransformStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("F419AA91-E042-4111-9C2F-D201304123DD")
                        ITranslateTransformStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_XProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_YProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITranslateTransformStatics = __uuidof(ITranslateTransformStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_XProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_YProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_get_XProperty(This,value)	\
    ( (This)->lpVtbl -> get_XProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_get_YProperty(This,value)	\
    ( (This)->lpVtbl -> get_YProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITranslateTransformStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0183 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITileBrush[] = L"Windows.UI.Xaml.Media.ITileBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0183_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITileBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("C201CF06-CD84-48A5-9607-664D7361CD61")
                        ITileBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AlignmentX( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::AlignmentX *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AlignmentX( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::AlignmentX value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AlignmentY( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::AlignmentY *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AlignmentY( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::AlignmentY value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Stretch( 
                                /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Stretch *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Stretch( 
                                /* [in] */ ABI::Windows::UI::Xaml::Media::Stretch value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITileBrush = __uuidof(ITileBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AlignmentX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentX *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AlignmentX )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentX value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AlignmentY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentY *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AlignmentY )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAlignmentY value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Stretch )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CStretch value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_get_AlignmentX(This,value)	\
    ( (This)->lpVtbl -> get_AlignmentX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_put_AlignmentX(This,value)	\
    ( (This)->lpVtbl -> put_AlignmentX(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_get_AlignmentY(This,value)	\
    ( (This)->lpVtbl -> get_AlignmentY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_put_AlignmentY(This,value)	\
    ( (This)->lpVtbl -> put_AlignmentY(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_get_Stretch(This,value)	\
    ( (This)->lpVtbl -> get_Stretch(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_put_Stretch(This,value)	\
    ( (This)->lpVtbl -> put_Stretch(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0184 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITileBrushStatics[] = L"Windows.UI.Xaml.Media.ITileBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0184_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITileBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("3497C25B-B562-4E68-8435-2399F6EB94D5")
                        ITileBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AlignmentXProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AlignmentYProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StretchProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITileBrushStatics = __uuidof(ITileBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AlignmentXProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AlignmentYProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StretchProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_get_AlignmentXProperty(This,value)	\
    ( (This)->lpVtbl -> get_AlignmentXProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_get_AlignmentYProperty(This,value)	\
    ( (This)->lpVtbl -> get_AlignmentYProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_get_StretchProperty(This,value)	\
    ( (This)->lpVtbl -> get_StretchProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0185 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_ITileBrushFactory[] = L"Windows.UI.Xaml.Media.ITileBrushFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0185_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::ITileBrushFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("AA159F7C-ED6A-4FB3-B014-B5C7E379A4DE")
                        ITileBrushFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                /* [in] */ __RPC__in_opt IInspectable *outer,
                                /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITileBrush **instance) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_ITileBrushFactory = __uuidof(ITileBrushFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrush **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CITileBrushFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0186 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IImageBrush[] = L"Windows.UI.Xaml.Media.IImageBrush";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IImageBrush */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("9FD11377-C12A-4493-BF7D-F3A8AD74B554")
                        IImageBrush : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ImageSource( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IImageSource **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ImageSource( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IImageSource *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ImageFailed( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IExceptionRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ImageFailed( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE add_ImageOpened( 
                                /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                                /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE remove_ImageOpened( 
                                /* [in] */ EventRegistrationToken token) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IImageBrush = __uuidof(IImageBrush);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ImageSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageSource *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_ImageFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ImageFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ImageOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ImageOpened )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_get_ImageSource(This,value)	\
    ( (This)->lpVtbl -> get_ImageSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_put_ImageSource(This,value)	\
    ( (This)->lpVtbl -> put_ImageSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_add_ImageFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_ImageFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_remove_ImageFailed(This,token)	\
    ( (This)->lpVtbl -> remove_ImageFailed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_add_ImageOpened(This,value,token)	\
    ( (This)->lpVtbl -> add_ImageOpened(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_remove_ImageOpened(This,token)	\
    ( (This)->lpVtbl -> remove_ImageOpened(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrush_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0187 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_IImageBrushStatics[] = L"Windows.UI.Xaml.Media.IImageBrushStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0187_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::IImageBrushStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        
                        MIDL_INTERFACE("1255B1B2-DD18-42E5-892C-EAE30C305B8C")
                        IImageBrushStatics : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ImageSourceProperty( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IImageBrushStatics = __uuidof(IImageBrushStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ImageSourceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_get_ImageSourceProperty(This,value)	\
    ( (This)->lpVtbl -> get_ImageSourceProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CIImageBrushStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0188 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_VisualTreeHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_VisualTreeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_VisualTreeHelper[] = L"Windows.UI.Xaml.Media.VisualTreeHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PartialMediaFailureDetectedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PartialMediaFailureDetectedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PartialMediaFailureDetectedEventArgs[] = L"Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_MatrixHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_MatrixHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_MatrixHelper[] = L"Windows.UI.Xaml.Media.MatrixHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_CompositionTarget_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_CompositionTarget[] = L"Windows.UI.Xaml.Media.CompositionTarget";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_DoubleCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_DoubleCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_DoubleCollection[] = L"Windows.UI.Xaml.Media.DoubleCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_FontFamily_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_FontFamily_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_FontFamily[] = L"Windows.UI.Xaml.Media.FontFamily";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GeometryCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GeometryCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GeometryCollection[] = L"Windows.UI.Xaml.Media.GeometryCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GradientStopCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GradientStopCollection[] = L"Windows.UI.Xaml.Media.GradientStopCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PathFigureCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PathFigureCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PathFigureCollection[] = L"Windows.UI.Xaml.Media.PathFigureCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PathSegmentCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PathSegmentCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PathSegmentCollection[] = L"Windows.UI.Xaml.Media.PathSegmentCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PointCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PointCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PointCollection[] = L"Windows.UI.Xaml.Media.PointCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_RenderingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_RenderingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_RenderingEventArgs[] = L"Windows.UI.Xaml.Media.RenderingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarkerCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarkerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TimelineMarkerCollection[] = L"Windows.UI.Xaml.Media.TimelineMarkerCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TransformCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TransformCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TransformCollection[] = L"Windows.UI.Xaml.Media.TransformCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Brush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Brush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Brush[] = L"Windows.UI.Xaml.Media.Brush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_CacheMode_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_CacheMode_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_CacheMode[] = L"Windows.UI.Xaml.Media.CacheMode";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GeneralTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GeneralTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GeneralTransform[] = L"Windows.UI.Xaml.Media.GeneralTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Geometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Geometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Geometry[] = L"Windows.UI.Xaml.Media.Geometry";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GradientStop_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GradientStop[] = L"Windows.UI.Xaml.Media.GradientStop";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_ImageSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_ImageSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_ImageSource[] = L"Windows.UI.Xaml.Media.ImageSource";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PathFigure_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PathFigure_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PathFigure[] = L"Windows.UI.Xaml.Media.PathFigure";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PathSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PathSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PathSegment[] = L"Windows.UI.Xaml.Media.PathSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Projection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Projection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Projection[] = L"Windows.UI.Xaml.Media.Projection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_RateChangedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_RateChangedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_RateChangedRoutedEventArgs[] = L"Windows.UI.Xaml.Media.RateChangedRoutedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarker_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarker_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TimelineMarker[] = L"Windows.UI.Xaml.Media.TimelineMarker";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarkerRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TimelineMarkerRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TimelineMarkerRoutedEventArgs[] = L"Windows.UI.Xaml.Media.TimelineMarkerRoutedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_ArcSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_ArcSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_ArcSegment[] = L"Windows.UI.Xaml.Media.ArcSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_BezierSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_BezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_BezierSegment[] = L"Windows.UI.Xaml.Media.BezierSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_BitmapCache_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_BitmapCache_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_BitmapCache[] = L"Windows.UI.Xaml.Media.BitmapCache";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_EllipseGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_EllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_EllipseGeometry[] = L"Windows.UI.Xaml.Media.EllipseGeometry";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GeometryGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GeometryGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GeometryGroup[] = L"Windows.UI.Xaml.Media.GeometryGroup";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_GradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_GradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_GradientBrush[] = L"Windows.UI.Xaml.Media.GradientBrush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_LineGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_LineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_LineGeometry[] = L"Windows.UI.Xaml.Media.LineGeometry";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_LineSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_LineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_LineSegment[] = L"Windows.UI.Xaml.Media.LineSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Matrix3DProjection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Matrix3DProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Matrix3DProjection[] = L"Windows.UI.Xaml.Media.Matrix3DProjection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PathGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PathGeometry[] = L"Windows.UI.Xaml.Media.PathGeometry";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PlaneProjection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PlaneProjection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PlaneProjection[] = L"Windows.UI.Xaml.Media.PlaneProjection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PolyBezierSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PolyBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PolyBezierSegment[] = L"Windows.UI.Xaml.Media.PolyBezierSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PolyLineSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PolyLineSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PolyLineSegment[] = L"Windows.UI.Xaml.Media.PolyLineSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_PolyQuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_PolyQuadraticBezierSegment[] = L"Windows.UI.Xaml.Media.PolyQuadraticBezierSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_QuadraticBezierSegment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_QuadraticBezierSegment[] = L"Windows.UI.Xaml.Media.QuadraticBezierSegment";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_RectangleGeometry_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_RectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_RectangleGeometry[] = L"Windows.UI.Xaml.Media.RectangleGeometry";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_SolidColorBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_SolidColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_SolidColorBrush[] = L"Windows.UI.Xaml.Media.SolidColorBrush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Transform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Transform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Transform[] = L"Windows.UI.Xaml.Media.Transform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_CompositeTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_CompositeTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_CompositeTransform[] = L"Windows.UI.Xaml.Media.CompositeTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_LinearGradientBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_LinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_LinearGradientBrush[] = L"Windows.UI.Xaml.Media.LinearGradientBrush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_MatrixTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_MatrixTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_MatrixTransform[] = L"Windows.UI.Xaml.Media.MatrixTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_RotateTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_RotateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_RotateTransform[] = L"Windows.UI.Xaml.Media.RotateTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_ScaleTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_ScaleTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_ScaleTransform[] = L"Windows.UI.Xaml.Media.ScaleTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_SkewTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_SkewTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_SkewTransform[] = L"Windows.UI.Xaml.Media.SkewTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TransformGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TransformGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TransformGroup[] = L"Windows.UI.Xaml.Media.TransformGroup";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TranslateTransform_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TranslateTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TranslateTransform[] = L"Windows.UI.Xaml.Media.TranslateTransform";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_TileBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_TileBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_TileBrush[] = L"Windows.UI.Xaml.Media.TileBrush";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_ImageBrush_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_ImageBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_ImageBrush[] = L"Windows.UI.Xaml.Media.ImageBrush";
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia_0000_0188_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


