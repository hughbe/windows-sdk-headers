//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Storage.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Estorage_h__)")
cpp_quote("#include <Windows.Storage.h>")
cpp_quote("#endif // !defined(__windows2Estorage_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;
    }
}
namespace Windows
{
    namespace Storage
    {
        interface IStorageFile;

        interface IStorageFolder;

        typedef enum NameCollisionOption NameCollisionOption;

        runtimeclass StorageFile;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Playlists
        {
            typedef enum PlaylistFormat PlaylistFormat;

            interface IPlaylist;

            interface IPlaylistStatics;

            runtimeclass Playlist;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Media
    {
        namespace Playlists
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Media.Playlists.Playlist*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Media
    {
        namespace Playlists
        {
            [version(0x06020000)]
            enum PlaylistFormat
            {
                WindowsMedia = 0,
                Zune         = 1,
                M3u          = 2
            };

            [exclusiveto(Windows.Media.Playlists.Playlist)]
            [uuid(803736F5-CF44-4D97-83B3-7A089E9AB663)]
            [version(0x06020000)]
            interface IPlaylist : IInspectable
            {
                [propget] HRESULT Files([out] [retval] Windows.Foundation.Collections.IVector<Windows.Storage.StorageFile*>** value);
                HRESULT SaveAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                [overload("SaveAsAsync")] HRESULT SaveAsAsync([in] Windows.Storage.IStorageFolder* saveLocation, [in] HSTRING desiredName, [in] Windows.Storage.NameCollisionOption option, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile*>** operation);
                [overload("SaveAsAsync")] HRESULT SaveAsWithFormatAsync([in] Windows.Storage.IStorageFolder* saveLocation, [in] HSTRING desiredName, [in] Windows.Storage.NameCollisionOption option, [in] Windows.Media.Playlists.PlaylistFormat playlistFormat, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.StorageFile*>** operation);
            }

            [exclusiveto(Windows.Media.Playlists.Playlist)]
            [uuid(C5C331CD-81F9-4FF3-95B9-70B6FF046B68)]
            [version(0x06020000)]
            interface IPlaylistStatics : IInspectable
            {
                HRESULT LoadAsync([in] Windows.Storage.IStorageFile* file, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Media.Playlists.Playlist*>** operation);
            }

            [activatable(0x06020000)]
            [static(Windows.Media.Playlists.IPlaylistStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass Playlist
            {
                [default] interface Windows.Media.Playlists.IPlaylist;
            }
        }
    }
}
