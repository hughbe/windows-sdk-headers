//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Devices.Geolocation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edevices2Egeolocation_h__)")
cpp_quote("#include <Windows.Devices.Geolocation.h>")
cpp_quote("#endif // !defined(__windows2Edevices2Egeolocation_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            runtimeclass Geoposition;

            interface IGeoshape;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            namespace Geofencing
            {
                typedef enum MonitoredGeofenceStates MonitoredGeofenceStates;

                typedef enum GeofenceState GeofenceState;

                typedef enum GeofenceMonitorStatus GeofenceMonitorStatus;

                typedef enum GeofenceRemovalReason GeofenceRemovalReason;

                interface IGeofenceFactory;

                interface IGeofence;

                interface IGeofenceStateChangeReport;

                interface IGeofenceMonitorStatics;

                interface IGeofenceMonitor;

                runtimeclass Geofence;

                runtimeclass GeofenceMonitor;

                runtimeclass GeofenceStateChangeReport;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            namespace Geofencing
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.Devices.Geolocation.Geofencing.Geofence*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.Devices.Geolocation.Geofencing.Geofence*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Geolocation.Geofencing.Geofence*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport*>;

                    interface Windows.Foundation.Collections.IVector<Windows.Devices.Geolocation.Geofencing.Geofence*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geofencing.GeofenceMonitor*, IInspectable*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Geolocation
        {
            namespace Geofencing
            {
                [flags]
                [version(0x06030000)]
                enum MonitoredGeofenceStates
                {
                    None    = 0x0,
                    Entered = 0x1,
                    Exited  = 0x2,
                    Removed = 0x4
                };

                [flags]
                [version(0x06030000)]
                enum GeofenceState
                {
                    None    = 0x0,
                    Entered = 0x1,
                    Exited  = 0x2,
                    Removed = 0x4
                };

                [version(0x06030000)]
                enum GeofenceMonitorStatus
                {
                    Ready          = 0,
                    Initializing   = 1,
                    NoData         = 2,
                    Disabled       = 3,
                    NotInitialized = 4,
                    NotAvailable   = 5
                };

                [version(0x06030000)]
                enum GeofenceRemovalReason
                {
                    Used    = 0,
                    Expired = 1
                };

                [exclusiveto(Windows.Devices.Geolocation.Geofencing.Geofence)]
                [uuid(841F624B-325F-4B90-BCA7-2B8022A93796)]
                [version(0x06030000)]
                interface IGeofenceFactory : IInspectable
                {
                    HRESULT Create([in] HSTRING id, [in] Windows.Devices.Geolocation.IGeoshape* geoshape, [out] [retval] Windows.Devices.Geolocation.Geofencing.Geofence** geofence);
                    HRESULT CreateWithMonitorStates([in] HSTRING id, [in] Windows.Devices.Geolocation.IGeoshape* geoshape, [in] Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates monitoredStates, [in] boolean singleUse, [out] [retval] Windows.Devices.Geolocation.Geofencing.Geofence** geofence);
                    HRESULT CreateWithMonitorStatesAndDwellTime([in] HSTRING id, [in] Windows.Devices.Geolocation.IGeoshape* geoshape, [in] Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates monitoredStates, [in] boolean singleUse, [in] Windows.Foundation.TimeSpan dwellTime, [out] [retval] Windows.Devices.Geolocation.Geofencing.Geofence** geofence);
                    HRESULT CreateWithMonitorStatesDwellTimeStartTimeAndDuration([in] HSTRING id, [in] Windows.Devices.Geolocation.IGeoshape* geoshape, [in] Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates monitoredStates, [in] boolean singleUse, [in] Windows.Foundation.TimeSpan dwellTime, [in] Windows.Foundation.DateTime startTime, [in] Windows.Foundation.TimeSpan duration, [out] [retval] Windows.Devices.Geolocation.Geofencing.Geofence** geofence);
                }

                [exclusiveto(Windows.Devices.Geolocation.Geofencing.Geofence)]
                [uuid(9C090823-EDB8-47E0-8245-5BF61D321F2D)]
                [version(0x06030000)]
                interface IGeofence : IInspectable
                {
                    [propget] HRESULT StartTime([out] [retval] Windows.Foundation.DateTime* value);
                    [propget] HRESULT Duration([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT DwellTime([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT Id([out] [retval] HSTRING* value);
                    [propget] HRESULT MonitoredStates([out] [retval] Windows.Devices.Geolocation.Geofencing.MonitoredGeofenceStates* value);
                    [propget] HRESULT Geoshape([out] [retval] Windows.Devices.Geolocation.IGeoshape** value);
                    [propget] HRESULT SingleUse([out] [retval] boolean* value);
                }

                [exclusiveto(Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport)]
                [uuid(9A243C18-2464-4C89-BE05-B3FFFF5BABC5)]
                [version(0x06030000)]
                interface IGeofenceStateChangeReport : IInspectable
                {
                    [propget] HRESULT NewState([out] [retval] Windows.Devices.Geolocation.Geofencing.GeofenceState* value);
                    [propget] HRESULT Geofence([out] [retval] Windows.Devices.Geolocation.Geofencing.Geofence** value);
                    [propget] HRESULT Geoposition([out] [retval] Windows.Devices.Geolocation.Geoposition** value);
                    [propget] HRESULT RemovalReason([out] [retval] Windows.Devices.Geolocation.Geofencing.GeofenceRemovalReason* value);
                }

                [exclusiveto(Windows.Devices.Geolocation.Geofencing.GeofenceMonitor)]
                [uuid(2DD32FCF-7E75-4899-ACE3-2BD0A65CCE06)]
                [version(0x06030000)]
                interface IGeofenceMonitorStatics : IInspectable
                {
                    [propget] HRESULT Current([out] [retval] Windows.Devices.Geolocation.Geofencing.GeofenceMonitor** value);
                }

                [exclusiveto(Windows.Devices.Geolocation.Geofencing.GeofenceMonitor)]
                [uuid(4C0F5F78-1C1F-4621-BBBD-833B92247226)]
                [version(0x06030000)]
                interface IGeofenceMonitor : IInspectable
                {
                    [propget] HRESULT Status([out] [retval] Windows.Devices.Geolocation.Geofencing.GeofenceMonitorStatus* value);
                    [propget] HRESULT Geofences([out] [retval] Windows.Foundation.Collections.IVector<Windows.Devices.Geolocation.Geofencing.Geofence*>** value);
                    [propget] HRESULT LastKnownGeoposition([out] [retval] Windows.Devices.Geolocation.Geoposition** value);
                    [eventadd] HRESULT GeofenceStateChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geofencing.GeofenceMonitor*, IInspectable*>* eventHandler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT GeofenceStateChanged([in] EventRegistrationToken token);
                    HRESULT ReadReports([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Devices.Geolocation.Geofencing.GeofenceStateChangeReport*>** value);
                    [eventadd] HRESULT StatusChanged([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geofencing.GeofenceMonitor*, IInspectable*>* eventHandler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT StatusChanged([in] EventRegistrationToken token);
                }

                [activatable(Windows.Devices.Geolocation.Geofencing.IGeofenceFactory, 0x06030000)]
                [marshaling_behavior(agile)]
                [version(0x06030000)]
                runtimeclass Geofence
                {
                    [default] interface Windows.Devices.Geolocation.Geofencing.IGeofence;
                }

                [marshaling_behavior(agile)]
                [static(Windows.Devices.Geolocation.Geofencing.IGeofenceMonitorStatics, 0x06030000)]
                [version(0x06030000)]
                runtimeclass GeofenceMonitor
                {
                    [default] interface Windows.Devices.Geolocation.Geofencing.IGeofenceMonitor;
                }

                [marshaling_behavior(agile)]
                [version(0x06030000)]
                runtimeclass GeofenceStateChangeReport
                {
                    [default] interface Windows.Devices.Geolocation.Geofencing.IGeofenceStateChangeReport;
                }
            }
        }
    }
}
