//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.ApplicationModel.DataTransfer.idl";
import "Windows.ApplicationModel.DataTransfer.DragDrop.idl";
import "Windows.Graphics.Imaging.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#include <Windows.ApplicationModel.DataTransfer.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel2Edatatransfer_h__)")
cpp_quote("#if !defined(__windows2Eapplicationmodel2Edatatransfer2Edragdrop_h__)")
cpp_quote("#include <Windows.ApplicationModel.DataTransfer.DragDrop.h>")
cpp_quote("#endif // !defined(__windows2Eapplicationmodel2Edatatransfer2Edragdrop_h__)")
cpp_quote("#if !defined(__windows2Egraphics2Eimaging_h__)")
cpp_quote("#include <Windows.Graphics.Imaging.h>")
cpp_quote("#endif // !defined(__windows2Egraphics2Eimaging_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            runtimeclass DataPackage;

            typedef enum DataPackageOperation DataPackageOperation;

            runtimeclass DataPackageView;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            namespace DragDrop
            {
                typedef enum DragDropModifiers DragDropModifiers;
            }
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        typedef struct Point Point;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Imaging
        {
            runtimeclass SoftwareBitmap;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            namespace DragDrop
            {
                namespace Core
                {
                    typedef enum CoreDragUIContentMode CoreDragUIContentMode;

                    interface ICoreDragInfo;

                    interface ICoreDragInfo2;

                    interface ICoreDragUIOverride;

                    interface ICoreDropOperationTarget;

                    interface ICoreDragOperation;

                    interface ICoreDragOperation2;

                    interface ICoreDragDropManagerStatics;

                    interface ICoreDragDropManager;

                    interface ICoreDropOperationTargetRequestedEventArgs;

                    runtimeclass CoreDragInfo;

                    runtimeclass CoreDragUIOverride;

                    runtimeclass CoreDragDropManager;

                    runtimeclass CoreDropOperationTargetRequestedEventArgs;

                    runtimeclass CoreDragOperation;
                }
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            namespace DragDrop
            {
                namespace Core
                {
                    declare
                    {
                        interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager*, Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDropOperationTargetRequestedEventArgs*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace ApplicationModel
    {
        namespace DataTransfer
        {
            namespace DragDrop
            {
                namespace Core
                {
                    [flags]
                    [version(0x0A000000)]
                    enum CoreDragUIContentMode
                    {
                        Auto     = 0x0,
                        Deferred = 0x1
                    };

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo)]
                    [uuid(48353A8B-CB50-464E-9575-CD4E3A7AB028)]
                    [version(0x0A000000)]
                    interface ICoreDragInfo : IInspectable
                    {
                        [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageView** value);
                        [propget] HRESULT Modifiers([out] [retval] Windows.ApplicationModel.DataTransfer.DragDrop.DragDropModifiers* value);
                        [propget] HRESULT Position([out] [retval] Windows.Foundation.Point* value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo)]
                    [uuid(C54691E5-E6FB-4D74-B4B1-8A3C17F25E9E)]
                    [version(0x0A000000)]
                    interface ICoreDragInfo2 : IInspectable
                        requires
                            Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragInfo
                    {
                        [propget] HRESULT AllowedOperations([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride)]
                    [uuid(89A85064-3389-4F4F-8897-7E8A3FFB3C93)]
                    [version(0x0A000000)]
                    interface ICoreDragUIOverride : IInspectable
                    {
                        [overload("SetContentFromSoftwareBitmap")] HRESULT SetContentFromSoftwareBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap);
                        [overload("SetContentFromSoftwareBitmap")] HRESULT SetContentFromSoftwareBitmapWithAnchorPoint([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [in] Windows.Foundation.Point anchorPoint);
                        [propget] HRESULT IsContentVisible([out] [retval] boolean* value);
                        [propput] HRESULT IsContentVisible([in] boolean value);
                        [propget] HRESULT Caption([out] [retval] HSTRING* value);
                        [propput] HRESULT Caption([in] HSTRING value);
                        [propget] HRESULT IsCaptionVisible([out] [retval] boolean* value);
                        [propput] HRESULT IsCaptionVisible([in] boolean value);
                        [propget] HRESULT IsGlyphVisible([out] [retval] boolean* value);
                        [propput] HRESULT IsGlyphVisible([in] boolean value);
                        HRESULT Clear();
                    }

                    [uuid(D9126196-4C5B-417D-BB37-76381DEF8DB4)]
                    [version(0x0A000000)]
                    interface ICoreDropOperationTarget : IInspectable
                    {
                        HRESULT EnterAsync([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo* dragInfo, [in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride* dragUIOverride, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** returnValue);
                        HRESULT OverAsync([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo* dragInfo, [in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride* dragUIOverride, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** returnValue);
                        HRESULT LeaveAsync([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo* dragInfo, [out] [retval] Windows.Foundation.IAsyncAction** returnValue);
                        HRESULT DropAsync([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo* dragInfo, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** returnValue);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation)]
                    [uuid(CC06DE4F-6DB0-4E62-AB1B-A74A02DC6D85)]
                    [version(0x0A000000)]
                    interface ICoreDragOperation : IInspectable
                    {
                        [propget] HRESULT Data([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackage** value);
                        HRESULT SetPointerId([in] UINT32 pointerId);
                        [overload("SetDragUIContentFromSoftwareBitmap")] HRESULT SetDragUIContentFromSoftwareBitmap([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap);
                        [overload("SetDragUIContentFromSoftwareBitmap")] HRESULT SetDragUIContentFromSoftwareBitmapWithAnchorPoint([in] Windows.Graphics.Imaging.SoftwareBitmap* softwareBitmap, [in] Windows.Foundation.Point anchorPoint);
                        [propget] HRESULT DragUIContentMode([out] [retval] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIContentMode* value);
                        [propput] HRESULT DragUIContentMode([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIContentMode value);
                        HRESULT StartAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.DataTransfer.DataPackageOperation>** value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragOperation)]
                    [uuid(824B1E2C-D99A-4FC3-8507-6C182F33B46A)]
                    [version(0x0A000000)]
                    interface ICoreDragOperation2 : IInspectable
                        requires
                            Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragOperation
                    {
                        [propget] HRESULT AllowedOperations([out] [retval] Windows.ApplicationModel.DataTransfer.DataPackageOperation* value);
                        [propput] HRESULT AllowedOperations([in] Windows.ApplicationModel.DataTransfer.DataPackageOperation value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager)]
                    [uuid(9542FDCA-DA12-4C1C-8D06-041DB29733C3)]
                    [version(0x0A000000)]
                    interface ICoreDragDropManagerStatics : IInspectable
                    {
                        HRESULT GetForCurrentView([out] [retval] Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager** value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager)]
                    [uuid(7D56D344-8464-4FAF-AA49-37EA6E2D7BD1)]
                    [version(0x0A000000)]
                    interface ICoreDragDropManager : IInspectable
                    {
                        [eventadd] HRESULT TargetRequested([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragDropManager*, Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDropOperationTargetRequestedEventArgs*>* value, [out] [retval] EventRegistrationToken* returnValue);
                        [eventremove] HRESULT TargetRequested([in] EventRegistrationToken value);
                        [propget] HRESULT AreConcurrentOperationsEnabled([out] [retval] boolean* value);
                        [propput] HRESULT AreConcurrentOperationsEnabled([in] boolean value);
                    }

                    [exclusiveto(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDropOperationTargetRequestedEventArgs)]
                    [uuid(2ACA929A-5E28-4EA6-829E-29134E665D6D)]
                    [version(0x0A000000)]
                    interface ICoreDropOperationTargetRequestedEventArgs : IInspectable
                    {
                        HRESULT SetTarget([in] Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTarget* target);
                    }

                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x0A000000)]
                    runtimeclass CoreDragInfo
                    {
                        [default] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragInfo;
                        [version(0x0A000000)] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragInfo2;
                    }

                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x0A000000)]
                    runtimeclass CoreDragUIOverride
                    {
                        [default] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragUIOverride;
                    }

                    [marshaling_behavior(agile)]
                    [static(Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragDropManagerStatics, 0x0A000000)]
                    [threading(both)]
                    [version(0x0A000000)]
                    runtimeclass CoreDragDropManager
                    {
                        [default] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragDropManager;
                    }

                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x0A000000)]
                    runtimeclass CoreDropOperationTargetRequestedEventArgs
                    {
                        [default] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDropOperationTargetRequestedEventArgs;
                    }

                    [activatable(0x0A000000)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    [version(0x0A000000)]
                    runtimeclass CoreDragOperation
                    {
                        [default] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragOperation;
                        [version(0x0A000000)] interface Windows.ApplicationModel.DataTransfer.DragDrop.Core.ICoreDragOperation2;
                    }
                }
            }
        }
    }
}
