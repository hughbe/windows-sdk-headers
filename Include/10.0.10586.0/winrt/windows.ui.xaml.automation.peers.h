

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eui2Examl2Eautomation2Epeers_h__
#define __windows2Eui2Examl2Eautomation2Epeers_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonBaseAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonBaseAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICaptureElementAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICaptureElementAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGroupItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGroupItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IImageAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IImageAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeer2;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IItemsControlAutomationPeerOverrides2;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaTransportControlsAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaTransportControlsAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPasswordBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPasswordBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressRingAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressRingAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRangeBaseAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRangeBaseAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichEditBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichEditBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockOverflowAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRichTextBlockOverflowAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISemanticZoomAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISemanticZoomAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISettingsFlyoutAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISettingsFlyoutAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBlockAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBlockAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITextBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IThumbAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IThumbAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSwitchAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleSwitchAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHyperlinkButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHyperlinkButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressBarAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IProgressBarAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeatButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRepeatButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollBarAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollBarAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISelectorAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISliderAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISliderAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICheckBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ICheckBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IComboBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlipViewAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IRadioButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutoSuggestBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutoSuggestBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFlyoutPresenterAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubSectionAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IHubSectionAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseHeaderItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseHeaderItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaElementAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMediaElementAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollViewerAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IScrollViewerAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISearchBoxAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ISearchBoxAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleMenuFlyoutItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IToggleMenuFlyoutItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewHeaderItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewHeaderItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewHeaderItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewHeaderItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMenuFlyoutPresenterAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarToggleButtonAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAppBarToggleButtonAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewBaseAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IGridViewAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListViewAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerOverrides;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerProtected;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer2;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerOverrides2;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer3;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerOverrides3;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerStatics3;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeer4;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerOverrides4;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IAutomationPeerAnnotationFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeerStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IFrameworkElementAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IMapControlAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IDatePickerFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IListPickerFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ILoopingSelectorItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPickerFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemDataAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotItemDataAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface ITimePickerFlyoutPresenterAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotAutomationPeer;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        interface IPivotAutomationPeerFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.UI.Xaml.h"
#include "Windows.UI.Xaml.Automation.h"
#include "Windows.UI.Xaml.Automation.Provider.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
interface IAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3887 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3887 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3887_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3887_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1f93cd7a-8075-5ba9-bc3e-b04a94e14bc0"))
IIterator<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Automation.Peers.AutomationPeer>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3888 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3888 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3888_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3888_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7f67a4e2-96e0-522b-8710-14c42d834f1e"))
IIterable<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Automation.Peers.AutomationPeer>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AutomationPeerAnnotation;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
interface IAutomationPeerAnnotation;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3889 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3889 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3889_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3889_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3b415733-48f2-58b0-9884-6f0d0e35dc1a"))
IIterator<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3890 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3890 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3890_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3890_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dd28ff94-d11e-5ae7-b819-6177c1599313"))
IIterable<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0004 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3891 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3891 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3891_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3891_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0005 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b56a6076-19e2-50c1-930f-825bfc39635c"))
IVectorView<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Automation.Peers.AutomationPeer>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3892 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3892 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3892_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3892_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0006 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("00775c79-589b-5c36-ae72-2e7aab0270c6"))
IVectorView<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0006 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3893 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3893 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3893_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3893_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0007 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a8d8a409-9130-5e14-8426-0782aaf01608"))
IVector<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Automation.Peers.AutomationPeer>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeer*> __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t;
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3894 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3894 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3894_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3894_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0008 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d353f885-4bf0-5dc2-878e-ec7a394ee880"))
IVector<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*, ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Automation::Peers::AutomationPeerAnnotation*> __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t;
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0008 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3895 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3895 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3895_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3895_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<String>"; }
};
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define ____FIIterator_1_HSTRING_FWD_DEFINED__
#define __FIIterator_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3896 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3896 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3896_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3896_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<String>"; }
};
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define ____FIIterable_1_HSTRING_FWD_DEFINED__
#define __FIIterable_1_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_HSTRING_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0010 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3897 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3897 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3897_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3897_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0011 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_HSTRING_USE
#define DEF___FIVectorView_1_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2f13c006-a03a-5f69-b090-75a43e33423e"))
IVectorView<HSTRING> : IVectorView_impl<HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<String>"; }
};
typedef IVectorView<HSTRING> __FIVectorView_1_HSTRING_t;
#define ____FIVectorView_1_HSTRING_FWD_DEFINED__
#define __FIVectorView_1_HSTRING ABI::Windows::Foundation::Collections::__FIVectorView_1_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_HSTRING_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Eui2Examl_h__)
#include <Windows.UI.Xaml.h>
#endif // !defined(__windows2Eui2Examl_h__)
#if !defined(__windows2Eui2Examl2Eautomation_h__)
#include <Windows.UI.Xaml.Automation.h>
#endif // !defined(__windows2Eui2Examl2Eautomation_h__)
#if !defined(__windows2Eui2Examl2Eautomation2Eprovider_h__)
#include <Windows.UI.Xaml.Automation.Provider.h>
#endif // !defined(__windows2Eui2Examl2Eautomation2Eprovider_h__)
#if !defined(__windows2Eui2Examl2Econtrols_h__)
#include <Windows.UI.Xaml.Controls.h>
#endif // !defined(__windows2Eui2Examl2Econtrols_h__)
#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#include <Windows.UI.Xaml.Controls.Primitives.h>
#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
class AutomationProperty;
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CAutomationTextEditChangeType __x_ABI_CWindows_CUI_CXaml_CAutomation_CAutomationTextEditChangeType;


#endif /* end if !defined(__cplusplus) */


#endif





#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Provider {
class IRawElementProviderSimple;
} /*Provider*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif








#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBar;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBarButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AppBarToggleButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class AutoSuggestBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Button;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CaptureElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class CheckBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ComboBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ComboBoxItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class DatePicker;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlipView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlipViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class FlyoutPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridViewHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GridViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class GroupItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Hub;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HubSection;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class HyperlinkButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Image;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ItemsControl;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListBoxItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListView;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewBaseHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewHeaderItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MediaElement;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MediaTransportControls;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class MenuFlyoutPresenter;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class PasswordBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Pivot;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class PivotItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ButtonBase;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class RangeBase;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class RepeatButton;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ScrollBar;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class Selector;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class Thumb;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
namespace Primitives {
class ToggleButton;
} /*Primitives*/
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ProgressBar;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ProgressRing;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RadioButton;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichEditBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichTextBlock;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class RichTextBlockOverflow;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ScrollViewer;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SemanticZoom;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SettingsFlyout;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Slider;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextBlock;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TextBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class TimePicker;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToggleMenuFlyoutItem;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ToggleSwitch;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyProperty;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAccessibilityView __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAccessibilityView;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationControlType __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationControlType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationEvents __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationEvents;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CPatternInterface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CPatternInterface;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId;

#endif
































































































































































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class FrameworkElementAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ButtonBaseAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class CaptureElementAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ComboBoxItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class FlipViewItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class GroupItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ImageAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListBoxItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class MediaTransportControlsAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class PasswordBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ProgressRingAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RichEditBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RichTextBlockAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RichTextBlockOverflowAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SettingsFlyoutAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class TextBlockAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class TextBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ThumbAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AutoSuggestBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class DatePickerAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class FlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class GridViewItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class HubAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewBaseHeaderItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class MediaElementAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SearchBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class TimePickerAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class GridViewHeaderItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewHeaderItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class HyperlinkButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RepeatButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class MenuFlyoutItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AppBarButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ItemsControlAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class MenuFlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RangeBaseAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ProgressBarAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ScrollBarAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SliderAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class HubSectionAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ScrollViewerAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SelectorAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class FlipViewAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewBaseAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class GridViewAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SemanticZoomAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ToggleSwitchAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ToggleButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class CheckBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class RadioButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AppBarAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ToggleMenuFlyoutItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AppBarToggleButtonAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ComboBoxAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class SelectorItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ComboBoxItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class FlipViewItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListBoxItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class GridViewItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListViewItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class MapControlAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class LoopingSelectorItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class DatePickerFlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class ListPickerFlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class LoopingSelectorAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class LoopingSelectorItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class PickerFlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class PivotItemAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class PivotItemDataAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class TimePickerFlyoutPresenterAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class PivotAutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0011 */
/* [local] */ 


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Rect Rect;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    
                    typedef enum AnnotationType AnnotationType;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    
                    typedef enum AutomationTextEditChangeType AutomationTextEditChangeType;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif












































































#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AccessibilityView AccessibilityView;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationControlType AutomationControlType;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationEvents AutomationEvents;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationLandmarkType AutomationLandmarkType;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationLiveSetting AutomationLiveSetting;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationNavigationDirection AutomationNavigationDirection;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationOrientation AutomationOrientation;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum AutomationStructureChangeType AutomationStructureChangeType;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef enum PatternInterface PatternInterface;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        typedef struct RawElementProviderRuntimeId RawElementProviderRuntimeId;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



































































































































































extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3898 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3898 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3898_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3898_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#define DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0012 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0012_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1f93cd7a-8075-5ba9-bc3e-b04a94e14bc0")
    __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0013 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0013 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3899 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3899 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3899_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3899_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0014 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#define DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0014 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0014_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7f67a4e2-96e0-522b-8710-14c42d834f1e")
    __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0015 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0015 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3900 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3900 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3900_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3900_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0016 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#define DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0016 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0016_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3b415733-48f2-58b0-9884-6f0d0e35dc1a")
    __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0017 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0017 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3901 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3901 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3901_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3901_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0018 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#define DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0018 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0018_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dd28ff94-d11e-5ae7-b819-6177c1599313")
    __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0019 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0019 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3902 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3902 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3902_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3902_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0020 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0020 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0020_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b56a6076-19e2-50c1-930f-825bfc39635c")
    __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0021 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0021 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3903 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3903 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3903_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3903_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0022 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0022 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0022_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00775c79-589b-5c36-ae72-2e7aab0270c6")
    __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0023 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0023 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3904 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3904 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3904_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3904_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#define DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0024 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0024_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a8d8a409-9130-5e14-8426-0782aaf01608")
    __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0025 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0025 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3905 */




/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3905 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3905_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_3905_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0026 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#define DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0026 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0026_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d353f885-4bf0-5dc2-878e-ec7a394ee880")
    __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0027 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAccessibilityView
    {
        AccessibilityView_Raw	= 0,
        AccessibilityView_Control	= 1,
        AccessibilityView_Content	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationControlType
    {
        AutomationControlType_Button	= 0,
        AutomationControlType_Calendar	= 1,
        AutomationControlType_CheckBox	= 2,
        AutomationControlType_ComboBox	= 3,
        AutomationControlType_Edit	= 4,
        AutomationControlType_Hyperlink	= 5,
        AutomationControlType_Image	= 6,
        AutomationControlType_ListItem	= 7,
        AutomationControlType_List	= 8,
        AutomationControlType_Menu	= 9,
        AutomationControlType_MenuBar	= 10,
        AutomationControlType_MenuItem	= 11,
        AutomationControlType_ProgressBar	= 12,
        AutomationControlType_RadioButton	= 13,
        AutomationControlType_ScrollBar	= 14,
        AutomationControlType_Slider	= 15,
        AutomationControlType_Spinner	= 16,
        AutomationControlType_StatusBar	= 17,
        AutomationControlType_Tab	= 18,
        AutomationControlType_TabItem	= 19,
        AutomationControlType_Text	= 20,
        AutomationControlType_ToolBar	= 21,
        AutomationControlType_ToolTip	= 22,
        AutomationControlType_Tree	= 23,
        AutomationControlType_TreeItem	= 24,
        AutomationControlType_Custom	= 25,
        AutomationControlType_Group	= 26,
        AutomationControlType_Thumb	= 27,
        AutomationControlType_DataGrid	= 28,
        AutomationControlType_DataItem	= 29,
        AutomationControlType_Document	= 30,
        AutomationControlType_SplitButton	= 31,
        AutomationControlType_Window	= 32,
        AutomationControlType_Pane	= 33,
        AutomationControlType_Header	= 34,
        AutomationControlType_HeaderItem	= 35,
        AutomationControlType_Table	= 36,
        AutomationControlType_TitleBar	= 37,
        AutomationControlType_Separator	= 38,
        AutomationControlType_SemanticZoom	= 39,
        AutomationControlType_AppBar	= 40
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationEvents
    {
        AutomationEvents_ToolTipOpened	= 0,
        AutomationEvents_ToolTipClosed	= 1,
        AutomationEvents_MenuOpened	= 2,
        AutomationEvents_MenuClosed	= 3,
        AutomationEvents_AutomationFocusChanged	= 4,
        AutomationEvents_InvokePatternOnInvoked	= 5,
        AutomationEvents_SelectionItemPatternOnElementAddedToSelection	= 6,
        AutomationEvents_SelectionItemPatternOnElementRemovedFromSelection	= 7,
        AutomationEvents_SelectionItemPatternOnElementSelected	= 8,
        AutomationEvents_SelectionPatternOnInvalidated	= 9,
        AutomationEvents_TextPatternOnTextSelectionChanged	= 10,
        AutomationEvents_TextPatternOnTextChanged	= 11,
        AutomationEvents_AsyncContentLoaded	= 12,
        AutomationEvents_PropertyChanged	= 13,
        AutomationEvents_StructureChanged	= 14,
        AutomationEvents_DragStart	= 15,
        AutomationEvents_DragCancel	= 16,
        AutomationEvents_DragComplete	= 17,
        AutomationEvents_DragEnter	= 18,
        AutomationEvents_DragLeave	= 19,
        AutomationEvents_Dropped	= 20,
        AutomationEvents_LiveRegionChanged	= 21,
        AutomationEvents_InputReachedTarget	= 22,
        AutomationEvents_InputReachedOtherElement	= 23,
        AutomationEvents_InputDiscarded	= 24,
        AutomationEvents_WindowClosed	= 25,
        AutomationEvents_WindowOpened	= 26,
        AutomationEvents_ConversionTargetChanged	= 27,
        AutomationEvents_TextEditTextChanged	= 28
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType
    {
        AutomationLandmarkType_None	= 0,
        AutomationLandmarkType_Custom	= 1,
        AutomationLandmarkType_Form	= 2,
        AutomationLandmarkType_Main	= 3,
        AutomationLandmarkType_Navigation	= 4,
        AutomationLandmarkType_Search	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting
    {
        AutomationLiveSetting_Off	= 0,
        AutomationLiveSetting_Polite	= 1,
        AutomationLiveSetting_Assertive	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection
    {
        AutomationNavigationDirection_Parent	= 0,
        AutomationNavigationDirection_NextSibling	= 1,
        AutomationNavigationDirection_PreviousSibling	= 2,
        AutomationNavigationDirection_FirstChild	= 3,
        AutomationNavigationDirection_LastChild	= 4
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation
    {
        AutomationOrientation_None	= 0,
        AutomationOrientation_Horizontal	= 1,
        AutomationOrientation_Vertical	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType
    {
        AutomationStructureChangeType_ChildAdded	= 0,
        AutomationStructureChangeType_ChildRemoved	= 1,
        AutomationStructureChangeType_ChildrenInvalidated	= 2,
        AutomationStructureChangeType_ChildrenBulkAdded	= 3,
        AutomationStructureChangeType_ChildrenBulkRemoved	= 4,
        AutomationStructureChangeType_ChildrenReordered	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CPatternInterface
    {
        PatternInterface_Invoke	= 0,
        PatternInterface_Selection	= 1,
        PatternInterface_Value	= 2,
        PatternInterface_RangeValue	= 3,
        PatternInterface_Scroll	= 4,
        PatternInterface_ScrollItem	= 5,
        PatternInterface_ExpandCollapse	= 6,
        PatternInterface_Grid	= 7,
        PatternInterface_GridItem	= 8,
        PatternInterface_MultipleView	= 9,
        PatternInterface_Window	= 10,
        PatternInterface_SelectionItem	= 11,
        PatternInterface_Dock	= 12,
        PatternInterface_Table	= 13,
        PatternInterface_TableItem	= 14,
        PatternInterface_Toggle	= 15,
        PatternInterface_Transform	= 16,
        PatternInterface_Text	= 17,
        PatternInterface_ItemContainer	= 18,
        PatternInterface_VirtualizedItem	= 19,
        PatternInterface_Text2	= 20,
        PatternInterface_TextChild	= 21,
        PatternInterface_TextRange	= 22,
        PatternInterface_Annotation	= 23,
        PatternInterface_Drag	= 24,
        PatternInterface_DropTarget	= 25,
        PatternInterface_ObjectModel	= 26,
        PatternInterface_Spreadsheet	= 27,
        PatternInterface_SpreadsheetItem	= 28,
        PatternInterface_Styles	= 29,
        PatternInterface_Transform2	= 30,
        PatternInterface_SynchronizedInput	= 31,
        PatternInterface_TextEdit	= 32,
        PatternInterface_CustomNavigation	= 33
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId
    {
    UINT32 Part1;
    UINT32 Part2;
    } ;
#endif
#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0027 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AccessibilityView
                            {
                                AccessibilityView_Raw	= 0,
                                AccessibilityView_Control	= 1,
                                AccessibilityView_Content	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationControlType
                            {
                                AutomationControlType_Button	= 0,
                                AutomationControlType_Calendar	= 1,
                                AutomationControlType_CheckBox	= 2,
                                AutomationControlType_ComboBox	= 3,
                                AutomationControlType_Edit	= 4,
                                AutomationControlType_Hyperlink	= 5,
                                AutomationControlType_Image	= 6,
                                AutomationControlType_ListItem	= 7,
                                AutomationControlType_List	= 8,
                                AutomationControlType_Menu	= 9,
                                AutomationControlType_MenuBar	= 10,
                                AutomationControlType_MenuItem	= 11,
                                AutomationControlType_ProgressBar	= 12,
                                AutomationControlType_RadioButton	= 13,
                                AutomationControlType_ScrollBar	= 14,
                                AutomationControlType_Slider	= 15,
                                AutomationControlType_Spinner	= 16,
                                AutomationControlType_StatusBar	= 17,
                                AutomationControlType_Tab	= 18,
                                AutomationControlType_TabItem	= 19,
                                AutomationControlType_Text	= 20,
                                AutomationControlType_ToolBar	= 21,
                                AutomationControlType_ToolTip	= 22,
                                AutomationControlType_Tree	= 23,
                                AutomationControlType_TreeItem	= 24,
                                AutomationControlType_Custom	= 25,
                                AutomationControlType_Group	= 26,
                                AutomationControlType_Thumb	= 27,
                                AutomationControlType_DataGrid	= 28,
                                AutomationControlType_DataItem	= 29,
                                AutomationControlType_Document	= 30,
                                AutomationControlType_SplitButton	= 31,
                                AutomationControlType_Window	= 32,
                                AutomationControlType_Pane	= 33,
                                AutomationControlType_Header	= 34,
                                AutomationControlType_HeaderItem	= 35,
                                AutomationControlType_Table	= 36,
                                AutomationControlType_TitleBar	= 37,
                                AutomationControlType_Separator	= 38,
                                AutomationControlType_SemanticZoom	= 39,
                                AutomationControlType_AppBar	= 40
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationEvents
                            {
                                AutomationEvents_ToolTipOpened	= 0,
                                AutomationEvents_ToolTipClosed	= 1,
                                AutomationEvents_MenuOpened	= 2,
                                AutomationEvents_MenuClosed	= 3,
                                AutomationEvents_AutomationFocusChanged	= 4,
                                AutomationEvents_InvokePatternOnInvoked	= 5,
                                AutomationEvents_SelectionItemPatternOnElementAddedToSelection	= 6,
                                AutomationEvents_SelectionItemPatternOnElementRemovedFromSelection	= 7,
                                AutomationEvents_SelectionItemPatternOnElementSelected	= 8,
                                AutomationEvents_SelectionPatternOnInvalidated	= 9,
                                AutomationEvents_TextPatternOnTextSelectionChanged	= 10,
                                AutomationEvents_TextPatternOnTextChanged	= 11,
                                AutomationEvents_AsyncContentLoaded	= 12,
                                AutomationEvents_PropertyChanged	= 13,
                                AutomationEvents_StructureChanged	= 14,
                                AutomationEvents_DragStart	= 15,
                                AutomationEvents_DragCancel	= 16,
                                AutomationEvents_DragComplete	= 17,
                                AutomationEvents_DragEnter	= 18,
                                AutomationEvents_DragLeave	= 19,
                                AutomationEvents_Dropped	= 20,
                                AutomationEvents_LiveRegionChanged	= 21,
                                AutomationEvents_InputReachedTarget	= 22,
                                AutomationEvents_InputReachedOtherElement	= 23,
                                AutomationEvents_InputDiscarded	= 24,
                                AutomationEvents_WindowClosed	= 25,
                                AutomationEvents_WindowOpened	= 26,
                                AutomationEvents_ConversionTargetChanged	= 27,
                                AutomationEvents_TextEditTextChanged	= 28
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationLandmarkType
                            {
                                AutomationLandmarkType_None	= 0,
                                AutomationLandmarkType_Custom	= 1,
                                AutomationLandmarkType_Form	= 2,
                                AutomationLandmarkType_Main	= 3,
                                AutomationLandmarkType_Navigation	= 4,
                                AutomationLandmarkType_Search	= 5
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationLiveSetting
                            {
                                AutomationLiveSetting_Off	= 0,
                                AutomationLiveSetting_Polite	= 1,
                                AutomationLiveSetting_Assertive	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationNavigationDirection
                            {
                                AutomationNavigationDirection_Parent	= 0,
                                AutomationNavigationDirection_NextSibling	= 1,
                                AutomationNavigationDirection_PreviousSibling	= 2,
                                AutomationNavigationDirection_FirstChild	= 3,
                                AutomationNavigationDirection_LastChild	= 4
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationOrientation
                            {
                                AutomationOrientation_None	= 0,
                                AutomationOrientation_Horizontal	= 1,
                                AutomationOrientation_Vertical	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum AutomationStructureChangeType
                            {
                                AutomationStructureChangeType_ChildAdded	= 0,
                                AutomationStructureChangeType_ChildRemoved	= 1,
                                AutomationStructureChangeType_ChildrenInvalidated	= 2,
                                AutomationStructureChangeType_ChildrenBulkAdded	= 3,
                                AutomationStructureChangeType_ChildrenBulkRemoved	= 4,
                                AutomationStructureChangeType_ChildrenReordered	= 5
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        /* [v1_enum] */ 
                        enum PatternInterface
                            {
                                PatternInterface_Invoke	= 0,
                                PatternInterface_Selection	= 1,
                                PatternInterface_Value	= 2,
                                PatternInterface_RangeValue	= 3,
                                PatternInterface_Scroll	= 4,
                                PatternInterface_ScrollItem	= 5,
                                PatternInterface_ExpandCollapse	= 6,
                                PatternInterface_Grid	= 7,
                                PatternInterface_GridItem	= 8,
                                PatternInterface_MultipleView	= 9,
                                PatternInterface_Window	= 10,
                                PatternInterface_SelectionItem	= 11,
                                PatternInterface_Dock	= 12,
                                PatternInterface_Table	= 13,
                                PatternInterface_TableItem	= 14,
                                PatternInterface_Toggle	= 15,
                                PatternInterface_Transform	= 16,
                                PatternInterface_Text	= 17,
                                PatternInterface_ItemContainer	= 18,
                                PatternInterface_VirtualizedItem	= 19,
                                PatternInterface_Text2	= 20,
                                PatternInterface_TextChild	= 21,
                                PatternInterface_TextRange	= 22,
                                PatternInterface_Annotation	= 23,
                                PatternInterface_Drag	= 24,
                                PatternInterface_DropTarget	= 25,
                                PatternInterface_ObjectModel	= 26,
                                PatternInterface_Spreadsheet	= 27,
                                PatternInterface_SpreadsheetItem	= 28,
                                PatternInterface_Styles	= 29,
                                PatternInterface_Transform2	= 30,
                                PatternInterface_SynchronizedInput	= 31,
                                PatternInterface_TextEdit	= 32,
                                PatternInterface_CustomNavigation	= 33
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Automation {
                    namespace Peers {
                        
                        struct RawElementProviderRuntimeId
                            {
                            UINT32 Part1;
                            UINT32 Part2;
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0027_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("953C34F6-3B31-47A7-B3BF-25D3AE99C317")
                            IItemAutomationPeer : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ItemsControlAutomationPeer( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IItemAutomationPeer = __uuidof(IItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ItemsControlAutomationPeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_get_Item(This,value)	\
    ( (This)->lpVtbl -> get_Item(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_get_ItemsControlAutomationPeer(This,value)	\
    ( (This)->lpVtbl -> get_ItemsControlAutomationPeer(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0028 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0028 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0028_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("29065073-DE3D-4D3F-97B4-4D6F9D53444D")
                            IItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IItemAutomationPeerFactory = __uuidof(IItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0029 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0029 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0029_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A4F3B5B6-7585-4E0B-96D2-08CF6F28BEFA")
                            IButtonBaseAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IButtonBaseAutomationPeer = __uuidof(IButtonBaseAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0030 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IButtonBaseAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0030 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0030_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8A04091E-E6B2-4C60-A759-C13CA45165ED")
                            IButtonBaseAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IButtonBase *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IButtonBaseAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IButtonBaseAutomationPeerFactory = __uuidof(IButtonBaseAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIButtonBase *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonBaseAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0031 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ICaptureElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ICaptureElementAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0031 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0031_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ICaptureElementAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("DCC44EE0-FA45-45C6-8BB7-320D808F5958")
                            ICaptureElementAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ICaptureElementAutomationPeer = __uuidof(ICaptureElementAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0032 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ICaptureElementAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ICaptureElementAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0032 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0032_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ICaptureElementAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("9B92EF48-85E9-4869-B175-8F7CF45A6D9F")
                            ICaptureElementAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICaptureElement *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ICaptureElementAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ICaptureElementAutomationPeerFactory = __uuidof(ICaptureElementAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICaptureElement *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICaptureElementAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0033 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0033 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0033_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("12DDC76E-9552-446A-82EE-938CC371800F")
                            IComboBoxItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxItemAutomationPeer = __uuidof(IComboBoxItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0034 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0034 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0034_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("134AC7FC-397A-403F-A6EC-1CE8BEDA15E5")
                            IComboBoxItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IComboBoxItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxItemAutomationPeerFactory = __uuidof(IComboBoxItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBoxItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0035 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0035 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0035_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C83034DE-FA08-4BD3-AEB2-D2E5BFA04DF9")
                            IFlipViewItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewItemAutomationPeer = __uuidof(IFlipViewItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0036 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0036 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0036_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("69109356-D0E5-4C10-A09C-AD0BF1B0CB01")
                            IFlipViewItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IFlipViewItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewItemAutomationPeerFactory = __uuidof(IFlipViewItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipViewItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0037 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGroupItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IGroupItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0037 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0037_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("1914FE6D-0740-4236-9EE1-38CF19C1C388")
                            IGroupItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IGroupItemAutomationPeer = __uuidof(IGroupItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0038 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGroupItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IGroupItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0038 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0038_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGroupItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("56A64567-F21C-4C90-B379-15A27C7F8409")
                            IGroupItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGroupItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IGroupItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IGroupItemAutomationPeerFactory = __uuidof(IGroupItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGroupItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGroupItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0039 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IImageAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IImageAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0039 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0039_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IImageAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("9B0BBF8C-60A2-48BF-AB2C-1A52A451D2D4")
                            IImageAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IImageAutomationPeer = __uuidof(IImageAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0040 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IImageAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IImageAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0040 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0040_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IImageAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("90304003-687D-47BF-B3A2-4BABCAD8EF50")
                            IImageAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IImage *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IImageAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IImageAutomationPeerFactory = __uuidof(IImageAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIImage *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIImageAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0041 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0041 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0041_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("96E76BF1-37F7-4088-925D-65268E83E34D")
                            IItemsControlAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IItemsControlAutomationPeer = __uuidof(IItemsControlAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0042 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0042 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0042_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("4038A259-2E1A-49CA-A533-C64F181577E6")
                            IItemsControlAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IItemsControl *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IItemsControlAutomationPeerFactory = __uuidof(IItemsControlAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIItemsControl *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0043 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemsControlAutomationPeer2[] = L"Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0043 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0043_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeer2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C48D8917-95A8-47B8-A517-BF891A6C039B")
                            IItemsControlAutomationPeer2 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateItemAutomationPeer( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemAutomationPeer **returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IItemsControlAutomationPeer2 = __uuidof(IItemsControlAutomationPeer2);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateItemAutomationPeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2 * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_CreateItemAutomationPeer(This,item,returnValue)	\
    ( (This)->lpVtbl -> CreateItemAutomationPeer(This,item,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeer2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0044 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IItemsControlAutomationPeerOverrides2[] = L"Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0044 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0044_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IItemsControlAutomationPeerOverrides2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("361DC0E8-B56F-45E9-80FE-10A0FB0FE177")
                            IItemsControlAutomationPeerOverrides2 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE OnCreateItemAutomationPeer( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IItemAutomationPeer **returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IItemsControlAutomationPeerOverrides2 = __uuidof(IItemsControlAutomationPeerOverrides2);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnCreateItemAutomationPeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2 * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemAutomationPeer **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_OnCreateItemAutomationPeer(This,item,returnValue)	\
    ( (This)->lpVtbl -> OnCreateItemAutomationPeer(This,item,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIItemsControlAutomationPeerOverrides2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0045 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0045 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0045_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("1BC6E1C6-2997-42DF-99EB-92BC1DD149FB")
                            IListBoxItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxItemAutomationPeer = __uuidof(IListBoxItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0046 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0046 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0046_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("509F9DD8-B0AA-443F-A110-41209AF44F1C")
                            IListBoxItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListBoxItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxItemAutomationPeerFactory = __uuidof(IListBoxItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBoxItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0047 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0047 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0047_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A3AD8D93-79F8-4958-A3C8-980DEFB83D15")
                            IMediaTransportControlsAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IMediaTransportControlsAutomationPeer = __uuidof(IMediaTransportControlsAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0048 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMediaTransportControlsAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IMediaTransportControlsAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0048 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0048_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F41CB003-E103-4AB0-812A-A08FBDB570CE")
                            IMediaTransportControlsAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMediaTransportControls *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IMediaTransportControlsAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IMediaTransportControlsAutomationPeerFactory = __uuidof(IMediaTransportControlsAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaTransportControls *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaTransportControlsAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0049 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0049 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0049_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("684F065E-3DF3-4B9F-82AD-8819DB3B218A")
                            IPasswordBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IPasswordBoxAutomationPeer = __uuidof(IPasswordBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0050 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPasswordBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IPasswordBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0050 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0050_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("AC3D7EDE-DCA4-481C-B520-4A9B3F3B179C")
                            IPasswordBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IPasswordBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IPasswordBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPasswordBoxAutomationPeerFactory = __uuidof(IPasswordBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPasswordBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPasswordBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0051 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IProgressRingAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0051 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0051_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("BC305EEE-39D3-4EEB-AC33-2394DE123E2E")
                            IProgressRingAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IProgressRingAutomationPeer = __uuidof(IProgressRingAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0052 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IProgressRingAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0052 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0052_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IProgressRingAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F3DB204B-157E-40BC-9593-55BC5C71A4F6")
                            IProgressRingAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IProgressRing *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IProgressRingAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IProgressRingAutomationPeerFactory = __uuidof(IProgressRingAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressRing *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressRingAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0053 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0053 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0053_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E454B549-4B2C-42AD-B04B-D35947D1EE50")
                            IRangeBaseAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRangeBaseAutomationPeer = __uuidof(IRangeBaseAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0054 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRangeBaseAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0054 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0054_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("827C7601-3078-4479-95EA-91374CA06207")
                            IRangeBaseAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IRangeBase *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRangeBaseAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRangeBaseAutomationPeerFactory = __uuidof(IRangeBaseAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRangeBase *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRangeBaseAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0055 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0055 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0055_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C69F5C04-16EE-467A-A833-C3DA8458AD64")
                            IRichEditBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRichEditBoxAutomationPeer = __uuidof(IRichEditBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0056 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichEditBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRichEditBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0056 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0056_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("752C8399-D296-4D87-9020-A4750E885B3C")
                            IRichEditBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRichEditBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRichEditBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRichEditBoxAutomationPeerFactory = __uuidof(IRichEditBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichEditBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichEditBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0057 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0057 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0057_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("93A01A9C-9609-41FA-82F3-909C09F49A72")
                            IRichTextBlockAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRichTextBlockAutomationPeer = __uuidof(IRichTextBlockAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0058 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichTextBlockAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRichTextBlockAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0058 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0058_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("2038AE61-1389-467A-AED6-37334DA9622B")
                            IRichTextBlockAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlock *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRichTextBlockAutomationPeerFactory = __uuidof(IRichTextBlockAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlock *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0059 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0059 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0059_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8C9A409A-2736-437B-AB36-A16A202F105D")
                            IRichTextBlockOverflowAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRichTextBlockOverflowAutomationPeer = __uuidof(IRichTextBlockOverflowAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0060 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRichTextBlockOverflowAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRichTextBlockOverflowAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0060 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0060_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("BD5EB663-2C14-4665-ADEF-F2B033947BEB")
                            IRichTextBlockOverflowAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRichTextBlockOverflow *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRichTextBlockOverflowAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRichTextBlockOverflowAutomationPeerFactory = __uuidof(IRichTextBlockOverflowAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRichTextBlockOverflow *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRichTextBlockOverflowAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0061 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0061 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0061_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("AE8B3477-860A-45BB-BF7C-E1B27419D1DD")
                            ISelectorItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISelectorItemAutomationPeer = __uuidof(ISelectorItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0062 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISelectorItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISelectorItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0062 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0062_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("66D7EDFB-786D-4362-A964-EBFB21776C30")
                            ISelectorItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::ISelectorAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISelectorItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISelectorItemAutomationPeerFactory = __uuidof(ISelectorItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0063 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0063 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0063_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("3C2FAC6C-A977-47FC-B44E-2754C0B2BEA9")
                            ISemanticZoomAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISemanticZoomAutomationPeer = __uuidof(ISemanticZoomAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0064 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISemanticZoomAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISemanticZoomAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0064 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0064_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F518D44D-A493-4496-B077-9674C7F4C5FA")
                            ISemanticZoomAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISemanticZoom *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISemanticZoomAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISemanticZoomAutomationPeerFactory = __uuidof(ISemanticZoomAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISemanticZoom *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISemanticZoomAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0065 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISettingsFlyoutAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISettingsFlyoutAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0065 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0065_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISettingsFlyoutAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D0DE0CDB-30CF-47A6-A5EB-9C77F0B0D6DD")
                            ISettingsFlyoutAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISettingsFlyoutAutomationPeer = __uuidof(ISettingsFlyoutAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0066 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISettingsFlyoutAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISettingsFlyoutAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0066 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0066_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISettingsFlyoutAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F94762BD-8A14-40E4-94A7-3F33C922E945")
                            ISettingsFlyoutAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISettingsFlyout *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISettingsFlyoutAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISettingsFlyoutAutomationPeerFactory = __uuidof(ISettingsFlyoutAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISettingsFlyout *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISettingsFlyoutAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0067 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITextBlockAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ITextBlockAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0067 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0067_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("BE2057F5-6715-4E69-A050-92BD0CE232A9")
                            ITextBlockAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITextBlockAutomationPeer = __uuidof(ITextBlockAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0068 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITextBlockAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ITextBlockAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0068 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0068_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITextBlockAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("76BF924B-7CA0-4B01-BC5C-A8CF4D3691DE")
                            ITextBlockAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextBlock *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ITextBlockAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITextBlockAutomationPeerFactory = __uuidof(ITextBlockAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBlock *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBlockAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0069 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITextBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ITextBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0069 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0069_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("3A4F1CA0-5E5D-4D26-9067-E740BF657A9F")
                            ITextBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITextBoxAutomationPeer = __uuidof(ITextBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0070 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITextBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ITextBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0070 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0070_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITextBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("01F0C067-966B-4130-B872-469E42BD4A7F")
                            ITextBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITextBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ITextBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITextBoxAutomationPeerFactory = __uuidof(ITextBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITextBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITextBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0071 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IThumbAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IThumbAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0071 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0071_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IThumbAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("DC2949B5-B45E-4D6D-892F-D9422C950EFB")
                            IThumbAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IThumbAutomationPeer = __uuidof(IThumbAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0072 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IThumbAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IThumbAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0072 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0072_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IThumbAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("970743FF-AF41-4600-B55D-26D43DF860E1")
                            IThumbAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IThumb *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IThumbAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IThumbAutomationPeerFactory = __uuidof(IThumbAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIThumb *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIThumbAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0073 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0073 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0073_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C011F174-E89E-4790-BF9A-78EBB5F59E9F")
                            IToggleSwitchAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IToggleSwitchAutomationPeer = __uuidof(IToggleSwitchAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0074 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleSwitchAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IToggleSwitchAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0074 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0074_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("31F933E3-FEF8-4419-9DF5-D9EF7196EA34")
                            IToggleSwitchAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IToggleSwitch *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IToggleSwitchAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IToggleSwitchAutomationPeerFactory = __uuidof(IToggleSwitchAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleSwitch *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleSwitchAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0075 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0075 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0075_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("FB77EFBE-39EC-4508-8AC3-51A1424027D7")
                            IButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IButtonAutomationPeer = __uuidof(IButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0076 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0076 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0076_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("3FDB9F49-F4AB-4780-8644-03376299A175")
                            IButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IButtonAutomationPeerFactory = __uuidof(IButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0077 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0077 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0077_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("4FEF6DF2-289C-4C04-831B-5A668C6D7104")
                            IComboBoxItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxItemDataAutomationPeer = __uuidof(IComboBoxItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0078 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0078 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0078_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("14A8D4F6-469A-41BA-9D93-44A1A55DA872")
                            IComboBoxItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxItemDataAutomationPeerFactory = __uuidof(IComboBoxItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0079 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0079 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0079_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B0986175-00BC-4118-8A6F-16EE9C15D968")
                            IFlipViewItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewItemDataAutomationPeer = __uuidof(IFlipViewItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0080 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0080 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0080_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("3C864393-0AEA-4E78-BC11-B775CAC4114C")
                            IFlipViewItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewItemDataAutomationPeerFactory = __uuidof(IFlipViewItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0081 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0081 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0081_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("AA7AFCB1-0EDF-46D9-AA9E-0EB21D140097")
                            IHyperlinkButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IHyperlinkButtonAutomationPeer = __uuidof(IHyperlinkButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0082 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHyperlinkButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IHyperlinkButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0082 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0082_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("59BC1661-C182-49AF-9526-44B88E628455")
                            IHyperlinkButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHyperlinkButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IHyperlinkButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IHyperlinkButtonAutomationPeerFactory = __uuidof(IHyperlinkButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHyperlinkButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHyperlinkButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0083 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0083 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0083_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("FD7D5FEE-FDE0-482A-8084-DCEBBA5B9806")
                            IListBoxItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxItemDataAutomationPeer = __uuidof(IListBoxItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0084 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0084 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0084_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D7924E16-BD8D-4662-A995-20FF9A056093")
                            IListBoxItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IListBoxAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListBoxItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxItemDataAutomationPeerFactory = __uuidof(IListBoxItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0085 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IProgressBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0085 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0085_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("93F48F86-D840-4FB6-AC2F-5F779B854B0D")
                            IProgressBarAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IProgressBarAutomationPeer = __uuidof(IProgressBarAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0086 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IProgressBarAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0086_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IProgressBarAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("364679AB-B80F-41B4-8EEA-2F5251BC739C")
                            IProgressBarAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IProgressBar *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IProgressBarAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IProgressBarAutomationPeerFactory = __uuidof(IProgressBarAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIProgressBar *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIProgressBarAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0087 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0087_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("29E41AD5-A8AC-4E8A-83D8-09E37E054257")
                            IRepeatButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRepeatButtonAutomationPeer = __uuidof(IRepeatButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0088 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRepeatButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRepeatButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0088_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("6A6FF9D4-575E-4E60-BDD6-EC14419B4FF6")
                            IRepeatButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IRepeatButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRepeatButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRepeatButtonAutomationPeerFactory = __uuidof(IRepeatButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIRepeatButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRepeatButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0089 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IScrollBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IScrollBarAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0089 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0089_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("69E0C369-BBE7-41F2-87CA-AAD813FE550E")
                            IScrollBarAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IScrollBarAutomationPeer = __uuidof(IScrollBarAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0090 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IScrollBarAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IScrollBarAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0090 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0090_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IScrollBarAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E1302110-AFEB-4595-8E3D-EDC0844A2B21")
                            IScrollBarAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IScrollBar *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IScrollBarAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IScrollBarAutomationPeerFactory = __uuidof(IScrollBarAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIScrollBar *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollBarAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0091 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISelectorAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISelectorAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0091_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISelectorAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("162AC829-7115-43EC-B383-A7B71644069D")
                            ISelectorAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISelectorAutomationPeer = __uuidof(ISelectorAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0092 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISelectorAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISelectorAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0092_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISelectorAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("7B525646-829B-4DCC-BD52-5A8D0399387A")
                            ISelectorAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::ISelector *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISelectorAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISelectorAutomationPeerFactory = __uuidof(ISelectorAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CISelector *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISelectorAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0093 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISliderAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISliderAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0093_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISliderAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("EC30015A-D611-46D0-AE4F-6ECF27DFBAA5")
                            ISliderAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISliderAutomationPeer = __uuidof(ISliderAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0094 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISliderAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISliderAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0094_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISliderAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("971B8056-9A7A-4DF9-95FA-6F5C04C91CAC")
                            ISliderAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISlider *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISliderAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISliderAutomationPeerFactory = __uuidof(ISliderAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISlider *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISliderAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0095 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0095_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("62DBE6C5-BC0A-45BB-BF77-EA0F1502891F")
                            IToggleButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IToggleButtonAutomationPeer = __uuidof(IToggleButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0096 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IToggleButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0096_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C9218CC4-AD4B-4D03-A6A4-7D59E6360004")
                            IToggleButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::Primitives::IToggleButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IToggleButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IToggleButtonAutomationPeerFactory = __uuidof(IToggleButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CIToggleButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0097 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0097_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("EB15BC42-C0A9-46C6-AC24-B83DE429C733")
                            ICheckBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ICheckBoxAutomationPeer = __uuidof(ICheckBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0098 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ICheckBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ICheckBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0098_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B75C775D-EB8F-44EF-A27C-E26AC7DE8333")
                            ICheckBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ICheckBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ICheckBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ICheckBoxAutomationPeerFactory = __uuidof(ICheckBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CICheckBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CICheckBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0099 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0099_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("7EB40D0B-75C5-4263-BA6A-D4A54FB0F239")
                            IComboBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxAutomationPeer = __uuidof(IComboBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0100 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IComboBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IComboBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0100_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("098E5B0D-1B90-40B9-9BE3-B23267EB13CF")
                            IComboBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IComboBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IComboBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IComboBoxAutomationPeerFactory = __uuidof(IComboBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIComboBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIComboBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0101 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0101_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8EC0353A-4284-4B00-AEF8-A2688EA5E3C4")
                            IFlipViewAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewAutomationPeer = __uuidof(IFlipViewAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0102 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlipViewAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IFlipViewAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0102_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("4395AB0D-8D83-483C-88EB-E2617B0D293F")
                            IFlipViewAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IFlipView *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IFlipViewAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFlipViewAutomationPeerFactory = __uuidof(IFlipViewAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlipView *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlipViewAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0103 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0103_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8CD0D608-B402-4A6E-BD9A-343F8845EB32")
                            IListBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxAutomationPeer = __uuidof(IListBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0104 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0104_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E2362185-7DF6-49F7-8ABC-4C33F1A3D46E")
                            IListBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListBoxAutomationPeerFactory = __uuidof(IListBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0105 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0105_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("7E6A5ED8-0B30-4743-B102-DCDF548E3131")
                            IRadioButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRadioButtonAutomationPeer = __uuidof(IRadioButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0106 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IRadioButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IRadioButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0106_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("4940C4FD-3D88-49CA-8F31-924187AF0BFE")
                            IRadioButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IRadioButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IRadioButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRadioButtonAutomationPeerFactory = __uuidof(IRadioButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIRadioButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIRadioButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0107 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0107_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8B4ACFEB-89FA-4F13-84BE-35CA5B7C9590")
                            IAppBarAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarAutomationPeer = __uuidof(IAppBarAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0108 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0108_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8360F4E2-E396-4517-AF5D-F4CF34C54EDF")
                            IAppBarAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAppBar *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAppBarAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarAutomationPeerFactory = __uuidof(IAppBarAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBar *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0109 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0109_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("2F32C302-F99B-491D-9726-A5E181643EFA")
                            IAutoSuggestBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAutoSuggestBoxAutomationPeer = __uuidof(IAutoSuggestBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0110 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutoSuggestBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAutoSuggestBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0110_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("80046849-18E7-4475-B362-4BBD53D24562")
                            IAutoSuggestBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAutoSuggestBox *owner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutoSuggestBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutoSuggestBoxAutomationPeerFactory = __uuidof(IAutoSuggestBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAutoSuggestBox *owner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutoSuggestBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0111 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IDatePickerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IDatePickerAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0111_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D07D357F-A0B9-45DC-991A-76C505E7D0F5")
                            IDatePickerAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDatePickerAutomationPeer = __uuidof(IDatePickerAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0112 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IDatePickerAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IDatePickerAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0112_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IDatePickerAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E5667D19-9157-4436-9F4D-7FB99174B48E")
                            IDatePickerAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IDatePicker *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IDatePickerAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDatePickerAutomationPeerFactory = __uuidof(IDatePickerAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIDatePicker *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0113 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0113_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A01840B4-5FCA-456F-98EA-300EB40B585E")
                            IFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IFlyoutPresenterAutomationPeer = __uuidof(IFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0114 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFlyoutPresenterAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IFlyoutPresenterAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0114_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F350155F-8924-44C0-BA44-653FE79F1EFB")
                            IFlyoutPresenterAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IFlyoutPresenter *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IFlyoutPresenterAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFlyoutPresenterAutomationPeerFactory = __uuidof(IFlyoutPresenterAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIFlyoutPresenter *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0115 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0115_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("93EF2D07-346C-4166-A4BA-BC6A181E7F33")
                            IGridViewItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewItemAutomationPeer = __uuidof(IGridViewItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0116 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0116_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("FAFEC376-F22E-466D-913C-AE24CCDB160F")
                            IGridViewItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGridViewItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewItemAutomationPeerFactory = __uuidof(IGridViewItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0117 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHubAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IHubAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0117_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHubAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("4DDEE056-4EBC-4620-A05D-903E3C9A4EAD")
                            IHubAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IHubAutomationPeer = __uuidof(IHubAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0118 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHubAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IHubAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0118_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHubAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C762D43F-79DD-43EE-8777-8D08B39AA065")
                            IHubAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHub *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IHubAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IHubAutomationPeerFactory = __uuidof(IHubAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHub *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0119 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHubSectionAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IHubSectionAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0119_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("16D91FF7-7431-4D82-83CE-CFA3192B0F18")
                            IHubSectionAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IHubSectionAutomationPeer = __uuidof(IHubSectionAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0120 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IHubSectionAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IHubSectionAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0120_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IHubSectionAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C68E27E8-17EC-4329-91AE-2D0B2339D498")
                            IHubSectionAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IHubSection *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IHubSectionAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IHubSectionAutomationPeerFactory = __uuidof(IHubSectionAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIHubSection *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIHubSectionAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0121 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0121_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("7CB8B732-C1F0-4A3C-BC14-85DD48DEDB85")
                            IListViewBaseHeaderItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewBaseHeaderItemAutomationPeer = __uuidof(IListViewBaseHeaderItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0122 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewBaseHeaderItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewBaseHeaderItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0122_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("40EC995F-D631-4004-832E-6D8643E51561")
                            IListViewBaseHeaderItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewBaseHeaderItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseHeaderItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewBaseHeaderItemAutomationPeerFactory = __uuidof(IListViewBaseHeaderItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBaseHeaderItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0123 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0123_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("CA114E70-A16D-4D09-A1CF-1856EF98A9EC")
                            IListViewItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewItemAutomationPeer = __uuidof(IListViewItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0124 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0124_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("C47DFBC0-FACC-4024-A73B-17EC4E662654")
                            IListViewItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewItemAutomationPeerFactory = __uuidof(IListViewItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0125 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMediaElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IMediaElementAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0125_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMediaElementAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("BA0B9FC2-A6E2-41A5-B17A-D1594613EFBA")
                            IMediaElementAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IMediaElementAutomationPeer = __uuidof(IMediaElementAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0126 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMediaElementAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IMediaElementAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0126_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMediaElementAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B2AD3B28-7575-4173-9BC7-80367A164ED2")
                            IMediaElementAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMediaElement *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IMediaElementAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IMediaElementAutomationPeerFactory = __uuidof(IMediaElementAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMediaElement *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMediaElementAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0127 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0127_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("1FC19462-21DF-456E-AA11-8FAC6B4B2AF6")
                            IMenuFlyoutItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IMenuFlyoutItemAutomationPeer = __uuidof(IMenuFlyoutItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0128 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMenuFlyoutItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IMenuFlyoutItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0128_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D08BFCB8-20D1-45D8-A2C2-2F130DF714E0")
                            IMenuFlyoutItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IMenuFlyoutItemAutomationPeerFactory = __uuidof(IMenuFlyoutItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0129 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0129_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D985F259-1B09-4E88-88FD-421750DC6B45")
                            IScrollViewerAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IScrollViewerAutomationPeer = __uuidof(IScrollViewerAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0130 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IScrollViewerAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IScrollViewerAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0130_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("270DFF7D-D96D-48F9-A36A-C252AA9C4670")
                            IScrollViewerAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IScrollViewer *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IScrollViewerAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IScrollViewerAutomationPeerFactory = __uuidof(IScrollViewerAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIScrollViewer *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIScrollViewerAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0131 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISearchBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ISearchBoxAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0131_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISearchBoxAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("854011A4-18A6-4F30-939B-8871AFA3F5E9")
                            ISearchBoxAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISearchBoxAutomationPeer = __uuidof(ISearchBoxAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0132 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ISearchBoxAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ISearchBoxAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0132_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ISearchBoxAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B3C01430-7FAA-41BB-8E91-7C761C5267F1")
                            ISearchBoxAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ISearchBoxAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISearchBoxAutomationPeerFactory = __uuidof(ISearchBoxAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CISearchBoxAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0133 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITimePickerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ITimePickerAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0133_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A43D44EF-3285-4DF7-B4A4-E4CDF36A3A17")
                            ITimePickerAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITimePickerAutomationPeer = __uuidof(ITimePickerAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0134 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITimePickerAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.ITimePickerAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0134_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITimePickerAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("978F6671-47F8-40A7-9E21-68128B16B4FD")
                            ITimePickerAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ITimePicker *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::ITimePickerAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITimePickerAutomationPeerFactory = __uuidof(ITimePickerAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CITimePicker *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0135 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0135_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("6B57EAFE-6AF1-4903-8373-3437BF352345")
                            IToggleMenuFlyoutItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IToggleMenuFlyoutItemAutomationPeer = __uuidof(IToggleMenuFlyoutItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0136 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IToggleMenuFlyoutItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IToggleMenuFlyoutItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0136_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("94364B77-8F6C-4837-AAE3-94D010D8D162")
                            IToggleMenuFlyoutItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IToggleMenuFlyoutItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IToggleMenuFlyoutItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IToggleMenuFlyoutItemAutomationPeerFactory = __uuidof(IToggleMenuFlyoutItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIToggleMenuFlyoutItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIToggleMenuFlyoutItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0137 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0137_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E3DCEF3A-E08A-48E7-B23A-2BE5B66E474E")
                            IGridViewHeaderItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewHeaderItemAutomationPeer = __uuidof(IGridViewHeaderItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0138 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewHeaderItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewHeaderItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0138_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("2C80B4D2-FFC2-4157-88DD-59CD92E39715")
                            IGridViewHeaderItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGridViewHeaderItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IGridViewHeaderItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewHeaderItemAutomationPeerFactory = __uuidof(IGridViewHeaderItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridViewHeaderItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0139 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0139_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F3F4868F-29D4-4094-8C54-EA61A88294A4")
                            IGridViewItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewItemDataAutomationPeer = __uuidof(IGridViewItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0140 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0140_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A65E7A88-770D-402C-996F-67506AF2A4AF")
                            IGridViewItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IGridViewAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IGridViewItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewItemDataAutomationPeerFactory = __uuidof(IGridViewItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0141 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0141_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("67AB1E4B-AD61-4C88-BA45-0F3A8D061F8F")
                            IListViewHeaderItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewHeaderItemAutomationPeer = __uuidof(IListViewHeaderItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0142 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewHeaderItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewHeaderItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0142_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("07668694-2CA5-4BE4-A8B9-592D48F76087")
                            IListViewHeaderItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewHeaderItem *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewHeaderItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewHeaderItemAutomationPeerFactory = __uuidof(IListViewHeaderItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewHeaderItem *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewHeaderItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0143 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0143_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("15A8D7FD-D7A5-4A6C-963C-6F7CE464671A")
                            IListViewItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewItemDataAutomationPeer = __uuidof(IListViewItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0144 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0144_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D0DB12BB-D715-4523-ACC0-1E1072D8E32B")
                            IListViewItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer *parent,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewItemDataAutomationPeerFactory = __uuidof(IListViewItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer *parent,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0145 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0145_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E244A871-FCBB-48FC-8A93-41EA134B53CE")
                            IMenuFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IMenuFlyoutPresenterAutomationPeer = __uuidof(IMenuFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0146 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMenuFlyoutPresenterAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IMenuFlyoutPresenterAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0146_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("07B5172D-761D-452B-9E6D-FA2A8BE0AD26")
                            IMenuFlyoutPresenterAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IMenuFlyoutPresenter *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IMenuFlyoutPresenterAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IMenuFlyoutPresenterAutomationPeerFactory = __uuidof(IMenuFlyoutPresenterAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIMenuFlyoutPresenter *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMenuFlyoutPresenterAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0147 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0147_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("443262B2-4F6D-4B76-9D2E-3EFF777E8864")
                            IAppBarButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarButtonAutomationPeer = __uuidof(IAppBarButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0148 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0148_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("AEF0342A-ACB7-42DC-97E3-847071865FD6")
                            IAppBarButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAppBarButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAppBarButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarButtonAutomationPeerFactory = __uuidof(IAppBarButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0149 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0149_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8464EFAD-9655-4AFF-9550-63AE9EC8FE9C")
                            IAppBarToggleButtonAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarToggleButtonAutomationPeer = __uuidof(IAppBarToggleButtonAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0150 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAppBarToggleButtonAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAppBarToggleButtonAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0150_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D6F9139D-02C1-4221-9591-7D4EFEB74701")
                            IAppBarToggleButtonAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IAppBarToggleButton *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAppBarToggleButtonAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAppBarToggleButtonAutomationPeerFactory = __uuidof(IAppBarToggleButtonAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIAppBarToggleButton *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAppBarToggleButtonAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0151 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0151_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("87EC7649-B83D-4E55-9AFD-BD835E748F5C")
                            IListViewBaseAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewBaseAutomationPeer = __uuidof(IListViewBaseAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0152 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewBaseAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0152_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("70D3C2BE-8950-4647-9362-FD002F8FF82E")
                            IListViewBaseAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewBase *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewBaseAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewBaseAutomationPeerFactory = __uuidof(IListViewBaseAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewBaseAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0153 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0153_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("1C4401A4-D951-49CA-8F82-C7F3C60681B0")
                            IGridViewAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewAutomationPeer = __uuidof(IGridViewAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0154 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IGridViewAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IGridViewAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0154_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IGridViewAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8ACA59DD-22A7-4800-894B-C1F485F38953")
                            IGridViewAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IGridView *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IGridViewAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IGridViewAutomationPeerFactory = __uuidof(IGridViewAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIGridView *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIGridViewAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0155 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListViewAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0155_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("73CECC87-C0DC-4260-9148-75E9864A7230")
                            IListViewAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListViewAutomationPeer = __uuidof(IListViewAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0156 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListViewAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IListViewAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0156_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListViewAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("65F39174-EAA2-4E44-8BE6-4CCA28CD0288")
                            IListViewAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListView *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IListViewAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IListViewAutomationPeerFactory = __uuidof(IListViewAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListView *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListViewAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0157 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0157_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("35AAC87A-62EE-4D3E-A24C-2BC8432D68B7")
                            IAutomationPeer : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EventsSource( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EventsSource( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetPattern( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::PatternInterface patternInterface,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE RaiseAutomationEvent( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::AutomationEvents eventId) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE RaisePropertyChangedEvent( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::IAutomationProperty *automationProperty,
                                    /* [in] */ __RPC__in_opt IInspectable *oldValue,
                                    /* [in] */ __RPC__in_opt IInspectable *newValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAcceleratorKey( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAccessKey( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAutomationControlType( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationControlType *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAutomationId( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetBoundingRectangle( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetChildren( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetClassName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetClickablePoint( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetHelpText( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetItemStatus( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetItemType( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLabeledBy( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLocalizedControlType( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetOrientation( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationOrientation *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE HasKeyboardFocus( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsContentElement( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsControlElement( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsEnabled( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsKeyboardFocusable( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsOffscreen( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsPassword( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsRequiredForForm( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetFocus( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetParent( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE InvalidatePeer( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetPeerFromPoint( 
                                    /* [in] */ ABI::Windows::Foundation::Point point,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLiveSetting( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationLiveSetting *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeer = __uuidof(IAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventsSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventsSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetPattern )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CPatternInterface patternInterface,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *RaiseAutomationEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationEvents eventId);
        
        HRESULT ( STDMETHODCALLTYPE *RaisePropertyChangedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CIAutomationProperty *automationProperty,
            /* [in] */ __RPC__in_opt IInspectable *oldValue,
            /* [in] */ __RPC__in_opt IInspectable *newValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAcceleratorKey )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAccessKey )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAutomationControlType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationControlType *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAutomationId )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetBoundingRectangle )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetChildren )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetClickablePoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelpText )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemStatus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLabeledBy )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalizedControlType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetOrientation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *HasKeyboardFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsContentElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsControlElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsKeyboardFocusable )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsOffscreen )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsPassword )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsRequiredForForm )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetParent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidatePeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPeerFromPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLiveSetting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_get_EventsSource(This,value)	\
    ( (This)->lpVtbl -> get_EventsSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_put_EventsSource(This,value)	\
    ( (This)->lpVtbl -> put_EventsSource(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetPattern(This,patternInterface,returnValue)	\
    ( (This)->lpVtbl -> GetPattern(This,patternInterface,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaiseAutomationEvent(This,eventId)	\
    ( (This)->lpVtbl -> RaiseAutomationEvent(This,eventId) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_RaisePropertyChangedEvent(This,automationProperty,oldValue,newValue)	\
    ( (This)->lpVtbl -> RaisePropertyChangedEvent(This,automationProperty,oldValue,newValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAcceleratorKey(This,returnValue)	\
    ( (This)->lpVtbl -> GetAcceleratorKey(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAccessKey(This,returnValue)	\
    ( (This)->lpVtbl -> GetAccessKey(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAutomationControlType(This,returnValue)	\
    ( (This)->lpVtbl -> GetAutomationControlType(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetAutomationId(This,returnValue)	\
    ( (This)->lpVtbl -> GetAutomationId(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetBoundingRectangle(This,returnValue)	\
    ( (This)->lpVtbl -> GetBoundingRectangle(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetChildren(This,returnValue)	\
    ( (This)->lpVtbl -> GetChildren(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetClassName(This,returnValue)	\
    ( (This)->lpVtbl -> GetClassName(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetClickablePoint(This,returnValue)	\
    ( (This)->lpVtbl -> GetClickablePoint(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetHelpText(This,returnValue)	\
    ( (This)->lpVtbl -> GetHelpText(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetItemStatus(This,returnValue)	\
    ( (This)->lpVtbl -> GetItemStatus(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetItemType(This,returnValue)	\
    ( (This)->lpVtbl -> GetItemType(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLabeledBy(This,returnValue)	\
    ( (This)->lpVtbl -> GetLabeledBy(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLocalizedControlType(This,returnValue)	\
    ( (This)->lpVtbl -> GetLocalizedControlType(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetName(This,returnValue)	\
    ( (This)->lpVtbl -> GetName(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetOrientation(This,returnValue)	\
    ( (This)->lpVtbl -> GetOrientation(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_HasKeyboardFocus(This,returnValue)	\
    ( (This)->lpVtbl -> HasKeyboardFocus(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsContentElement(This,returnValue)	\
    ( (This)->lpVtbl -> IsContentElement(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsControlElement(This,returnValue)	\
    ( (This)->lpVtbl -> IsControlElement(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsEnabled(This,returnValue)	\
    ( (This)->lpVtbl -> IsEnabled(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsKeyboardFocusable(This,returnValue)	\
    ( (This)->lpVtbl -> IsKeyboardFocusable(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsOffscreen(This,returnValue)	\
    ( (This)->lpVtbl -> IsOffscreen(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsPassword(This,returnValue)	\
    ( (This)->lpVtbl -> IsPassword(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_IsRequiredForForm(This,returnValue)	\
    ( (This)->lpVtbl -> IsRequiredForForm(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_SetFocus(This)	\
    ( (This)->lpVtbl -> SetFocus(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetParent(This,returnValue)	\
    ( (This)->lpVtbl -> GetParent(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_InvalidatePeer(This)	\
    ( (This)->lpVtbl -> InvalidatePeer(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetPeerFromPoint(This,point,returnValue)	\
    ( (This)->lpVtbl -> GetPeerFromPoint(This,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_GetLiveSetting(This,returnValue)	\
    ( (This)->lpVtbl -> GetLiveSetting(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0158 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0158_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("BEA93E67-DBEE-4F7B-AF0D-A79AAE5333BF")
                            IAutomationPeerOverrides : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE GetPatternCore( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::PatternInterface patternInterface,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAcceleratorKeyCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAccessKeyCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAutomationControlTypeCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationControlType *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAutomationIdCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetBoundingRectangleCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetChildrenCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetClassNameCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetClickablePointCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetHelpTextCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetItemStatusCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetItemTypeCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLabeledByCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLocalizedControlTypeCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetNameCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetOrientationCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationOrientation *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE HasKeyboardFocusCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsContentElementCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsControlElementCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsEnabledCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsKeyboardFocusableCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsOffscreenCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsPasswordCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE IsRequiredForFormCore( 
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetFocusCore( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetPeerFromPointCore( 
                                    /* [in] */ ABI::Windows::Foundation::Point point,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLiveSettingCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationLiveSetting *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerOverrides = __uuidof(IAutomationPeerOverrides);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetPatternCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CPatternInterface patternInterface,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAcceleratorKeyCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAccessKeyCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAutomationControlTypeCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationControlType *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAutomationIdCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetBoundingRectangleCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetChildrenCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetClassNameCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetClickablePointCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetHelpTextCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemStatusCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetItemTypeCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLabeledByCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalizedControlTypeCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetNameCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetOrientationCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *HasKeyboardFocusCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsContentElementCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsControlElementCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsEnabledCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsKeyboardFocusableCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsOffscreenCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsPasswordCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *IsRequiredForFormCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetFocusCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetPeerFromPointCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLiveSettingCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetPatternCore(This,patternInterface,returnValue)	\
    ( (This)->lpVtbl -> GetPatternCore(This,patternInterface,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAcceleratorKeyCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetAcceleratorKeyCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAccessKeyCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetAccessKeyCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAutomationControlTypeCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetAutomationControlTypeCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetAutomationIdCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetAutomationIdCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetBoundingRectangleCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetBoundingRectangleCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetChildrenCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetChildrenCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetClassNameCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetClassNameCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetClickablePointCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetClickablePointCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetHelpTextCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetHelpTextCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetItemStatusCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetItemStatusCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetItemTypeCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetItemTypeCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLabeledByCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLabeledByCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLocalizedControlTypeCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLocalizedControlTypeCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetNameCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetNameCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetOrientationCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetOrientationCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_HasKeyboardFocusCore(This,returnValue)	\
    ( (This)->lpVtbl -> HasKeyboardFocusCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsContentElementCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsContentElementCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsControlElementCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsControlElementCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsEnabledCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsEnabledCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsKeyboardFocusableCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsKeyboardFocusableCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsOffscreenCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsOffscreenCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsPasswordCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsPasswordCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_IsRequiredForFormCore(This,returnValue)	\
    ( (This)->lpVtbl -> IsRequiredForFormCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_SetFocusCore(This)	\
    ( (This)->lpVtbl -> SetFocusCore(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetPeerFromPointCore(This,point,returnValue)	\
    ( (This)->lpVtbl -> GetPeerFromPointCore(This,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_GetLiveSettingCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLiveSettingCore(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0159 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0159_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerProtected */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F4B40E52-642F-4629-A54A-EA5D2349C448")
                            IAutomationPeerProtected : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE PeerFromProvider( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Provider::IIRawElementProviderSimple *provider,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE ProviderFromPeer( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *peer,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Provider::IIRawElementProviderSimple **returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerProtected = __uuidof(IAutomationPeerProtected);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *PeerFromProvider )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple *provider,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ProviderFromPeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *peer,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CProvider_CIIRawElementProviderSimple **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtectedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_PeerFromProvider(This,provider,returnValue)	\
    ( (This)->lpVtbl -> PeerFromProvider(This,provider,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_ProviderFromPeer(This,peer,returnValue)	\
    ( (This)->lpVtbl -> ProviderFromPeer(This,peer,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerProtected_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0160 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerStatics[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0160_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("562F7FB0-A331-4A9C-9DEC-BFB7586FFFFF")
                            IAutomationPeerStatics : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE ListenerExists( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::AutomationEvents eventId,
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerStatics = __uuidof(IAutomationPeerStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ListenerExists )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationEvents eventId,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_ListenerExists(This,eventId,returnValue)	\
    ( (This)->lpVtbl -> ListenerExists(This,eventId,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0161 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0161_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("20C27545-A88B-43C8-BC24-CEA9DAFD04A3")
                            IAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerFactory = __uuidof(IAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0162 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeer2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0162_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("EA1F89C7-EBF5-4AB8-88F7-680D821DAC61")
                            IAutomationPeer2 : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeer2 = __uuidof(IAutomationPeer2);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0163 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0163_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerOverrides2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("2603682A-9DA6-4023-B496-496E5EF228D2")
                            IAutomationPeerOverrides2 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE ShowContextMenuCore( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetControlledPeersCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerOverrides2 = __uuidof(IAutomationPeerOverrides2);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ShowContextMenuCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetControlledPeersCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_ShowContextMenuCore(This)	\
    ( (This)->lpVtbl -> ShowContextMenuCore(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_GetControlledPeersCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetControlledPeersCore(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0164 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeer3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0164_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D3CFB977-0084-41D7-A221-28158D3BC32C")
                            IAutomationPeer3 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE Navigate( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::AutomationNavigationDirection direction,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetElementFromPoint( 
                                    /* [in] */ ABI::Windows::Foundation::Point pointInWindowCoordinates,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetFocusedElement( 
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE ShowContextMenu( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetControlledPeers( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAnnotations( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetParent( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *peer) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE RaiseTextEditTextChangedEvent( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::AutomationTextEditChangeType automationTextEditChangeType,
                                    /* [in] */ __RPC__in_opt __FIVectorView_1_HSTRING *changedData) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetPositionInSet( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetSizeOfSet( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLevel( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE RaiseStructureChangedEvent( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::AutomationStructureChangeType structureChangeType,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *child) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeer3 = __uuidof(IAutomationPeer3);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Navigate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection direction,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementFromPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint pointInWindowCoordinates,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetFocusedElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ShowContextMenu )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetControlledPeers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAnnotations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetParent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *peer);
        
        HRESULT ( STDMETHODCALLTYPE *RaiseTextEditTextChangedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CAutomationTextEditChangeType automationTextEditChangeType,
            /* [in] */ __RPC__in_opt __FIVectorView_1_HSTRING *changedData);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionInSet )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizeOfSet )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *RaiseStructureChangedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType structureChangeType,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *child);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_Navigate(This,direction,returnValue)	\
    ( (This)->lpVtbl -> Navigate(This,direction,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetElementFromPoint(This,pointInWindowCoordinates,returnValue)	\
    ( (This)->lpVtbl -> GetElementFromPoint(This,pointInWindowCoordinates,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetFocusedElement(This,returnValue)	\
    ( (This)->lpVtbl -> GetFocusedElement(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_ShowContextMenu(This)	\
    ( (This)->lpVtbl -> ShowContextMenu(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetControlledPeers(This,returnValue)	\
    ( (This)->lpVtbl -> GetControlledPeers(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetAnnotations(This,returnValue)	\
    ( (This)->lpVtbl -> GetAnnotations(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_SetParent(This,peer)	\
    ( (This)->lpVtbl -> SetParent(This,peer) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_RaiseTextEditTextChangedEvent(This,automationTextEditChangeType,changedData)	\
    ( (This)->lpVtbl -> RaiseTextEditTextChangedEvent(This,automationTextEditChangeType,changedData) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetPositionInSet(This,returnValue)	\
    ( (This)->lpVtbl -> GetPositionInSet(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetSizeOfSet(This,returnValue)	\
    ( (This)->lpVtbl -> GetSizeOfSet(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_GetLevel(This,returnValue)	\
    ( (This)->lpVtbl -> GetLevel(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_RaiseStructureChangedEvent(This,structureChangeType,child)	\
    ( (This)->lpVtbl -> RaiseStructureChangedEvent(This,structureChangeType,child) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0165 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0165_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerOverrides3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B6F0C4AD-4D39-49E6-BB91-D924EEFD8538")
                            IAutomationPeerOverrides3 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE NavigateCore( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::Peers::AutomationNavigationDirection direction,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetElementFromPointCore( 
                                    /* [in] */ ABI::Windows::Foundation::Point pointInWindowCoordinates,
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetFocusedElementCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetAnnotationsCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetPositionInSetCore( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetSizeOfSetCore( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLevelCore( 
                                    /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerOverrides3 = __uuidof(IAutomationPeerOverrides3);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *NavigateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection direction,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetElementFromPointCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint pointInWindowCoordinates,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetFocusedElementCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAnnotationsCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CAutomation__CPeers__CAutomationPeerAnnotation **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetPositionInSetCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetSizeOfSetCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLevelCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3 * This,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_NavigateCore(This,direction,returnValue)	\
    ( (This)->lpVtbl -> NavigateCore(This,direction,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetElementFromPointCore(This,pointInWindowCoordinates,returnValue)	\
    ( (This)->lpVtbl -> GetElementFromPointCore(This,pointInWindowCoordinates,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetFocusedElementCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetFocusedElementCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetAnnotationsCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetAnnotationsCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetPositionInSetCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetPositionInSetCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetSizeOfSetCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetSizeOfSetCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_GetLevelCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLevelCore(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0166 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerStatics3[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerStatics3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0166_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerStatics3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("572C5714-7F87-4271-819F-6CF4C4D022D0")
                            IAutomationPeerStatics3 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE GenerateRawElementProviderRuntimeId( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::RawElementProviderRuntimeId *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerStatics3 = __uuidof(IAutomationPeerStatics3);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GenerateRawElementProviderRuntimeId )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_GenerateRawElementProviderRuntimeId(This,returnValue)	\
    ( (This)->lpVtbl -> GenerateRawElementProviderRuntimeId(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerStatics3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0167 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeer4";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0167_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer4 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("761CE752-73C1-4F44-BE75-43C49EC0D4D5")
                            IAutomationPeer4 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE GetLandmarkType( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationLandmarkType *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLocalizedLandmarkType( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeer4 = __uuidof(IAutomationPeer4);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetLandmarkType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalizedLandmarkType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_GetLandmarkType(This,returnValue)	\
    ( (This)->lpVtbl -> GetLandmarkType(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_GetLocalizedLandmarkType(This,returnValue)	\
    ( (This)->lpVtbl -> GetLocalizedLandmarkType(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer4_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0168 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0168_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerOverrides4 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B186CDA2-5D46-4BCD-A811-269AD15B3AEE")
                            IAutomationPeerOverrides4 : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE GetLandmarkTypeCore( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::Peers::AutomationLandmarkType *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetLocalizedLandmarkTypeCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerOverrides4 = __uuidof(IAutomationPeerOverrides4);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetLandmarkTypeCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetLocalizedLandmarkTypeCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4 * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_GetLandmarkTypeCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLandmarkTypeCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_GetLocalizedLandmarkTypeCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetLocalizedLandmarkTypeCore(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides4_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0169 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0169_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("0C456061-52CF-43FA-82F8-07F137351E5A")
                            IAutomationPeerAnnotation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Type( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Automation::AnnotationType *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Type( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::AnnotationType value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Peer( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Peer( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerAnnotation = __uuidof(IAutomationPeerAnnotation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Type )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Peer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Peer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_get_Type(This,value)	\
    ( (This)->lpVtbl -> get_Type(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_put_Type(This,value)	\
    ( (This)->lpVtbl -> put_Type(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_get_Peer(This,value)	\
    ( (This)->lpVtbl -> get_Peer(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_put_Peer(This,value)	\
    ( (This)->lpVtbl -> put_Peer(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0170 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationStatics[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0170_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("8809A87D-09B2-4D45-B78B-1D3B3B09F661")
                            IAutomationPeerAnnotationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TypeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PeerProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerAnnotationStatics = __uuidof(IAutomationPeerAnnotationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TypeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PeerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_get_TypeProperty(This,value)	\
    ( (This)->lpVtbl -> get_TypeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_get_PeerProperty(This,value)	\
    ( (This)->lpVtbl -> get_PeerProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0171 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotationFactory[] = L"Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0171_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotationFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F59C439E-C65B-43CD-9009-03FC023363A7")
                            IAutomationPeerAnnotationFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::AnnotationType type,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **instance) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE CreateWithPeerParameter( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Automation::AnnotationType type,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer *peer,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeerAnnotation **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IAutomationPeerAnnotationFactory = __uuidof(IAutomationPeerAnnotationFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType type,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **instance);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWithPeerParameter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CAutomation_CAnnotationType type,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer *peer,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_CreateInstance(This,type,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,type,instance) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_CreateWithPeerParameter(This,type,peer,instance)	\
    ( (This)->lpVtbl -> CreateWithPeerParameter(This,type,peer,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotationFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0172 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0172 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0172_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B90AD781-BFEB-4451-BD47-9F3A63EBD24A")
                            IFrameworkElementAutomationPeer : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Owner( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFrameworkElementAutomationPeer = __uuidof(IFrameworkElementAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_get_Owner(This,value)	\
    ( (This)->lpVtbl -> get_Owner(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0173 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerStatics[] = L"Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0173_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("B9C0B997-2820-44A1-A5A8-9B801EDC269E")
                            IFrameworkElementAutomationPeerStatics : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE FromElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE CreatePeerForElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFrameworkElementAutomationPeerStatics = __uuidof(IFrameworkElementAutomationPeerStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FromElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreatePeerForElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_FromElement(This,element,returnValue)	\
    ( (This)->lpVtbl -> FromElement(This,element,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_CreatePeerForElement(This,element,returnValue)	\
    ( (This)->lpVtbl -> CreatePeerForElement(This,element,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0174 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IFrameworkElementAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0174_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("0DB9B8BC-B812-48E3-AF1F-DBC57600C325")
                            IFrameworkElementAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *owner,
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IFrameworkElementAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFrameworkElementAutomationPeerFactory = __uuidof(IFrameworkElementAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *owner,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_CreateInstanceWithOwner(This,owner,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIFrameworkElementAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0175 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IMapControlAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IMapControlAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0175_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IMapControlAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("425BEEE4-F2E8-4BCB-9382-5DFDD11FE45F")
                            IMapControlAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IMapControlAutomationPeer = __uuidof(IMapControlAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIMapControlAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0176 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ILoopingSelectorItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ILoopingSelectorItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0176_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ILoopingSelectorItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("EF567E32-7CD2-4D32-9590-1F588D5EF38D")
                            ILoopingSelectorItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILoopingSelectorItemDataAutomationPeer = __uuidof(ILoopingSelectorItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0177 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IDatePickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IDatePickerFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0177_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IDatePickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("752AED38-C2BF-4880-82B2-A6C05E90C135")
                            IDatePickerFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDatePickerFlyoutPresenterAutomationPeer = __uuidof(IDatePickerFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIDatePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0178 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IListPickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IListPickerFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0178_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IListPickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("56DFDC58-2395-4060-8047-8EA463698A24")
                            IListPickerFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IListPickerFlyoutPresenterAutomationPeer = __uuidof(IListPickerFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIListPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0179 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ILoopingSelectorAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ILoopingSelectorAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0179_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ILoopingSelectorAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("50B406CA-BAE9-4816-8A3A-0CB4F96478A2")
                            ILoopingSelectorAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILoopingSelectorAutomationPeer = __uuidof(ILoopingSelectorAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0180 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ILoopingSelectorItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ILoopingSelectorItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0180_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ILoopingSelectorItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("D3FA68BF-04CF-4F4C-8D3E-4780A19D4788")
                            ILoopingSelectorItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILoopingSelectorItemAutomationPeer = __uuidof(ILoopingSelectorItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CILoopingSelectorItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0181 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IPickerFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0181_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("28414BF7-8382-4EAE-93C1-D6F035AA8155")
                            IPickerFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IPickerFlyoutPresenterAutomationPeer = __uuidof(IPickerFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0182 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IPivotItemAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0182_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("1A4241AD-5D55-4D27-B40F-2D37506FBE78")
                            IPivotItemAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IPivotItemAutomationPeer = __uuidof(IPivotItemAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0183 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotItemAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IPivotItemAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0183_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("F2810471-183F-416B-B41A-1E5A958A91F4")
                            IPivotItemAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IPivotItem *owner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPivotItemAutomationPeerFactory = __uuidof(IPivotItemAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivotItem *owner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_CreateInstanceWithOwner(This,owner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0184 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0184_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("A2A3B788-EA1D-48B7-88EE-F08B6AA07FEE")
                            IPivotItemDataAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IPivotItemDataAutomationPeer = __uuidof(IPivotItemDataAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0185 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotItemDataAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IPivotItemDataAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0185_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("517A2480-D3B6-412E-82B6-94A0A84C13B0")
                            IPivotItemDataAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithParentAndItem( 
                                    /* [in] */ __RPC__in_opt IInspectable *item,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Automation::Peers::IPivotAutomationPeer *parent,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IPivotItemDataAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPivotItemDataAutomationPeerFactory = __uuidof(IPivotItemDataAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithParentAndItem )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *item,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer *parent,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_CreateInstanceWithParentAndItem(This,item,parent,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithParentAndItem(This,item,parent,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotItemDataAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0186 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_ITimePickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ITimePickerFlyoutPresenterAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::ITimePickerFlyoutPresenterAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("DA93EE27-82F1-4701-8706-BE297BF06043")
                            ITimePickerFlyoutPresenterAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITimePickerFlyoutPresenterAutomationPeer = __uuidof(ITimePickerFlyoutPresenterAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CITimePickerFlyoutPresenterAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0187 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.IPivotAutomationPeer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0187_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotAutomationPeer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("E715A8F8-3B9D-402C-81E2-6E912EF58981")
                            IPivotAutomationPeer : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IPivotAutomationPeer = __uuidof(IPivotAutomationPeer);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0188 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Automation_Peers_IPivotAutomationPeerFactory[] = L"Windows.UI.Xaml.Automation.Peers.IPivotAutomationPeerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0188_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Automation::Peers::IPivotAutomationPeerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Automation {
                        namespace Peers {
                            
                            MIDL_INTERFACE("3EFE0F94-0C91-4341-B9AC-1B56B4E6B84F")
                            IPivotAutomationPeerFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithOwner( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IPivot *owner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IPivotAutomationPeer **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPivotAutomationPeerFactory = __uuidof(IPivotAutomationPeerFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithOwner )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIPivot *owner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_CreateInstanceWithOwner(This,owner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithOwner(This,owner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIPivotAutomationPeerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0189 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.AutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation[] = L"Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_FrameworkElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ButtonBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_CaptureElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_CaptureElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_CaptureElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.CaptureElementAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ComboBoxItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ComboBoxItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_FlipViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.FlipViewItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GroupItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_GroupItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.GroupItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ImageAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ImageAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ImageAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListBoxItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListBoxItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_MediaTransportControlsAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.MediaTransportControlsAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_PasswordBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.PasswordBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ProgressRingAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RichEditBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RichEditBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RichTextBlockAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RichTextBlockAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RichTextBlockOverflowAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RichTextBlockOverflowAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SettingsFlyoutAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SettingsFlyoutAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SettingsFlyoutAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SettingsFlyoutAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TextBlockAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_TextBlockAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.TextBlockAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TextBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_TextBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.TextBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ThumbAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ThumbAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ThumbAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AutoSuggestBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.AutoSuggestBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_DatePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_DatePickerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.DatePickerAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_FlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.FlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_GridViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.GridViewItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HubAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_HubAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.HubAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewBaseHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewBaseHeaderItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MediaElementAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MediaElementAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_MediaElementAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.MediaElementAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SearchBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SearchBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SearchBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SearchBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TimePickerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_TimePickerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.TimePickerAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_GridViewHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.GridViewHeaderItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewHeaderItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewHeaderItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_HyperlinkButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.HyperlinkButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RepeatButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RepeatButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_MenuFlyoutItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.MenuFlyoutItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AppBarButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.AppBarButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ItemsControlAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_MenuFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.MenuFlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RangeBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ProgressBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ScrollBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ScrollBarAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SliderAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SliderAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SliderAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_HubSectionAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_HubSectionAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.HubSectionAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ScrollViewerAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ScrollViewerAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SelectorAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SelectorAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_FlipViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.FlipViewAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewBaseAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_GridViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.GridViewAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SemanticZoomAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SemanticZoomAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ToggleSwitchAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ToggleSwitchAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ToggleButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ToggleButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_CheckBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.CheckBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_RadioButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.RadioButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AppBarAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.AppBarAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ToggleMenuFlyoutItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ToggleMenuFlyoutItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_AppBarToggleButtonAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.AppBarToggleButtonAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ComboBoxAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ComboBoxAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_SelectorItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.SelectorItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ComboBoxItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ComboBoxItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_FlipViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.FlipViewItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListBoxItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListBoxItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_GridViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.GridViewItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListViewItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListViewItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MapControlAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_MapControlAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_MapControlAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.MapControlAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_DatePickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.DatePickerFlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_ListPickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.ListPickerFlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_LoopingSelectorAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.LoopingSelectorAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_LoopingSelectorItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.LoopingSelectorItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_PickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.PickerFlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotItemAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_PivotItemAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.PivotItemAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_PivotItemDataAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.PivotItemDataAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_TimePickerFlyoutPresenterAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.TimePickerFlyoutPresenterAutomationPeer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Automation_Peers_PivotAutomationPeer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Automation_Peers_PivotAutomationPeer[] = L"Windows.UI.Xaml.Automation.Peers.PivotAutomationPeer";
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0189 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Eautomation2Epeers_0000_0189_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


