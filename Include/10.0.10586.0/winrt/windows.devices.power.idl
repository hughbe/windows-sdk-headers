//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.System.Power.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Esystem2Epower_h__)")
cpp_quote("#include <Windows.System.Power.h>")
cpp_quote("#endif // !defined(__windows2Esystem2Epower_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace System
    {
        namespace Power
        {
            typedef enum BatteryStatus BatteryStatus;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Power
        {
            interface IBattery;

            interface IBatteryReport;

            interface IBatteryStatics;

            runtimeclass BatteryReport;

            runtimeclass Battery;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Power
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Power.Battery*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Devices.Power.Battery*, IInspectable*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Power
        {
            [exclusiveto(Windows.Devices.Power.Battery)]
            [uuid(BC894FC6-0072-47C8-8B5D-614AAA7A437E)]
            [version(0x0A000000)]
            interface IBattery : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                HRESULT GetReport([out] [retval] Windows.Devices.Power.BatteryReport** result);
                [eventadd] HRESULT ReportUpdated([in] Windows.Foundation.TypedEventHandler<Windows.Devices.Power.Battery*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT ReportUpdated([in] EventRegistrationToken token);
            }

            [exclusiveto(Windows.Devices.Power.BatteryReport)]
            [uuid(C9858C3A-4E13-420A-A8D0-24F18F395401)]
            [version(0x0A000000)]
            interface IBatteryReport : IInspectable
            {
                [propget] HRESULT ChargeRateInMilliwatts([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT DesignCapacityInMilliwattHours([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT FullChargeCapacityInMilliwattHours([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT RemainingCapacityInMilliwattHours([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propget] HRESULT Status([out] [retval] Windows.System.Power.BatteryStatus* value);
            }

            [exclusiveto(Windows.Devices.Power.Battery)]
            [uuid(79CD72B6-9E5E-4452-BEA6-DFCD541E597F)]
            [version(0x0A000000)]
            interface IBatteryStatics : IInspectable
            {
                [propget] HRESULT AggregateBattery([out] [retval] Windows.Devices.Power.Battery** result);
                HRESULT FromIdAsync([in] HSTRING deviceId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Power.Battery*>** result);
                HRESULT GetDeviceSelector([out] [retval] HSTRING* result);
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass BatteryReport
            {
                [default] interface Windows.Devices.Power.IBatteryReport;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Power.IBatteryStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass Battery
            {
                [default] interface Windows.Devices.Power.IBattery;
            }
        }
    }
}
