

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eui2Examl_h__
#define __windows2Eui2Examl_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject __FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject __FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase __FIIterator_1_Windows__CUI__CXaml__CSetterBase;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase __FIIterable_1_Windows__CUI__CXaml__CSetterBase;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction __FIIterator_1_Windows__CUI__CXaml__CTriggerAction;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction __FIIterable_1_Windows__CUI__CXaml__CTriggerAction;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase __FIIterator_1_Windows__CUI__CXaml__CTriggerBase;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase __FIIterable_1_Windows__CUI__CXaml__CTriggerBase;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CUIElement __FIIterator_1_Windows__CUI__CXaml__CUIElement;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CUIElement __FIIterable_1_Windows__CUI__CXaml__CUIElement;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualState __FIIterator_1_Windows__CUI__CXaml__CVisualState;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualState __FIIterable_1_Windows__CUI__CXaml__CVisualState;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition __FIIterator_1_Windows__CUI__CXaml__CVisualTransition;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition __FIIterable_1_Windows__CUI__CXaml__CVisualTransition;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject __FIVector_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
typedef interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;

#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase __FIVectorView_1_Windows__CUI__CXaml__CSetterBase;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement __FIVectorView_1_Windows__CUI__CXaml__CUIElement;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState __FIVectorView_1_Windows__CUI__CXaml__CVisualState;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary __FIVector_1_Windows__CUI__CXaml__CResourceDictionary;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CSetterBase __FIVector_1_Windows__CUI__CXaml__CSetterBase;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction __FIVector_1_Windows__CUI__CXaml__CTriggerAction;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase __FIVector_1_Windows__CUI__CXaml__CTriggerBase;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CUIElement __FIVector_1_Windows__CUI__CXaml__CUIElement;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualState __FIVector_1_Windows__CUI__CXaml__CVisualState;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition __FIVector_1_Windows__CUI__CXaml__CVisualTransition;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__ */


#ifndef ____FIReference_1_Windows__CUI__CXaml__CThickness_FWD_DEFINED__
#define ____FIReference_1_Windows__CUI__CXaml__CThickness_FWD_DEFINED__
typedef interface __FIReference_1_Windows__CUI__CXaml__CThickness __FIReference_1_Windows__CUI__CXaml__CThickness;

#endif 	/* ____FIReference_1_Windows__CUI__CXaml__CThickness_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_FWD_DEFINED__ */


#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_FWD_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_FWD_DEFINED__
typedef interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs;

#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationInitializationCallback;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICreateDefaultValueCallback;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedCallback;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyChangedCallback;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeChangedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISuspendingEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUnhandledExceptionEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateChangedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowActivatedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowClosedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowSizeChangedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowVisibilityChangedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBindingFailedEventHandler;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateExtension;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate __x_ABI_CWindows_CUI_CXaml_CIDataTemplate;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplate;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateStatics2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDispatcherTimer;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDispatcherTimerFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICornerRadiusHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ICornerRadiusHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelper __x_ABI_CWindows_CUI_CXaml_CIDurationHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDurationHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDurationHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IThicknessHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IThicknessHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationInitializationCallbackParams;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataContextChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateKey;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDataTemplateKeyFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject __x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObjectFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObject2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyProperty;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyPropertyChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragOperationDeferral;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragUI __x_ABI_CWindows_CUI_CXaml_CIDragUI;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragUI;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragUI_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragUIOverride;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkView __x_ABI_CWindows_CUI_CXaml_CIFrameworkView;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkView;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadata;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadataStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyMetadataFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEvent;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRoutedEventArgsFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBaseCollection;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITargetPropertyPath;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITargetPropertyPathFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUnhandledExceptionEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow __x_ABI_CWindows_CUI_CXaml_CIWindow;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindow_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowStatics __x_ABI_CWindows_CUI_CXaml_CIWindowStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindow2 __x_ABI_CWindows_CUI_CXaml_CIWindow2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindow2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindow2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IWindowCreatedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDependencyObjectCollectionFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragEventArgs2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDragStartingEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDropCompletedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IExceptionRoutedEventArgsFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkTemplate;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkTemplateFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath __x_ABI_CWindows_CUI_CXaml_CIPropertyPath;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyPath;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPropertyPathFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IResourceDictionary;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IResourceDictionaryFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBase __x_ABI_CWindows_CUI_CXaml_CISetterBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBase;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterBaseFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeChangedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBase;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBaseProtected;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerBaseFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyle __x_ABI_CWindows_CUI_CXaml_CIStyle;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStyle;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStyle_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStyleFactory __x_ABI_CWindows_CUI_CXaml_CIStyleFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStyleFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction __x_ABI_CWindows_CUI_CXaml_CITriggerAction;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerAction;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerActionFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerBase __x_ABI_CWindows_CUI_CXaml_CITriggerBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerBase;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ITriggerBaseFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement __x_ABI_CWindows_CUI_CXaml_CIUIElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementOverrides;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2 __x_ABI_CWindows_CUI_CXaml_CIUIElement2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3 __x_ABI_CWindows_CUI_CXaml_CIUIElement3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElement3;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IUIElementStatics3;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualState __x_ABI_CWindows_CUI_CXaml_CIVisualState;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualState;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualState_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualState2 __x_ABI_CWindows_CUI_CXaml_CIVisualState2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualState2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateGroup;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManager;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerOverrides;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerProtected;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualStateManagerFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransition __x_ABI_CWindows_CUI_CXaml_CIVisualTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualTransition;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IVisualTransitionFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTrigger;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTriggerStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IAdaptiveTriggerFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIEventTrigger __x_ABI_CWindows_CUI_CXaml_CIEventTrigger;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IEventTrigger;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementOverrides;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementOverrides2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElementStatics2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkElement3;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IMediaFailedRoutedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetter __x_ABI_CWindows_CUI_CXaml_CISetter;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetter;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetter_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetterFactory __x_ABI_CWindows_CUI_CXaml_CISetterFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetterFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISetter2 __x_ABI_CWindows_CUI_CXaml_CISetter2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISetter2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetter2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTrigger __x_ABI_CWindows_CUI_CXaml_CIStateTrigger;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTrigger;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IStateTriggerStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IGridLengthHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IGridLengthHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IBindingFailedEventArgs;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings __x_ABI_CWindows_CUI_CXaml_CIDebugSettings;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings2;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IDebugSettings3;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplication __x_ABI_CWindows_CUI_CXaml_CIApplication;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplication;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplication_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationOverrides;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IApplicationFactory;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IFrameworkViewSource;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPointHelper __x_ABI_CWindows_CUI_CXaml_CIPointHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPointHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IPointHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRectHelper __x_ABI_CWindows_CUI_CXaml_CIRectHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRectHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface IRectHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeHelper __x_ABI_CWindows_CUI_CXaml_CISizeHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeHelper;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                interface ISizeHelperStatics;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.h"
#include "Windows.ApplicationModel.DataTransfer.DragDrop.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.UI.Xaml.Automation.Peers.h"
#include "Windows.UI.Xaml.Media.Imaging.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eui2Examl_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyObject;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IDependencyObject;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3805 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3805 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3805_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3805_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("29f8d454-905d-587e-b9d8-bfd418805a65"))
IIterator<ABI::Windows::UI::Xaml::DependencyObject*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3806 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3806 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3806_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3806_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f66c6bd3-55b4-5bbb-b82a-6d9ce383091a"))
IIterable<ABI::Windows::UI::Xaml::DependencyObject*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::DependencyObject*> __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject_USE */

interface IInspectable;


/* interface __MIDL_itf_windows2Eui2Examl_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3807 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3807 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3807_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3807_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0003 */
/* [local] */ 

#ifndef DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("59e7ae0c-c29d-5ad6-bef5-dedb52a198e1"))
IKeyValuePair<IInspectable*,IInspectable*> : IKeyValuePair_impl<IInspectable*,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>"; }
};
typedef IKeyValuePair<IInspectable*,IInspectable*> __FIKeyValuePair_2_IInspectable_IInspectable_t;
#define ____FIKeyValuePair_2_IInspectable_IInspectable_FWD_DEFINED__
#define __FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_IInspectable_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3808 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3808 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3808_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3808_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("31e55e8a-0f05-52fd-90d3-b04aa331aaa4"))
IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_IInspectable_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>"; }
};
typedef IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define ____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_FWD_DEFINED__
#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0004 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3809 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3809 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3809_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3809_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33ac68f0-1084-529a-8a17-4e7c8adb7a0c"))
IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_IInspectable_IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>"; }
};
typedef IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define ____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_FWD_DEFINED__
#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3810 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3810 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3810_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3810_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0006 */
/* [local] */ 

#ifndef DEF___FIMapView_2_IInspectable_IInspectable_USE
#define DEF___FIMapView_2_IInspectable_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("efe76d10-cb60-50ad-8a4f-6885cd6212a1"))
IMapView<IInspectable*,IInspectable*> : IMapView_impl<IInspectable*,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMapView`2<Object, Object>"; }
};
typedef IMapView<IInspectable*,IInspectable*> __FIMapView_2_IInspectable_IInspectable_t;
#define ____FIMapView_2_IInspectable_IInspectable_FWD_DEFINED__
#define __FIMapView_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIMapView_2_IInspectable_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMapView_2_IInspectable_IInspectable_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0006 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3811 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3811 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3811_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3811_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0007 */
/* [local] */ 

#ifndef DEF___FIMap_2_IInspectable_IInspectable_USE
#define DEF___FIMap_2_IInspectable_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f5f69427-55ed-5512-8429-d4f6626dfcdd"))
IMap<IInspectable*,IInspectable*> : IMap_impl<IInspectable*,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMap`2<Object, Object>"; }
};
typedef IMap<IInspectable*,IInspectable*> __FIMap_2_IInspectable_IInspectable_t;
#define ____FIMap_2_IInspectable_IInspectable_FWD_DEFINED__
#define __FIMap_2_IInspectable_IInspectable ABI::Windows::Foundation::Collections::__FIMap_2_IInspectable_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMap_2_IInspectable_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class ResourceDictionary;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IResourceDictionary;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0007 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3812 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3812 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3812_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3812_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("849a2f3a-2e5e-58a8-b76e-73450ea680c0"))
IIterator<ABI::Windows::UI::Xaml::ResourceDictionary*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.ResourceDictionary>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0008 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3813 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3813 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3813_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3813_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eaf20635-a462-5397-bee1-f7a09504653b"))
IIterable<ABI::Windows::UI::Xaml::ResourceDictionary*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.ResourceDictionary>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class SetterBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface ISetterBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0009 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3814 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3814 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3814_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3814_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3198322e-2527-58d1-8d92-9d22b977d255"))
IIterator<ABI::Windows::UI::Xaml::SetterBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.SetterBase>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::SetterBase*> __FIIterator_1_Windows__CUI__CXaml__CSetterBase_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CSetterBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0010 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3815 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3815 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3815_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3815_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("aafe70cb-90a8-5719-bd3e-f0b066ed1626"))
IIterable<ABI::Windows::UI::Xaml::SetterBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.SetterBase>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::SetterBase*> __FIIterable_1_Windows__CUI__CXaml__CSetterBase_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CSetterBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class StateTriggerBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IStateTriggerBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0011 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3816 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3816 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3816_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3816_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d78b9c25-3214-54c6-8405-479344309277"))
IIterator<ABI::Windows::UI::Xaml::StateTriggerBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.StateTriggerBase>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0012 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3817 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3817 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3817_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3817_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0013 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("073325bc-8f0f-56d8-b521-6be47644c554"))
IIterable<ABI::Windows::UI::Xaml::StateTriggerBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.StateTriggerBase>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class TriggerAction;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface ITriggerAction;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0013 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3818 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3818 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3818_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3818_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0014 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fa0c6c2e-f81a-543c-b8b6-5c18d36711b0"))
IIterator<ABI::Windows::UI::Xaml::TriggerAction*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerAction>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::TriggerAction*> __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CTriggerAction_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0014 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3819 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3819 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3819_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3819_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0015 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a9d34579-8a6a-58bf-85fd-0f37324e2397"))
IIterable<ABI::Windows::UI::Xaml::TriggerAction*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerAction>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::TriggerAction*> __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CTriggerAction_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class TriggerBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface ITriggerBase;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0015 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3820 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3820 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3820_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3820_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0016 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d317c81a-5dda-59f6-8ce9-44f2877bfae8"))
IIterator<ABI::Windows::UI::Xaml::TriggerBase*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.TriggerBase>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::TriggerBase*> __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0016 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3821 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3821 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3821_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3821_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0017 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d697764f-4e15-5888-a2a5-7b4cf0eb07a5"))
IIterable<ABI::Windows::UI::Xaml::TriggerBase*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.TriggerBase>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::TriggerBase*> __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IUIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0017 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3822 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3822 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3822_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3822_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0018 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1d1f9d60-d53b-57f7-b144-8f7c487846e8"))
IIterator<ABI::Windows::UI::Xaml::UIElement*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::UIElement*> __FIIterator_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0018 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3823 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3823 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3823_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3823_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0019 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42e26ae1-d357-57e8-bb48-f75c9ff69d91"))
IIterable<ABI::Windows::UI::Xaml::UIElement*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::UIElement*> __FIIterable_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class VisualState;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IVisualState;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0019 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3824 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3824 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3824_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3824_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0020 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f20bd8bc-6dda-5c71-bd39-c57137c5a4ed"))
IIterator<ABI::Windows::UI::Xaml::VisualState*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualState>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::VisualState*> __FIIterator_1_Windows__CUI__CXaml__CVisualState_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualState_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0020 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3825 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3825 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3825_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3825_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0021 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1fb071a3-a064-5619-a94e-23c01a4cbf3a"))
IIterable<ABI::Windows::UI::Xaml::VisualState*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualState>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::VisualState*> __FIIterable_1_Windows__CUI__CXaml__CVisualState_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualState_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class VisualStateGroup;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IVisualStateGroup;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0021 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3826 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3826 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3826_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3826_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0022 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("09e95afc-3096-50c1-b05a-acae1a8cb92e"))
IIterator<ABI::Windows::UI::Xaml::VisualStateGroup*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualStateGroup>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3827 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3827 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3827_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3827_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0023 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5d9ab411-e991-55b0-b16c-a400a50a93df"))
IIterable<ABI::Windows::UI::Xaml::VisualStateGroup*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualStateGroup>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class VisualTransition;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IVisualTransition;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0023 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3828 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3828 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3828_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3828_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0024 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5ae4cb71-a8b8-506b-b31b-62db11f66257"))
IIterator<ABI::Windows::UI::Xaml::VisualTransition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.VisualTransition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::VisualTransition*> __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CVisualTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0024 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3829 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3829 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3829_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3829_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0025 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("017a8eb0-e942-5f25-a945-205a9470b9fc"))
IIterable<ABI::Windows::UI::Xaml::VisualTransition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.VisualTransition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::VisualTransition*> __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CVisualTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0025 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3830 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3830 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3830_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3830_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0026 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe750d77-1307-5df2-a021-1c7a8d6b80ad"))
IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::DependencyObject*> __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0026 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3831 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3831 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3831_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3831_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0027 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("771b857e-ab5c-5db8-a021-397c92cdc44c"))
IVector<ABI::Windows::UI::Xaml::DependencyObject*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::DependencyObject*> __FIVector_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0027 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3832 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3832 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3832_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3832_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0028 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b62dec93-a7a5-5ff5-b2d2-6bd20ca0bd4d"))
VectorChangedEventHandler<ABI::Windows::UI::Xaml::DependencyObject*> : VectorChangedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef VectorChangedEventHandler<ABI::Windows::UI::Xaml::DependencyObject*> __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0028 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3833 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3833 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3833_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3833_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0029 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fac6f4d2-96fd-5ceb-80bf-46ac6529fc65"))
IObservableVector<ABI::Windows::UI::Xaml::DependencyObject*> : IObservableVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DependencyObject*, ABI::Windows::UI::Xaml::IDependencyObject*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.DependencyObject>"; }
};
typedef IObservableVector<ABI::Windows::UI::Xaml::DependencyObject*> __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_t;
#define ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_FWD_DEFINED__
#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject ABI::Windows::Foundation::Collections::__FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0029 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3834 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3834 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3834_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3834_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0030 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("36ce8ed8-c1a9-55b7-86dc-b41b8ed8edf4"))
IVectorView<ABI::Windows::UI::Xaml::ResourceDictionary*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.ResourceDictionary>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0030 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0030_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3835 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3835 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3835_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3835_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0031 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("88eef29a-842b-55c2-a936-2b9d75e923e5"))
IVectorView<ABI::Windows::UI::Xaml::SetterBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.SetterBase>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::SetterBase*> __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CSetterBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0031 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3836 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3836 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3836_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3836_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0032 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2bf3a979-a6dc-592b-98ee-cc7c3d9caab2"))
IVectorView<ABI::Windows::UI::Xaml::StateTriggerBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.StateTriggerBase>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0032 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0032_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3837 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3837 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3837_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3837_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0033 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b6c7ce15-6a2f-5bbb-9efb-49be20b928a1"))
IVectorView<ABI::Windows::UI::Xaml::TriggerAction*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerAction>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::TriggerAction*> __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0033 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3838 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3838 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3838_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3838_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0034 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6c97f246-4010-5c09-9722-39fcc3d0647d"))
IVectorView<ABI::Windows::UI::Xaml::TriggerBase*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.TriggerBase>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::TriggerBase*> __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0034 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0034_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3839 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3839 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3839_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3839_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0035 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f3864c10-14a4-5516-b1d9-63b6579429b1"))
IVectorView<ABI::Windows::UI::Xaml::UIElement*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::UIElement*> __FIVectorView_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0035 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3840 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3840 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3840_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3840_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0036 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eb031bb8-8028-5164-9699-1eb288383fa8"))
IVectorView<ABI::Windows::UI::Xaml::VisualState*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualState>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::VisualState*> __FIVectorView_1_Windows__CUI__CXaml__CVisualState_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualState_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0036 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0036_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3841 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3841 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3841_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3841_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0037 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("adf1746e-8936-546a-9733-8626880c4ce1"))
IVectorView<ABI::Windows::UI::Xaml::VisualStateGroup*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualStateGroup>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0037 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3842 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3842 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3842_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3842_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0038 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb3d4d2f-3406-5f29-812a-bb1e437863da"))
IVectorView<ABI::Windows::UI::Xaml::VisualTransition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.VisualTransition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::VisualTransition*> __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0038 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0038_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3843 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3843 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3843_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3843_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0039 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fe820a0c-694d-518b-8ec5-372993f6ceaf"))
IVector<ABI::Windows::UI::Xaml::ResourceDictionary*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::ResourceDictionary*, ABI::Windows::UI::Xaml::IResourceDictionary*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.ResourceDictionary>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::ResourceDictionary*> __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_t;
#define ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CResourceDictionary_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0039 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3844 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3844 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3844_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3844_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0040 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bd55a7fd-7501-5519-9ffb-d0074240db61"))
IVector<ABI::Windows::UI::Xaml::SetterBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::SetterBase*, ABI::Windows::UI::Xaml::ISetterBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.SetterBase>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::SetterBase*> __FIVector_1_Windows__CUI__CXaml__CSetterBase_t;
#define ____FIVector_1_Windows__CUI__CXaml__CSetterBase_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CSetterBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CSetterBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0040 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0040_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3845 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3845 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3845_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3845_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0041 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("72dbaa30-9016-51d9-8500-4b215b5cb468"))
IVector<ABI::Windows::UI::Xaml::StateTriggerBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::StateTriggerBase*, ABI::Windows::UI::Xaml::IStateTriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.StateTriggerBase>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::StateTriggerBase*> __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_t;
#define ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0041 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3846 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3846 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3846_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3846_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0042 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a488f35d-9ffc-5250-ac19-9416777b175a"))
IVector<ABI::Windows::UI::Xaml::TriggerAction*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerAction*, ABI::Windows::UI::Xaml::ITriggerAction*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerAction>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::TriggerAction*> __FIVector_1_Windows__CUI__CXaml__CTriggerAction_t;
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CTriggerAction_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0042 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0042_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3847 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3847 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3847_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3847_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0043 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9149863b-b78b-5fb6-a0a1-9ebf6bbc3407"))
IVector<ABI::Windows::UI::Xaml::TriggerBase*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::TriggerBase*, ABI::Windows::UI::Xaml::ITriggerBase*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.TriggerBase>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::TriggerBase*> __FIVector_1_Windows__CUI__CXaml__CTriggerBase_t;
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CTriggerBase_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0043 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3848 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3848 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3848_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3848_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0044 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b4c1e3ac-8768-5b9d-a661-f63330b8507b"))
IVector<ABI::Windows::UI::Xaml::UIElement*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::UIElement*> __FIVector_1_Windows__CUI__CXaml__CUIElement_t;
#define ____FIVector_1_Windows__CUI__CXaml__CUIElement_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CUIElement ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CUIElement_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CUIElement_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0044 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0044_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3849 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3849 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3849_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3849_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0045 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5b6d19b8-bc0c-5a77-a406-c01c12fd46c3"))
IVector<ABI::Windows::UI::Xaml::VisualState*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualState*, ABI::Windows::UI::Xaml::IVisualState*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualState>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::VisualState*> __FIVector_1_Windows__CUI__CXaml__CVisualState_t;
#define ____FIVector_1_Windows__CUI__CXaml__CVisualState_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CVisualState ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualState_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualState_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0045 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3850 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3850 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3850_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3850_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0046 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("729a0392-675e-58e4-b6a3-0457bb9ea968"))
IVector<ABI::Windows::UI::Xaml::VisualStateGroup*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualStateGroup*, ABI::Windows::UI::Xaml::IVisualStateGroup*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualStateGroup>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::VisualStateGroup*> __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_t;
#define ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0046 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0046_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3851 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3851 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3851_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3851_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0047 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5aebeb8c-7ef7-5975-ba0a-6c19a529bb72"))
IVector<ABI::Windows::UI::Xaml::VisualTransition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::VisualTransition*, ABI::Windows::UI::Xaml::IVisualTransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.VisualTransition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::VisualTransition*> __FIVector_1_Windows__CUI__CXaml__CVisualTransition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CVisualTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
struct Thickness;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0047 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3852 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3852 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3852_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3852_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0048 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE
#define DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a19f7ba8-d8cd-5df2-ab44-fefd26644484"))
IReference<struct ABI::Windows::UI::Xaml::Thickness> : IReference_impl<struct ABI::Windows::UI::Xaml::Thickness> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.UI.Xaml.Thickness>"; }
};
typedef IReference<struct ABI::Windows::UI::Xaml::Thickness> __FIReference_1_Windows__CUI__CXaml__CThickness_t;
#define ____FIReference_1_Windows__CUI__CXaml__CThickness_FWD_DEFINED__
#define __FIReference_1_Windows__CUI__CXaml__CThickness ABI::Windows::Foundation::__FIReference_1_Windows__CUI__CXaml__CThickness_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CUI__CXaml__CThickness_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class SearchBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
interface ISearchBox;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class RoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IRoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0048 */
/* [local] */ 






extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0048_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3853 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3853 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3853_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3853_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0049 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a16eff3c-cc37-554c-8f10-0f7e6e2bcaad"))
ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::RoutedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Controls::SearchBox*, ABI::Windows::UI::Xaml::Controls::ISearchBox*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::RoutedEventArgs*, ABI::Windows::UI::Xaml::IRoutedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.Controls.SearchBox, Windows.UI.Xaml.RoutedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::Controls::SearchBox*,ABI::Windows::UI::Xaml::RoutedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IFrameworkElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0049 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3854 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3854 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3854_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3854_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0050 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c229f252-dede-5d42-a01a-8479d56a7d2f"))
ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*,IInspectable*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::IFrameworkElement*>,IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement, Object>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*,IInspectable*> __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DataContextChangedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IDataContextChangedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0050 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0050_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3855 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3855 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3855_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3855_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0051 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("b01c8a21-de6f-5edd-8796-300e3fe66382"))
ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*,ABI::Windows::UI::Xaml::DataContextChangedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::FrameworkElement*, ABI::Windows::UI::Xaml::IFrameworkElement*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DataContextChangedEventArgs*, ABI::Windows::UI::Xaml::IDataContextChangedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.FrameworkElement, Windows.UI.Xaml.DataContextChangedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::FrameworkElement*,ABI::Windows::UI::Xaml::DataContextChangedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragStartingEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IDragStartingEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0051 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3856 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3856 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3856_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3856_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0052 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ecc4b13b-146c-5963-b8b3-024c5b9b95e4"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*,ABI::Windows::UI::Xaml::DragStartingEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DragStartingEventArgs*, ABI::Windows::UI::Xaml::IDragStartingEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DragStartingEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*,ABI::Windows::UI::Xaml::DragStartingEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DropCompletedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
interface IDropCompletedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0052 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0052_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3857 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3857 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3857_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3857_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0053 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ffd72e78-ec1f-5bcc-9d13-ff5fbb040562"))
ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*,ABI::Windows::UI::Xaml::DropCompletedEventArgs*> : ITypedEventHandler_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::UIElement*, ABI::Windows::UI::Xaml::IUIElement*>,ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::DropCompletedEventArgs*, ABI::Windows::UI::Xaml::IDropCompletedEventArgs*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.TypedEventHandler`2<Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DropCompletedEventArgs>"; }
};
typedef ITypedEventHandler<ABI::Windows::UI::Xaml::UIElement*,ABI::Windows::UI::Xaml::DropCompletedEventArgs*> __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_t;
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_FWD_DEFINED__
#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs ABI::Windows::Foundation::__FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0053 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3858 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3858 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3858_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3858_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0054 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Object>"; }
};
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define ____FIEventHandler_1_IInspectable_FWD_DEFINED__
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_IInspectable_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Transition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface ITransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0054 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0054_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3859 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3859 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3859_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3859_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0055 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0f149913-d622-5dde-b6e3-7835c2ab54b7"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0055 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3860 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3860 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3860_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3860_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0056 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("feb51398-4fdb-5112-8a9b-6a8786ca01ce"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0056 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0056_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3861 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3861 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3861_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3861_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0057 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("43b475a1-3811-5992-be44-ab41a825d355"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0057 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3862 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3862 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3862_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3862_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0058 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e798571f-7e3e-5e1a-aa55-cbc93b83f821"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
class Pointer;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Input {
interface IPointer;
} /*Input*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0058 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0058_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3863 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3863 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3863_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3863_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0059 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8cb1347d-8888-5fb3-bffd-e6caf61b4f03"))
IIterator<ABI::Windows::UI::Xaml::Input::Pointer*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Input.Pointer>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Input::Pointer*> __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CInput__CPointer_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0059 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3864 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3864 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3864_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3864_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0060 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6cf9f859-2234-510d-860a-db328030cbcc"))
IIterable<ABI::Windows::UI::Xaml::Input::Pointer*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Input.Pointer>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Input::Pointer*> __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CInput__CPointer_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0060 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0060_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3865 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3865 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3865_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3865_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0061 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6250f79f-7668-51e9-86a3-3821217a6631"))
IVectorView<ABI::Windows::UI::Xaml::Input::Pointer*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Input::Pointer*, ABI::Windows::UI::Xaml::Input::IPointer*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Input.Pointer>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Input::Pointer*> __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct Point;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0061 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3866 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3866 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3866_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3866_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0062 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c602b59e-0a8e-5e99-b478-2b564585278d"))
IIterator<struct ABI::Windows::Foundation::Point> : IIterator_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Point>"; }
};
typedef IIterator<struct ABI::Windows::Foundation::Point> __FIIterator_1_Windows__CFoundation__CPoint_t;
#define ____FIIterator_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterator_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0062 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0062_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3867 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3867 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3867_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3867_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0063 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c192280d-3a09-5423-9dc5-67b83ebde41d"))
IIterable<struct ABI::Windows::Foundation::Point> : IIterable_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>"; }
};
typedef IIterable<struct ABI::Windows::Foundation::Point> __FIIterable_1_Windows__CFoundation__CPoint_t;
#define ____FIIterable_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0063 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0063_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3868 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3868 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3868_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3868_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0064 */
/* [local] */ 

#ifndef DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("377f6162-6e4d-574e-bf01-77f4fd021d0e"))
IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterator_impl<__FIIterable_1_Windows__CFoundation__CPoint*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>"; }
};
typedef IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define ____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0064 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0064_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3869 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3869 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3869_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3869_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0065 */
/* [local] */ 

#ifndef DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ae44597e-d411-5b7f-bbec-6a96c94a107a"))
IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterable_impl<__FIIterable_1_Windows__CFoundation__CPoint*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>"; }
};
typedef IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define ____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::Collections::__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace DataTransfer {
enum DataPackageOperation;
} /*DataTransfer*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0065 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0065_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3870 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3870 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3870_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3870_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0066 */
/* [local] */ 

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("add21d46-17df-5a43-a685-3262fce84643"))
IAsyncOperationCompletedHandler<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperationCompletedHandler_impl<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>"; }
};
typedef IAsyncOperationCompletedHandler<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_FWD_DEFINED__
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation ABI::Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0066 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0066_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3871 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3871 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3871_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3871_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0067 */
/* [local] */ 

#ifndef DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8b98aea9-64f0-5672-b30e-dfd9c2e4f6fe"))
IAsyncOperation<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperation_impl<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>"; }
};
typedef IAsyncOperation<enum ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_FWD_DEFINED__
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation ABI::Windows::Foundation::__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Eapplicationmodel_h__)
#include <Windows.ApplicationModel.h>
#endif // !defined(__windows2Eapplicationmodel_h__)
#if !defined(__windows2Eapplicationmodel2Eactivation_h__)
#include <Windows.ApplicationModel.Activation.h>
#endif // !defined(__windows2Eapplicationmodel2Eactivation_h__)
#if !defined(__windows2Eapplicationmodel2Ecore_h__)
#include <Windows.ApplicationModel.Core.h>
#endif // !defined(__windows2Eapplicationmodel2Ecore_h__)
#if !defined(__windows2Eapplicationmodel2Edatatransfer_h__)
#include <Windows.ApplicationModel.DataTransfer.h>
#endif // !defined(__windows2Eapplicationmodel2Edatatransfer_h__)
#if !defined(__windows2Eapplicationmodel2Edatatransfer2Edragdrop_h__)
#include <Windows.ApplicationModel.DataTransfer.DragDrop.h>
#endif // !defined(__windows2Eapplicationmodel2Edatatransfer2Edragdrop_h__)
#if !defined(__windows2Egraphics2Eimaging_h__)
#include <Windows.Graphics.Imaging.h>
#endif // !defined(__windows2Egraphics2Eimaging_h__)
#if !defined(__windows2Eui2Ecore_h__)
#include <Windows.UI.Core.h>
#endif // !defined(__windows2Eui2Ecore_h__)
#if !defined(__windows2Eui2Einput_h__)
#include <Windows.UI.Input.h>
#endif // !defined(__windows2Eui2Einput_h__)
#if !defined(__windows2Eui2Examl2Eautomation2Epeers_h__)
#include <Windows.UI.Xaml.Automation.Peers.h>
#endif // !defined(__windows2Eui2Examl2Eautomation2Epeers_h__)
#if !defined(__windows2Eui2Examl2Econtrols_h__)
#include <Windows.UI.Xaml.Controls.h>
#endif // !defined(__windows2Eui2Examl2Econtrols_h__)
#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#include <Windows.UI.Xaml.Controls.Primitives.h>
#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#if !defined(__windows2Eui2Examl2Edata_h__)
#include <Windows.UI.Xaml.Data.h>
#endif // !defined(__windows2Eui2Examl2Edata_h__)
#if !defined(__windows2Eui2Examl2Einput_h__)
#include <Windows.UI.Xaml.Input.h>
#endif // !defined(__windows2Eui2Examl2Einput_h__)
#if !defined(__windows2Eui2Examl2Einterop_h__)
#include <Windows.UI.Xaml.Interop.h>
#endif // !defined(__windows2Eui2Examl2Einterop_h__)
#if !defined(__windows2Eui2Examl2Emedia_h__)
#include <Windows.UI.Xaml.Media.h>
#endif // !defined(__windows2Eui2Examl2Emedia_h__)
#if !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)
#include <Windows.UI.Xaml.Media.Animation.h>
#endif // !defined(__windows2Eui2Examl2Emedia2Eanimation_h__)
#if !defined(__windows2Eui2Examl2Emedia2Eimaging_h__)
#include <Windows.UI.Xaml.Media.Imaging.h>
#endif // !defined(__windows2Eui2Examl2Emedia2Eimaging_h__)
#if !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)
#include <Windows.UI.Xaml.Media.Media3D.h>
#endif // !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class CachedFileUpdaterActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class FileActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class FileOpenPickerActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class FileSavePickerActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif


#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class LaunchActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class SearchActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace Activation {
class ShareTargetActivatedEventArgs;
} /*Activation*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif



#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace DataTransfer {
class DataPackage;
} /*DataTransfer*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
namespace DataTransfer {
class DataPackageView;
} /*DataTransfer*/
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace ApplicationModel {
class SuspendingEventArgs;
} /*ApplicationModel*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
class Uri;
} /*Foundation*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Graphics {
namespace Imaging {
class SoftwareBitmap;
} /*Imaging*/
} /*Graphics*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class CoreDispatcher;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class CoreWindow;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class CoreWindowEventArgs;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class VisibilityChangedEventArgs;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class WindowActivatedEventArgs;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Core {
class WindowSizeChangedEventArgs;
} /*Core*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Input {
class PointerPoint;
} /*Input*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Automation {
namespace Peers {
class AutomationPeer;
} /*Peers*/
} /*Automation*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ContainerContentChangingEventArgs;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class Control;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Data {
class BindingBase;
} /*Data*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Data {
class BindingExpression;
} /*Data*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif







#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes;


#endif /* end if !defined(__cplusplus) */


#endif





#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EasingFunctionBase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Storyboard;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class TransitionCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class CacheMode;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class GeneralTransform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Imaging {
class BitmapImage;
} /*Imaging*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Media3D {
class Transform3D;
} /*Media3D*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Projection;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class RectangleGeometry;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
class Transform;
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CDurationType __x_ABI_CWindows_CUI_CXaml_CDurationType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CElementTheme __x_ABI_CWindows_CUI_CXaml_CElementTheme;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection __x_ABI_CWindows_CUI_CXaml_CFlowDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFocusState __x_ABI_CWindows_CUI_CXaml_CFocusState;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CVisibility __x_ABI_CWindows_CUI_CXaml_CVisibility;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme __x_ABI_CWindows_CUI_CXaml_CApplicationTheme;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CAutomationTextAttributesEnum __x_ABI_CWindows_CUI_CXaml_CAutomationTextAttributesEnum;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals __x_ABI_CWindows_CUI_CXaml_CFontCapitals;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontFraction __x_ABI_CWindows_CUI_CXaml_CFontFraction;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CFontVariants __x_ABI_CWindows_CUI_CXaml_CFontVariants;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType __x_ABI_CWindows_CUI_CXaml_CGridUnitType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment __x_ABI_CWindows_CUI_CXaml_CTextAlignment;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds __x_ABI_CWindows_CUI_CXaml_CTextLineBounds;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming __x_ABI_CWindows_CUI_CXaml_CTextTrimming;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping __x_ABI_CWindows_CUI_CXaml_CTextWrapping;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius __x_ABI_CWindows_CUI_CXaml_CCornerRadius;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CThickness __x_ABI_CWindows_CUI_CXaml_CThickness;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CGridLength __x_ABI_CWindows_CUI_CXaml_CGridLength;

#endif

























































































































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DispatcherTimer;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class CornerRadiusHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DurationHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class ThicknessHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class ApplicationInitializationCallbackParams;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyProperty;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyPropertyChangedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UnhandledExceptionEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class VisualStateChangedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DataTemplateKey;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class PropertyMetadata;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragOperationDeferral;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragUI;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragUIOverride;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkView;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class RoutedEvent;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class SetterBaseCollection;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class TargetPropertyPath;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class TriggerActionCollection;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class TriggerCollection;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Window;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class WindowCreatedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyObjectCollection;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DragEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class ExceptionRoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkTemplate;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DataTemplate;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class PropertyPath;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class SizeChangedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Style;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class VisualStateManager;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class AdaptiveTrigger;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class EventTrigger;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class MediaFailedRoutedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Setter;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class StateTrigger;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class GridLengthHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class BindingFailedEventArgs;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DebugSettings;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class Application;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class FrameworkViewSource;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class PointHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class RectHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class SizeHelper;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0067 */
/* [local] */ 













#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                
                typedef enum DataPackageOperation DataPackageOperation;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace ApplicationModel {
            namespace DataTransfer {
                namespace DragDrop {
                    
                    typedef enum DragDropModifiers DragDropModifiers;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Rect Rect;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Size Size;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif













#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum ComponentResourceLocation ComponentResourceLocation;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif









#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Input {
                    
                    typedef enum ManipulationModes ManipulationModes;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Interop {
                    
                    typedef struct TypeName TypeName;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    
                    typedef enum ElementCompositeMode ElementCompositeMode;
                    
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif







#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum DurationType DurationType;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum ElementTheme ElementTheme;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FlowDirection FlowDirection;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FocusState FocusState;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum HorizontalAlignment HorizontalAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum VerticalAlignment VerticalAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum Visibility Visibility;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum ApplicationTheme ApplicationTheme;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum AutomationTextAttributesEnum AutomationTextAttributesEnum;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontCapitals FontCapitals;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontEastAsianLanguage FontEastAsianLanguage;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontEastAsianWidths FontEastAsianWidths;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontFraction FontFraction;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontNumeralAlignment FontNumeralAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontNumeralStyle FontNumeralStyle;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum FontVariants FontVariants;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum GridUnitType GridUnitType;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum LineStackingStrategy LineStackingStrategy;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum OpticalMarginAlignment OpticalMarginAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextAlignment TextAlignment;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextLineBounds TextLineBounds;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextReadingOrder TextReadingOrder;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextTrimming TextTrimming;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef enum TextWrapping TextWrapping;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct CornerRadius CornerRadius;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Duration Duration;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Thickness Thickness;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct GridLength GridLength;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif




























































































































extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0067_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3872 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3872 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3872_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3872_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0068 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0068 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0068_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29f8d454-905d-587e-b9d8-bfd418805a65")
    __FIIterator_1_Windows__CUI__CXaml__CDependencyObject : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0069 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0069 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0069_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3873 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3873 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3873_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3873_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0070 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0070 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0070_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f66c6bd3-55b4-5bbb-b82a-6d9ce383091a")
    __FIIterable_1_Windows__CUI__CXaml__CDependencyObject : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDependencyObject **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CDependencyObject **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CDependencyObject_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0071 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0071 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0071_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3874 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3874 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3874_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3874_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0072 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary
#define DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0072 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0072_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("849a2f3a-2e5e-58a8-b76e-73450ea680c0")
    __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0073 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CResourceDictionary */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0073 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0073_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3875 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3875 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3875_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3875_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0074 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary
#define DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0074 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0074_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eaf20635-a462-5397-bee1-f7a09504653b")
    __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CResourceDictionary **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0075 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CResourceDictionary */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0075 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0075_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3876 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3876 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3876_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3876_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0076 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase
#define DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0076 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0076_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CSetterBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3198322e-2527-58d1-8d92-9d22b977d255")
    __FIIterator_1_Windows__CUI__CXaml__CSetterBase : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetterBase **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CSetterBase
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CSetterBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0077 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CSetterBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0077 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0077_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3877 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3877 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3877_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3877_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0078 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase
#define DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0078 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0078_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CSetterBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("aafe70cb-90a8-5719-bd3e-f0b066ed1626")
    __FIIterable_1_Windows__CUI__CXaml__CSetterBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CSetterBase **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CSetterBase **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CSetterBase
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CSetterBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0079 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CSetterBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0079 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0079_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3878 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3878 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3878_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3878_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0080 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase
#define DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0080 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0080_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d78b9c25-3214-54c6-8405-479344309277")
    __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStateTriggerBase **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0081 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0081 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0081_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3879 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3879 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3879_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3879_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0082 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase
#define DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0082 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0082_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("073325bc-8f0f-56d8-b521-6be47644c554")
    __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CStateTriggerBase **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0083 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CStateTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0083 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0083_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3880 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3880 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3880_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3880_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0084 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0084 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0084_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CTriggerAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fa0c6c2e-f81a-543c-b8b6-5c18d36711b0")
    __FIIterator_1_Windows__CUI__CXaml__CTriggerAction : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerAction **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CTriggerAction
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0085 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerAction */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0085 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0085_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3881 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3881 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3881_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3881_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0086 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0086_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CTriggerAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a9d34579-8a6a-58bf-85fd-0f37324e2397")
    __FIIterable_1_Windows__CUI__CXaml__CTriggerAction : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CTriggerAction **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CTriggerAction **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CTriggerAction
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerAction_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0087 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerAction */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0087_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3882 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3882 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3882_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3882_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0088 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase
#define DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0088_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d317c81a-5dda-59f6-8ce9-44f2877bfae8")
    __FIIterator_1_Windows__CUI__CXaml__CTriggerBase : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerBase **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CTriggerBase
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0089 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0089 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0089_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3883 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3883 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3883_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3883_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0090 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase
#define DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0090 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0090_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d697764f-4e15-5888-a2a5-7b4cf0eb07a5")
    __FIIterable_1_Windows__CUI__CXaml__CTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CTriggerBase **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CTriggerBase **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CTriggerBase
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CTriggerBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0091 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0091_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3884 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3884 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3884_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3884_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0092 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement
#define DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0092_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1d1f9d60-d53b-57f7-b144-8f7c487846e8")
    __FIIterator_1_Windows__CUI__CXaml__CUIElement : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CUIElement_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0093 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CUIElement */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0093_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3885 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3885 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3885_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3885_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0094 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement
#define DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0094_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("42e26ae1-d357-57e8-bb48-f75c9ff69d91")
    __FIIterable_1_Windows__CUI__CXaml__CUIElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CUIElement **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CUIElement **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CUIElement_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0095 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CUIElement */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0095_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3886 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3886 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3886_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3886_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0096 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0096_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f20bd8bc-6dda-5c71-bd39-c57137c5a4ed")
    __FIIterator_1_Windows__CUI__CXaml__CVisualState : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CVisualState
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualState_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0097 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualState */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0097_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3887 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3887 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3887_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3887_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0098 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0098_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1fb071a3-a064-5619-a94e-23c01a4cbf3a")
    __FIIterable_1_Windows__CUI__CXaml__CVisualState : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualState **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualState **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CVisualState
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualState_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0099 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualState */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0099_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3888 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3888 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3888_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3888_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0100 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0100_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09e95afc-3096-50c1-b05a-acae1a8cb92e")
    __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualStateGroup **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0101 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0101_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3889 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3889 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3889_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3889_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0102 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0102_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5d9ab411-e991-55b0-b16c-a400a50a93df")
    __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualStateGroup **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0103 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualStateGroup */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0103_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3890 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3890 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3890_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3890_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0104 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition
#define DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0104_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CVisualTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5ae4cb71-a8b8-506b-b31b-62db11f66257")
    __FIIterator_1_Windows__CUI__CXaml__CVisualTransition : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualTransition **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CVisualTransition
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0105 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CVisualTransition */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0105_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3891 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3891 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3891_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3891_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0106 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition
#define DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0106_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CVisualTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("017a8eb0-e942-5f25-a945-205a9470b9fc")
    __FIIterable_1_Windows__CUI__CXaml__CVisualTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualTransition **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CVisualTransition **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CVisualTransition
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CVisualTransition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0107 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CVisualTransition */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0107_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3892 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3892 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3892_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3892_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0108 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0108_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fe750d77-1307-5df2-a021-1c7a8d6b80ad")
    __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0109 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0109_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3893 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3893 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3893_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3893_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0110 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0110_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("771b857e-ab5c-5db8-a021-397c92cdc44c")
    __FIVector_1_Windows__CUI__CXaml__CDependencyObject : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CDependencyObject **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CDependencyObject_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0111 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0111_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3894 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3894 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3894_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3894_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0112 */
/* [local] */ 

#ifndef DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)



/* interface __MIDL_itf_windows2Eui2Examl_0000_0112 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0112_v0_0_s_ifspec;

#ifndef ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b62dec93-a7a5-5ff5-b2d2-6bd20ca0bd4d")
    __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::Collections::IVectorChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
        
        END_INTERFACE
    } __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0113 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0113_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3895 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3895 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3895_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3895_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0114 */
/* [local] */ 

#ifndef DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject
#define DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0114_v0_0_s_ifspec;

#ifndef ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__
#define ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

/* interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 



/* interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fac6f4d2-96fd-5ceb-80bf-46ac6529fc65")
    __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE add_VectorChanged( 
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE remove_VectorChanged( 
            /* [in] */ EventRegistrationToken token) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Windows__CUI__CXaml__CDependencyObject *handler,
            /* [retval][out] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )( 
            __RPC__in __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl;

    interface __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject
    {
        CONST_VTBL struct __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 

#define __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0115 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0115_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3896 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3896 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3896_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3896_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0116 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0116_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36ce8ed8-c1a9-55b7-86dc-b41b8ed8edf4")
    __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0117 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0117_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3897 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3897 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3897_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3897_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0118 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0118_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CSetterBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("88eef29a-842b-55c2-a936-2b9d75e923e5")
    __FIVectorView_1_Windows__CUI__CXaml__CSetterBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetterBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISetterBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CSetterBase
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CSetterBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0119 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CSetterBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0119_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3898 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3898 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3898_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3898_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0120 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0120_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2bf3a979-a6dc-592b-98ee-cc7c3d9caab2")
    __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStateTriggerBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStateTriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0121 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0121_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3899 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3899 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3899_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3899_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0122 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0122_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b6c7ce15-6a2f-5bbb-9efb-49be20b928a1")
    __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerAction **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerAction *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0123 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerAction */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0123_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3900 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3900 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3900_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3900_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0124 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0124_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6c97f246-4010-5c09-9722-39fcc3d0647d")
    __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0125 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0125_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3901 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3901 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3901_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3901_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0126 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0126_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f3864c10-14a4-5516-b1d9-63b6579429b1")
    __FIVectorView_1_Windows__CUI__CXaml__CUIElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CUIElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0127 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CUIElement */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0127_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3902 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3902 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3902_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3902_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0128 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0128_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eb031bb8-8028-5164-9699-1eb288383fa8")
    __FIVectorView_1_Windows__CUI__CXaml__CVisualState : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CVisualState
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualState_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0129 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualState */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0129_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3903 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3903 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3903_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3903_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0130 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0130_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("adf1746e-8936-546a-9733-8626880c4ce1")
    __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualStateGroup **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0131 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0131_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3904 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3904 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3904_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3904_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0132 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0132_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bb3d4d2f-3406-5f29-812a-bb1e437863da")
    __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualTransition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualTransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0133 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CVisualTransition */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0133_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3905 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3905 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3905_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3905_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0134 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary
#define DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0134_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CResourceDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("fe820a0c-694d-518b-8ec5-372993f6ceaf")
    __FIVector_1_Windows__CUI__CXaml__CResourceDictionary : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IResourceDictionary **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CResourceDictionary **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CResourceDictionary
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CResourceDictionary_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0135 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CResourceDictionary */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0135_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3906 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3906 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3906_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3906_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0136 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase
#define DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0136_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CSetterBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CSetterBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bd55a7fd-7501-5519-9ffb-d0074240db61")
    __FIVector_1_Windows__CUI__CXaml__CSetterBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetterBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CSetterBase **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISetterBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISetterBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISetterBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISetterBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::ISetterBase **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CSetterBase **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISetterBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CISetterBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CISetterBase **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CSetterBase
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CSetterBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0137 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CSetterBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0137_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3907 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3907 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3907_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3907_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0138 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase
#define DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0138_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72dbaa30-9016-51d9-8500-4b215b5cb468")
    __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStateTriggerBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStateTriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStateTriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStateTriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStateTriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IStateTriggerBase **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CStateTriggerBase **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0139 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CStateTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0139_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3908 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3908 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3908_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3908_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0140 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0140_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CTriggerAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a488f35d-9ffc-5250-ac19-9416777b175a")
    __FIVector_1_Windows__CUI__CXaml__CTriggerAction : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerAction **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerAction *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerAction *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerAction *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerAction *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::ITriggerAction **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CTriggerAction **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerAction *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerAction **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CITriggerAction **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CTriggerAction
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerAction_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0141 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerAction */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0141_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3909 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3909 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3909_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3909_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0142 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase
#define DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0142_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9149863b-b78b-5fb6-a0a1-9ebf6bbc3407")
    __FIVector_1_Windows__CUI__CXaml__CTriggerBase : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITriggerBase **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITriggerBase *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::ITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::ITriggerBase **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CTriggerBase **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITriggerBase *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CITriggerBase **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CITriggerBase **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CTriggerBase
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CTriggerBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0143 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CTriggerBase */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0143_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3910 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3910 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3910_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3910_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0144 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CUIElement
#define DEF___FIVector_1_Windows__CUI__CXaml__CUIElement
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0144_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CUIElement */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b4c1e3ac-8768-5b9d-a661-f63330b8507b")
    __FIVector_1_Windows__CUI__CXaml__CUIElement : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CUIElement **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IUIElement **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CUIElement **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIUIElement **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CUIElement
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CUIElement_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0145 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CUIElement */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0145_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3911 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3911 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3911_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3911_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0146 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualState
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualState
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0146_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CVisualState */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5b6d19b8-bc0c-5a77-a406-c01c12fd46c3")
    __FIVector_1_Windows__CUI__CXaml__CVisualState : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualState **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IVisualState **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualState **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualState **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIVisualState **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CVisualState
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualState_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualState_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0147 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualState */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0147_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3912 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3912 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3912_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3912_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0148 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0148_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("729a0392-675e-58e4-b6a3-0457bb9ea968")
    __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualStateGroup **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IVisualStateGroup **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualStateGroup **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0149 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualStateGroup */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0149_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3913 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3913 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3913_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3913_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0150 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition
#define DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0150_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CVisualTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5aebeb8c-7ef7-5975-ba0a-6c19a529bb72")
    __FIVector_1_Windows__CUI__CXaml__CVisualTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualTransition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualTransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualTransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualTransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualTransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::IVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::IVisualTransition **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CVisualTransition **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CVisualTransition
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CVisualTransition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0151 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CVisualTransition */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0151_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3914 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3914 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3914_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3914_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0152 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CUI__CXaml__CThickness
#define DEF___FIReference_1_Windows__CUI__CXaml__CThickness
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0152_v0_0_s_ifspec;

#ifndef ____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__
#define ____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__

/* interface __FIReference_1_Windows__CUI__CXaml__CThickness */
/* [unique][uuid][object] */ 



/* interface __FIReference_1_Windows__CUI__CXaml__CThickness */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIReference_1_Windows__CUI__CXaml__CThickness;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a19f7ba8-d8cd-5df2-ab44-fefd26644484")
    __FIReference_1_Windows__CUI__CXaml__CThickness : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ __RPC__out struct ABI::Windows::UI::Xaml::Thickness *value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __FIReference_1_Windows__CUI__CXaml__CThickness * This,
            /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        END_INTERFACE
    } __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl;

    interface __FIReference_1_Windows__CUI__CXaml__CThickness
    {
        CONST_VTBL struct __FIReference_1_Windows__CUI__CXaml__CThicknessVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIReference_1_Windows__CUI__CXaml__CThickness_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIReference_1_Windows__CUI__CXaml__CThickness_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIReference_1_Windows__CUI__CXaml__CThickness_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIReference_1_Windows__CUI__CXaml__CThickness_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0153 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIReference_1_Windows__CUI__CXaml__CThickness */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0153_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3915 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3915 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3915_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3915_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0154 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0154_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a16eff3c-cc37-554c-8f10-0f7e6e2bcaad")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::ISearchBox *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CISearchBox *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0155 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CControls__CSearchBox_Windows__CUI__CXaml__CRoutedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0155_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3916 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3916 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3916_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3916_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0156 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0156_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c229f252-dede-5d42-a01a-8479d56a7d2f")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *sender,
            /* [in] */ __RPC__in_opt IInspectable *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *sender,
            /* [in] */ __RPC__in_opt IInspectable *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0157 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0157_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3917 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3917 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3917_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3917_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0158 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0158_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b01c8a21-de6f-5edd-8796-300e3fe66382")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataContextChangedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0159 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0159_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3918 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3918 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3918_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3918_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0160 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0160_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ecc4b13b-146c-5963-b8b3-024c5b9b95e4")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragStartingEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0161 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0161_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_3919 */




/* interface __MIDL_itf_windows2Eui2Examl_0000_3919 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3919_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_3919_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl_0000_0162 */
/* [local] */ 

#ifndef DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs
#define DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0162_v0_0_s_ifspec;

#ifndef ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__
#define ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__

/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs */
/* [unique][uuid][object] */ 



/* interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ffd72e78-ec1f-5bcc-9d13-ff5fbb040562")
    __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invoke( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *sender,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDropCompletedEventArgs *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs *e);
        
        END_INTERFACE
    } __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl;

    interface __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs
    {
        CONST_VTBL struct __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0163 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CDurationType
    {
        DurationType_Automatic	= 0,
        DurationType_TimeSpan	= 1,
        DurationType_Forever	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CElementTheme
    {
        ElementTheme_Default	= 0,
        ElementTheme_Light	= 1,
        ElementTheme_Dark	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFlowDirection
    {
        FlowDirection_LeftToRight	= 0,
        FlowDirection_RightToLeft	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFocusState
    {
        FocusState_Unfocused	= 0,
        FocusState_Pointer	= 1,
        FocusState_Keyboard	= 2,
        FocusState_Programmatic	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment
    {
        HorizontalAlignment_Left	= 0,
        HorizontalAlignment_Center	= 1,
        HorizontalAlignment_Right	= 2,
        HorizontalAlignment_Stretch	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment
    {
        VerticalAlignment_Top	= 0,
        VerticalAlignment_Center	= 1,
        VerticalAlignment_Bottom	= 2,
        VerticalAlignment_Stretch	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CVisibility
    {
        Visibility_Visible	= 0,
        Visibility_Collapsed	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CApplicationTheme
    {
        ApplicationTheme_Light	= 0,
        ApplicationTheme_Dark	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CAutomationTextAttributesEnum
    {
        AutomationTextAttributesEnum_AnimationStyleAttribute	= 40000,
        AutomationTextAttributesEnum_BackgroundColorAttribute	= 40001,
        AutomationTextAttributesEnum_BulletStyleAttribute	= 40002,
        AutomationTextAttributesEnum_CapStyleAttribute	= 40003,
        AutomationTextAttributesEnum_CultureAttribute	= 40004,
        AutomationTextAttributesEnum_FontNameAttribute	= 40005,
        AutomationTextAttributesEnum_FontSizeAttribute	= 40006,
        AutomationTextAttributesEnum_FontWeightAttribute	= 40007,
        AutomationTextAttributesEnum_ForegroundColorAttribute	= 40008,
        AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute	= 40009,
        AutomationTextAttributesEnum_IndentationFirstLineAttribute	= 40010,
        AutomationTextAttributesEnum_IndentationLeadingAttribute	= 40011,
        AutomationTextAttributesEnum_IndentationTrailingAttribute	= 40012,
        AutomationTextAttributesEnum_IsHiddenAttribute	= 40013,
        AutomationTextAttributesEnum_IsItalicAttribute	= 40014,
        AutomationTextAttributesEnum_IsReadOnlyAttribute	= 40015,
        AutomationTextAttributesEnum_IsSubscriptAttribute	= 40016,
        AutomationTextAttributesEnum_IsSuperscriptAttribute	= 40017,
        AutomationTextAttributesEnum_MarginBottomAttribute	= 40018,
        AutomationTextAttributesEnum_MarginLeadingAttribute	= 40019,
        AutomationTextAttributesEnum_MarginTopAttribute	= 40020,
        AutomationTextAttributesEnum_MarginTrailingAttribute	= 40021,
        AutomationTextAttributesEnum_OutlineStylesAttribute	= 40022,
        AutomationTextAttributesEnum_OverlineColorAttribute	= 40023,
        AutomationTextAttributesEnum_OverlineStyleAttribute	= 40024,
        AutomationTextAttributesEnum_StrikethroughColorAttribute	= 40025,
        AutomationTextAttributesEnum_StrikethroughStyleAttribute	= 40026,
        AutomationTextAttributesEnum_TabsAttribute	= 40027,
        AutomationTextAttributesEnum_TextFlowDirectionsAttribute	= 40028,
        AutomationTextAttributesEnum_UnderlineColorAttribute	= 40029,
        AutomationTextAttributesEnum_UnderlineStyleAttribute	= 40030,
        AutomationTextAttributesEnum_AnnotationTypesAttribute	= 40031,
        AutomationTextAttributesEnum_AnnotationObjectsAttribute	= 40032,
        AutomationTextAttributesEnum_StyleNameAttribute	= 40033,
        AutomationTextAttributesEnum_StyleIdAttribute	= 40034,
        AutomationTextAttributesEnum_LinkAttribute	= 40035,
        AutomationTextAttributesEnum_IsActiveAttribute	= 40036,
        AutomationTextAttributesEnum_SelectionActiveEndAttribute	= 40037,
        AutomationTextAttributesEnum_CaretPositionAttribute	= 40038,
        AutomationTextAttributesEnum_CaretBidiModeAttribute	= 40039
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontCapitals
    {
        FontCapitals_Normal	= 0,
        FontCapitals_AllSmallCaps	= 1,
        FontCapitals_SmallCaps	= 2,
        FontCapitals_AllPetiteCaps	= 3,
        FontCapitals_PetiteCaps	= 4,
        FontCapitals_Unicase	= 5,
        FontCapitals_Titling	= 6
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianLanguage
    {
        FontEastAsianLanguage_Normal	= 0,
        FontEastAsianLanguage_HojoKanji	= 1,
        FontEastAsianLanguage_Jis04	= 2,
        FontEastAsianLanguage_Jis78	= 3,
        FontEastAsianLanguage_Jis83	= 4,
        FontEastAsianLanguage_Jis90	= 5,
        FontEastAsianLanguage_NlcKanji	= 6,
        FontEastAsianLanguage_Simplified	= 7,
        FontEastAsianLanguage_Traditional	= 8,
        FontEastAsianLanguage_TraditionalNames	= 9
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontEastAsianWidths
    {
        FontEastAsianWidths_Normal	= 0,
        FontEastAsianWidths_Full	= 1,
        FontEastAsianWidths_Half	= 2,
        FontEastAsianWidths_Proportional	= 3,
        FontEastAsianWidths_Quarter	= 4,
        FontEastAsianWidths_Third	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontFraction
    {
        FontFraction_Normal	= 0,
        FontFraction_Stacked	= 1,
        FontFraction_Slashed	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralAlignment
    {
        FontNumeralAlignment_Normal	= 0,
        FontNumeralAlignment_Proportional	= 1,
        FontNumeralAlignment_Tabular	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontNumeralStyle
    {
        FontNumeralStyle_Normal	= 0,
        FontNumeralStyle_Lining	= 1,
        FontNumeralStyle_OldStyle	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CFontVariants
    {
        FontVariants_Normal	= 0,
        FontVariants_Superscript	= 1,
        FontVariants_Subscript	= 2,
        FontVariants_Ordinal	= 3,
        FontVariants_Inferior	= 4,
        FontVariants_Ruby	= 5
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CGridUnitType
    {
        GridUnitType_Auto	= 0,
        GridUnitType_Pixel	= 1,
        GridUnitType_Star	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CLineStackingStrategy
    {
        LineStackingStrategy_MaxHeight	= 0,
        LineStackingStrategy_BlockLineHeight	= 1,
        LineStackingStrategy_BaselineToBaseline	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_COpticalMarginAlignment
    {
        OpticalMarginAlignment_None	= 0,
        OpticalMarginAlignment_TrimSideBearings	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CTextAlignment
    {
        TextAlignment_Center	= 0,
        TextAlignment_Left	= 1,
        TextAlignment_Right	= 2,
        TextAlignment_Justify	= 3,
        TextAlignment_DetectFromContent	= 4
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CTextLineBounds
    {
        TextLineBounds_Full	= 0,
        TextLineBounds_TrimToCapHeight	= 1,
        TextLineBounds_TrimToBaseline	= 2,
        TextLineBounds_Tight	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CTextReadingOrder
    {
        TextReadingOrder_Default	= 0,
        TextReadingOrder_UseFlowDirection	= 0,
        TextReadingOrder_DetectFromContent	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CTextTrimming
    {
        TextTrimming_None	= 0,
        TextTrimming_CharacterEllipsis	= 1,
        TextTrimming_WordEllipsis	= 2,
        TextTrimming_Clip	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CTextWrapping
    {
        TextWrapping_NoWrap	= 1,
        TextWrapping_Wrap	= 2,
        TextWrapping_WrapWholeWords	= 3
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CCornerRadius
    {
    DOUBLE TopLeft;
    DOUBLE TopRight;
    DOUBLE BottomRight;
    DOUBLE BottomLeft;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CDuration
    {
    __x_ABI_CWindows_CFoundation_CTimeSpan TimeSpan;
    __x_ABI_CWindows_CUI_CXaml_CDurationType Type;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CThickness
    {
    DOUBLE Left;
    DOUBLE Top;
    DOUBLE Right;
    DOUBLE Bottom;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CGridLength
    {
    DOUBLE Value;
    __x_ABI_CWindows_CUI_CXaml_CGridUnitType GridUnitType;
    } ;
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0163 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum DurationType
                    {
                        DurationType_Automatic	= 0,
                        DurationType_TimeSpan	= 1,
                        DurationType_Forever	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum ElementTheme
                    {
                        ElementTheme_Default	= 0,
                        ElementTheme_Light	= 1,
                        ElementTheme_Dark	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FlowDirection
                    {
                        FlowDirection_LeftToRight	= 0,
                        FlowDirection_RightToLeft	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FocusState
                    {
                        FocusState_Unfocused	= 0,
                        FocusState_Pointer	= 1,
                        FocusState_Keyboard	= 2,
                        FocusState_Programmatic	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum HorizontalAlignment
                    {
                        HorizontalAlignment_Left	= 0,
                        HorizontalAlignment_Center	= 1,
                        HorizontalAlignment_Right	= 2,
                        HorizontalAlignment_Stretch	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum VerticalAlignment
                    {
                        VerticalAlignment_Top	= 0,
                        VerticalAlignment_Center	= 1,
                        VerticalAlignment_Bottom	= 2,
                        VerticalAlignment_Stretch	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum Visibility
                    {
                        Visibility_Visible	= 0,
                        Visibility_Collapsed	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum ApplicationTheme
                    {
                        ApplicationTheme_Light	= 0,
                        ApplicationTheme_Dark	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum AutomationTextAttributesEnum
                    {
                        AutomationTextAttributesEnum_AnimationStyleAttribute	= 40000,
                        AutomationTextAttributesEnum_BackgroundColorAttribute	= 40001,
                        AutomationTextAttributesEnum_BulletStyleAttribute	= 40002,
                        AutomationTextAttributesEnum_CapStyleAttribute	= 40003,
                        AutomationTextAttributesEnum_CultureAttribute	= 40004,
                        AutomationTextAttributesEnum_FontNameAttribute	= 40005,
                        AutomationTextAttributesEnum_FontSizeAttribute	= 40006,
                        AutomationTextAttributesEnum_FontWeightAttribute	= 40007,
                        AutomationTextAttributesEnum_ForegroundColorAttribute	= 40008,
                        AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute	= 40009,
                        AutomationTextAttributesEnum_IndentationFirstLineAttribute	= 40010,
                        AutomationTextAttributesEnum_IndentationLeadingAttribute	= 40011,
                        AutomationTextAttributesEnum_IndentationTrailingAttribute	= 40012,
                        AutomationTextAttributesEnum_IsHiddenAttribute	= 40013,
                        AutomationTextAttributesEnum_IsItalicAttribute	= 40014,
                        AutomationTextAttributesEnum_IsReadOnlyAttribute	= 40015,
                        AutomationTextAttributesEnum_IsSubscriptAttribute	= 40016,
                        AutomationTextAttributesEnum_IsSuperscriptAttribute	= 40017,
                        AutomationTextAttributesEnum_MarginBottomAttribute	= 40018,
                        AutomationTextAttributesEnum_MarginLeadingAttribute	= 40019,
                        AutomationTextAttributesEnum_MarginTopAttribute	= 40020,
                        AutomationTextAttributesEnum_MarginTrailingAttribute	= 40021,
                        AutomationTextAttributesEnum_OutlineStylesAttribute	= 40022,
                        AutomationTextAttributesEnum_OverlineColorAttribute	= 40023,
                        AutomationTextAttributesEnum_OverlineStyleAttribute	= 40024,
                        AutomationTextAttributesEnum_StrikethroughColorAttribute	= 40025,
                        AutomationTextAttributesEnum_StrikethroughStyleAttribute	= 40026,
                        AutomationTextAttributesEnum_TabsAttribute	= 40027,
                        AutomationTextAttributesEnum_TextFlowDirectionsAttribute	= 40028,
                        AutomationTextAttributesEnum_UnderlineColorAttribute	= 40029,
                        AutomationTextAttributesEnum_UnderlineStyleAttribute	= 40030,
                        AutomationTextAttributesEnum_AnnotationTypesAttribute	= 40031,
                        AutomationTextAttributesEnum_AnnotationObjectsAttribute	= 40032,
                        AutomationTextAttributesEnum_StyleNameAttribute	= 40033,
                        AutomationTextAttributesEnum_StyleIdAttribute	= 40034,
                        AutomationTextAttributesEnum_LinkAttribute	= 40035,
                        AutomationTextAttributesEnum_IsActiveAttribute	= 40036,
                        AutomationTextAttributesEnum_SelectionActiveEndAttribute	= 40037,
                        AutomationTextAttributesEnum_CaretPositionAttribute	= 40038,
                        AutomationTextAttributesEnum_CaretBidiModeAttribute	= 40039
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontCapitals
                    {
                        FontCapitals_Normal	= 0,
                        FontCapitals_AllSmallCaps	= 1,
                        FontCapitals_SmallCaps	= 2,
                        FontCapitals_AllPetiteCaps	= 3,
                        FontCapitals_PetiteCaps	= 4,
                        FontCapitals_Unicase	= 5,
                        FontCapitals_Titling	= 6
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontEastAsianLanguage
                    {
                        FontEastAsianLanguage_Normal	= 0,
                        FontEastAsianLanguage_HojoKanji	= 1,
                        FontEastAsianLanguage_Jis04	= 2,
                        FontEastAsianLanguage_Jis78	= 3,
                        FontEastAsianLanguage_Jis83	= 4,
                        FontEastAsianLanguage_Jis90	= 5,
                        FontEastAsianLanguage_NlcKanji	= 6,
                        FontEastAsianLanguage_Simplified	= 7,
                        FontEastAsianLanguage_Traditional	= 8,
                        FontEastAsianLanguage_TraditionalNames	= 9
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontEastAsianWidths
                    {
                        FontEastAsianWidths_Normal	= 0,
                        FontEastAsianWidths_Full	= 1,
                        FontEastAsianWidths_Half	= 2,
                        FontEastAsianWidths_Proportional	= 3,
                        FontEastAsianWidths_Quarter	= 4,
                        FontEastAsianWidths_Third	= 5
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontFraction
                    {
                        FontFraction_Normal	= 0,
                        FontFraction_Stacked	= 1,
                        FontFraction_Slashed	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontNumeralAlignment
                    {
                        FontNumeralAlignment_Normal	= 0,
                        FontNumeralAlignment_Proportional	= 1,
                        FontNumeralAlignment_Tabular	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontNumeralStyle
                    {
                        FontNumeralStyle_Normal	= 0,
                        FontNumeralStyle_Lining	= 1,
                        FontNumeralStyle_OldStyle	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum FontVariants
                    {
                        FontVariants_Normal	= 0,
                        FontVariants_Superscript	= 1,
                        FontVariants_Subscript	= 2,
                        FontVariants_Ordinal	= 3,
                        FontVariants_Inferior	= 4,
                        FontVariants_Ruby	= 5
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum GridUnitType
                    {
                        GridUnitType_Auto	= 0,
                        GridUnitType_Pixel	= 1,
                        GridUnitType_Star	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum LineStackingStrategy
                    {
                        LineStackingStrategy_MaxHeight	= 0,
                        LineStackingStrategy_BlockLineHeight	= 1,
                        LineStackingStrategy_BaselineToBaseline	= 2
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum OpticalMarginAlignment
                    {
                        OpticalMarginAlignment_None	= 0,
                        OpticalMarginAlignment_TrimSideBearings	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum TextAlignment
                    {
                        TextAlignment_Center	= 0,
                        TextAlignment_Left	= 1,
                        TextAlignment_Right	= 2,
                        TextAlignment_Justify	= 3,
                        TextAlignment_DetectFromContent	= 4
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum TextLineBounds
                    {
                        TextLineBounds_Full	= 0,
                        TextLineBounds_TrimToCapHeight	= 1,
                        TextLineBounds_TrimToBaseline	= 2,
                        TextLineBounds_Tight	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum TextReadingOrder
                    {
                        TextReadingOrder_Default	= 0,
                        TextReadingOrder_UseFlowDirection	= 0,
                        TextReadingOrder_DetectFromContent	= 1
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum TextTrimming
                    {
                        TextTrimming_None	= 0,
                        TextTrimming_CharacterEllipsis	= 1,
                        TextTrimming_WordEllipsis	= 2,
                        TextTrimming_Clip	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                /* [v1_enum] */ 
                enum TextWrapping
                    {
                        TextWrapping_NoWrap	= 1,
                        TextWrapping_Wrap	= 2,
                        TextWrapping_WrapWholeWords	= 3
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                struct CornerRadius
                    {
                    DOUBLE TopLeft;
                    DOUBLE TopRight;
                    DOUBLE BottomRight;
                    DOUBLE BottomLeft;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                struct Duration
                    {
                    ABI::Windows::Foundation::TimeSpan TimeSpan;
                    DurationType Type;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                struct Thickness
                    {
                    DOUBLE Left;
                    DOUBLE Top;
                    DOUBLE Right;
                    DOUBLE Bottom;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                struct GridLength
                    {
                    DOUBLE Value;
                    GridUnitType GridUnitType;
                    } ;
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0163_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplicationInitializationCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("B6351C55-C284-46E4-8310-FB0967FAB76F")
                    IApplicationInitializationCallback : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IApplicationInitializationCallbackParams *p) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IApplicationInitializationCallback = __uuidof(IApplicationInitializationCallback);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams *p);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_Invoke(This,p)	\
    ( (This)->lpVtbl -> Invoke(This,p) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ICreateDefaultValueCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D6ECB12C-15B5-4EC8-B95C-CDD208F08153")
                    ICreateDefaultValueCallback : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ICreateDefaultValueCallback = __uuidof(ICreateDefaultValueCallback);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_Invoke(This,value)	\
    ( (This)->lpVtbl -> Invoke(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyPropertyChangedCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("45883D16-27BF-4BC1-AC26-94C1601F3A49")
                    IDependencyPropertyChangedCallback : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyPropertyChangedCallback = __uuidof(IDependencyPropertyChangedCallback);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_Invoke(This,sender,dp)	\
    ( (This)->lpVtbl -> Invoke(This,sender,dp) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("09223E5A-75BE-4499-8180-1DDC005421C0")
                    IDependencyPropertyChangedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyPropertyChangedEventHandler = __uuidof(IDependencyPropertyChangedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("2AB1A205-1E73-4BCF-AABC-57B97E21961D")
                    IDragEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragEventHandler = __uuidof(IDragEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IExceptionRoutedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("68E0E810-F6EA-42BC-855B-5D9B67E6A262")
                    IExceptionRoutedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IExceptionRoutedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IExceptionRoutedEventHandler = __uuidof(IExceptionRoutedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyChangedCallback */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("5A9F8A25-D142-44A4-8231-FD676724F29B")
                    IPropertyChangedCallback : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *d,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyChangedCallback = __uuidof(IPropertyChangedCallback);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *d,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_Invoke(This,d,e)	\
    ( (This)->lpVtbl -> Invoke(This,d,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRoutedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A856E674-B0B6-4BC3-BBA8-1BA06E40D4B5")
                    IRoutedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IRoutedEventHandler = __uuidof(IRoutedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISizeChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("1115B13C-25D2-480B-89DC-EB3DCBD6B7FA")
                    ISizeChangedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISizeChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISizeChangedEventHandler = __uuidof(ISizeChangedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISuspendingEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("23429465-E36A-40E2-B139-A4704602A6E1")
                    ISuspendingEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::ISuspendingEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISuspendingEventHandler = __uuidof(ISuspendingEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUnhandledExceptionEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("9274E6BD-49A1-4958-BEEE-D0E19587B6E3")
                    IUnhandledExceptionEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUnhandledExceptionEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUnhandledExceptionEventHandler = __uuidof(IUnhandledExceptionEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E6D5BBD5-E029-43A6-B36D-84A81042D774")
                    IVisualStateChangedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateChangedEventHandler = __uuidof(IVisualStateChangedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowActivatedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("18026348-8619-4C7B-B534-CED45D9DE219")
                    IWindowActivatedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Core::IWindowActivatedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowActivatedEventHandler = __uuidof(IWindowActivatedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CCore_CIWindowActivatedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowClosedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("0DB89161-20D7-45DF-9122-BA89576703BA")
                    IWindowClosedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Core::ICoreWindowEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowClosedEventHandler = __uuidof(IWindowClosedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CCore_CICoreWindowEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowSizeChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("5C21C742-2CED-4FD9-BA38-7118D40E966B")
                    IWindowSizeChangedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Core::IWindowSizeChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowSizeChangedEventHandler = __uuidof(IWindowSizeChangedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CCore_CIWindowSizeChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowVisibilityChangedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("10406AD6-B090-4A4A-B2AD-D682DF27130F")
                    IWindowVisibilityChangedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Core::IVisibilityChangedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowVisibilityChangedEventHandler = __uuidof(IWindowVisibilityChangedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CCore_CIVisibilityChangedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler_INTERFACE_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IBindingFailedEventHandler */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("136B1782-54BA-420D-A1AA-82828721CDE6")
                    IBindingFailedEventHandler : public IUnknown
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Invoke( 
                            /* [in] */ __RPC__in_opt IInspectable *sender,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IBindingFailedEventArgs *e) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IBindingFailedEventHandler = __uuidof(IBindingFailedEventHandler);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler * This,
            /* [in] */ __RPC__in_opt IInspectable *sender,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs *e);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0180 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateExtension[] = L"Windows.UI.Xaml.IDataTemplateExtension";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0180_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplateExtension */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("595E9547-CDFF-4B92-B773-AB396878F353")
                    IDataTemplateExtension : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE ResetTemplate( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ProcessBinding( 
                            /* [in] */ UINT32 phase,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ProcessBindings( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IContainerContentChangingEventArgs *arg,
                            /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplateExtension = __uuidof(IDataTemplateExtension);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ResetTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessBinding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [in] */ UINT32 phase,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ProcessBindings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIContainerContentChangingEventArgs *arg,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtensionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ResetTemplate(This)	\
    ( (This)->lpVtbl -> ResetTemplate(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ProcessBinding(This,phase,returnValue)	\
    ( (This)->lpVtbl -> ProcessBinding(This,phase,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_ProcessBindings(This,arg,returnValue)	\
    ( (This)->lpVtbl -> ProcessBindings(This,arg,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0181 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplate[] = L"Windows.UI.Xaml.IDataTemplate";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0181_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplate */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("9910AEC7-8AB5-4118-9BC6-09F45A35073D")
                    IDataTemplate : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE LoadContent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplate = __uuidof(IDataTemplate);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *LoadContent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplate * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplate_LoadContent(This,returnValue)	\
    ( (This)->lpVtbl -> LoadContent(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0182 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateFactory[] = L"Windows.UI.Xaml.IDataTemplateFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0182_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplateFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("51ED9D7E-2B53-475B-9C88-0C1832C8351A")
                    IDataTemplateFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplate **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplateFactory = __uuidof(IDataTemplateFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplate **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0183 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateStatics2[] = L"Windows.UI.Xaml.IDataTemplateStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0183_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplateStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("8AF77D73-AA01-471E-BEDD-8BAD86219B77")
                    IDataTemplateStatics2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExtensionInstanceProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetExtensionInstance( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplateExtension **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetExtensionInstance( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *element,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDataTemplateExtension *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplateStatics2 = __uuidof(IDataTemplateStatics2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtensionInstanceProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtensionInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetExtensionInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *element,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplateExtension *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_get_ExtensionInstanceProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExtensionInstanceProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_GetExtensionInstance(This,element,value)	\
    ( (This)->lpVtbl -> GetExtensionInstance(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_SetExtensionInstance(This,element,value)	\
    ( (This)->lpVtbl -> SetExtensionInstance(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0184 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimer[] = L"Windows.UI.Xaml.IDispatcherTimer";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0184_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDispatcherTimer */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D160CE46-CD22-4F5F-8C97-40E61DA3E2DC")
                    IDispatcherTimer : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Interval( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Interval( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Tick( 
                            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Tick( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Start( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDispatcherTimer = __uuidof(IDispatcherTimer);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Interval )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Interval )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Tick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Tick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_get_Interval(This,value)	\
    ( (This)->lpVtbl -> get_Interval(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_put_Interval(This,value)	\
    ( (This)->lpVtbl -> put_Interval(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_get_IsEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_add_Tick(This,value,token)	\
    ( (This)->lpVtbl -> add_Tick(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_remove_Tick(This,token)	\
    ( (This)->lpVtbl -> remove_Tick(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0185 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDispatcherTimerFactory[] = L"Windows.UI.Xaml.IDispatcherTimerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0185_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDispatcherTimerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E9961E6E-3626-403A-AFE0-040D58165632")
                    IDispatcherTimerFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDispatcherTimer **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDispatcherTimerFactory = __uuidof(IDispatcherTimerFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimer **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0186 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelper[] = L"Windows.UI.Xaml.ICornerRadiusHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ICornerRadiusHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("FD7BE182-1CDB-4288-B8C8-85EE79297BFC")
                    ICornerRadiusHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ICornerRadiusHelper = __uuidof(ICornerRadiusHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0187 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ICornerRadiusHelperStatics[] = L"Windows.UI.Xaml.ICornerRadiusHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0187_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ICornerRadiusHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("F4A1F659-D4D4-451F-A387-D6BF4B2451D4")
                    ICornerRadiusHelperStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE FromRadii( 
                            /* [in] */ DOUBLE topLeft,
                            /* [in] */ DOUBLE topRight,
                            /* [in] */ DOUBLE bottomRight,
                            /* [in] */ DOUBLE bottomLeft,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::CornerRadius *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromUniformRadius( 
                            /* [in] */ DOUBLE uniformRadius,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::CornerRadius *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ICornerRadiusHelperStatics = __uuidof(ICornerRadiusHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FromRadii )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [in] */ DOUBLE topLeft,
            /* [in] */ DOUBLE topRight,
            /* [in] */ DOUBLE bottomRight,
            /* [in] */ DOUBLE bottomLeft,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromUniformRadius )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics * This,
            /* [in] */ DOUBLE uniformRadius,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CCornerRadius *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FromRadii(This,topLeft,topRight,bottomRight,bottomLeft,returnValue)	\
    ( (This)->lpVtbl -> FromRadii(This,topLeft,topRight,bottomRight,bottomLeft,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_FromUniformRadius(This,uniformRadius,returnValue)	\
    ( (This)->lpVtbl -> FromUniformRadius(This,uniformRadius,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0188 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelper[] = L"Windows.UI.Xaml.IDurationHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0188_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDurationHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("25C1659F-4497-4135-940F-EE96F4D6E934")
                    IDurationHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IDurationHelper = __uuidof(IDurationHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0189 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDurationHelperStatics[] = L"Windows.UI.Xaml.IDurationHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0189 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0189_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDurationHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("BC88093E-3547-4EC0-B519-FFA8F9C4838C")
                    IDurationHelperStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Automatic( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Forever( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Compare( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration duration1,
                            /* [in] */ ABI::Windows::UI::Xaml::Duration duration2,
                            /* [out][retval] */ __RPC__out INT32 *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromTimeSpan( 
                            /* [in] */ ABI::Windows::Foundation::TimeSpan timeSpan,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetHasTimeSpan( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Add( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration target,
                            /* [in] */ ABI::Windows::UI::Xaml::Duration duration,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Equals( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration target,
                            /* [in] */ ABI::Windows::UI::Xaml::Duration value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Subtract( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration target,
                            /* [in] */ ABI::Windows::UI::Xaml::Duration duration,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDurationHelperStatics = __uuidof(IDurationHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Automatic )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Forever )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *value);
        
        HRESULT ( STDMETHODCALLTYPE *Compare )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration duration1,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration duration2,
            /* [out][retval] */ __RPC__out INT32 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromTimeSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetHasTimeSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *Add )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration target,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration duration,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Equals )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration target,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Subtract )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration target,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration duration,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_get_Automatic(This,value)	\
    ( (This)->lpVtbl -> get_Automatic(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_get_Forever(This,value)	\
    ( (This)->lpVtbl -> get_Forever(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Compare(This,duration1,duration2,returnValue)	\
    ( (This)->lpVtbl -> Compare(This,duration1,duration2,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_FromTimeSpan(This,timeSpan,returnValue)	\
    ( (This)->lpVtbl -> FromTimeSpan(This,timeSpan,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_GetHasTimeSpan(This,target,value)	\
    ( (This)->lpVtbl -> GetHasTimeSpan(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Add(This,target,duration,returnValue)	\
    ( (This)->lpVtbl -> Add(This,target,duration,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Equals(This,target,value,returnValue)	\
    ( (This)->lpVtbl -> Equals(This,target,value,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_Subtract(This,target,duration,returnValue)	\
    ( (This)->lpVtbl -> Subtract(This,target,duration,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0190 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelper[] = L"Windows.UI.Xaml.IThicknessHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0190 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0190_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0190_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IThicknessHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A86BAE4B-1E8F-4EEB-9013-0B2838A97B34")
                    IThicknessHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IThicknessHelper = __uuidof(IThicknessHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0191 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IThicknessHelperStatics[] = L"Windows.UI.Xaml.IThicknessHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0191 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0191_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0191_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IThicknessHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C0991A7C-070C-4DA6-8784-01CA800EB73A")
                    IThicknessHelperStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE FromLengths( 
                            /* [in] */ DOUBLE left,
                            /* [in] */ DOUBLE top,
                            /* [in] */ DOUBLE right,
                            /* [in] */ DOUBLE bottom,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromUniformLength( 
                            /* [in] */ DOUBLE uniformLength,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IThicknessHelperStatics = __uuidof(IThicknessHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FromLengths )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [in] */ DOUBLE left,
            /* [in] */ DOUBLE top,
            /* [in] */ DOUBLE right,
            /* [in] */ DOUBLE bottom,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromUniformLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics * This,
            /* [in] */ DOUBLE uniformLength,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FromLengths(This,left,top,right,bottom,returnValue)	\
    ( (This)->lpVtbl -> FromLengths(This,left,top,right,bottom,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_FromUniformLength(This,uniformLength,returnValue)	\
    ( (This)->lpVtbl -> FromUniformLength(This,uniformLength,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0192 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.IApplicationInitializationCallbackParams";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0192 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0192_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0192_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplicationInitializationCallbackParams */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("751B792E-5772-4488-8B87-F547FAA64474")
                    IApplicationInitializationCallbackParams : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IApplicationInitializationCallbackParams = __uuidof(IApplicationInitializationCallbackParams);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0193 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataContextChangedEventArgs[] = L"Windows.UI.Xaml.IDataContextChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0193 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0193_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0193_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataContextChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("7DA68E21-0B8F-4F9F-A143-F8E7780136A2")
                    IDataContextChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewValue( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                            /* [in] */ boolean value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataContextChangedEventArgs = __uuidof(IDataContextChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_get_NewValue(This,value)	\
    ( (This)->lpVtbl -> get_NewValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0194 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKey[] = L"Windows.UI.Xaml.IDataTemplateKey";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0194 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0194_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0194_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplateKey */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("873B6C28-CCEB-4B61-86FA-B2CEC39CC2FA")
                    IDataTemplateKey : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DataType( 
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplateKey = __uuidof(IDataTemplateKey);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_get_DataType(This,value)	\
    ( (This)->lpVtbl -> get_DataType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_put_DataType(This,value)	\
    ( (This)->lpVtbl -> put_DataType(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0195 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDataTemplateKeyFactory[] = L"Windows.UI.Xaml.IDataTemplateKeyFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0195 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0195_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0195_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDataTemplateKeyFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E96B2959-D982-4152-91CB-DE0E4DFD7693")
                    IDataTemplateKeyFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplateKey **instance) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithType( 
                            /* [in] */ __RPC__in_opt IInspectable *dataType,
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDataTemplateKey **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDataTemplateKeyFactory = __uuidof(IDataTemplateKeyFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey **instance);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *dataType,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKey **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstanceWithType(This,dataType,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithType(This,dataType,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0196 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject[] = L"Windows.UI.Xaml.IDependencyObject";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0196 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0196_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0196_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyObject */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("5C526665-F60E-4912-AF59-5FE0680F089D")
                    IDependencyObject : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GetValue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetValue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ClearValue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ReadLocalValue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetAnimationBaseValue( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Dispatcher( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Core::ICoreDispatcher **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyObject = __uuidof(IDependencyObject);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        HRESULT ( STDMETHODCALLTYPE *ClearValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp);
        
        HRESULT ( STDMETHODCALLTYPE *ReadLocalValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetAnimationBaseValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Dispatcher )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreDispatcher **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetValue(This,dp,returnValue)	\
    ( (This)->lpVtbl -> GetValue(This,dp,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_SetValue(This,dp,value)	\
    ( (This)->lpVtbl -> SetValue(This,dp,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_ClearValue(This,dp)	\
    ( (This)->lpVtbl -> ClearValue(This,dp) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_ReadLocalValue(This,dp,returnValue)	\
    ( (This)->lpVtbl -> ReadLocalValue(This,dp,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_GetAnimationBaseValue(This,dp,returnValue)	\
    ( (This)->lpVtbl -> GetAnimationBaseValue(This,dp,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject_get_Dispatcher(This,value)	\
    ( (This)->lpVtbl -> get_Dispatcher(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0197 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectFactory[] = L"Windows.UI.Xaml.IDependencyObjectFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0197 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0197_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0197_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyObjectFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("9A03AF92-7D8A-4937-884F-ECF34FE02ACB")
                    IDependencyObjectFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyObjectFactory = __uuidof(IDependencyObjectFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0198 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObject2[] = L"Windows.UI.Xaml.IDependencyObject2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0198 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0198_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0198_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyObject2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObject2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("29FED85D-3D22-43A1-ADD0-17027C08B212")
                    IDependencyObject2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE RegisterPropertyChangedCallback( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyPropertyChangedCallback *callback,
                            /* [out][retval] */ __RPC__out INT64 *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE UnregisterPropertyChangedCallback( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [in] */ INT64 token) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyObject2 = __uuidof(IDependencyObject2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterPropertyChangedCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedCallback *callback,
            /* [out][retval] */ __RPC__out INT64 *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *UnregisterPropertyChangedCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [in] */ INT64 token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_RegisterPropertyChangedCallback(This,dp,callback,returnValue)	\
    ( (This)->lpVtbl -> RegisterPropertyChangedCallback(This,dp,callback,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_UnregisterPropertyChangedCallback(This,dp,token)	\
    ( (This)->lpVtbl -> UnregisterPropertyChangedCallback(This,dp,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObject2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0199 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyProperty[] = L"Windows.UI.Xaml.IDependencyProperty";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0199 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0199_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyProperty */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("85B13970-9BC4-4E96-ACF1-30C8FD3D55C8")
                    IDependencyProperty : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GetMetadata( 
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName forType,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyProperty = __uuidof(IDependencyProperty);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetMetadata )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName forType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_GetMetadata(This,forType,returnValue)	\
    ( (This)->lpVtbl -> GetMetadata(This,forType,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0200 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyStatics[] = L"Windows.UI.Xaml.IDependencyPropertyStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0200 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0200_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyPropertyStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("49E5F28F-8259-4D5C-AAE0-83D56DBB68D9")
                    IDependencyPropertyStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UnsetValue( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Register( 
                            /* [in] */ __RPC__in HSTRING name,
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName propertyType,
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName ownerType,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyMetadata *typeMetadata,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE RegisterAttached( 
                            /* [in] */ __RPC__in HSTRING name,
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName propertyType,
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName ownerType,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyMetadata *defaultMetadata,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyPropertyStatics = __uuidof(IDependencyPropertyStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UnsetValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        HRESULT ( STDMETHODCALLTYPE *Register )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata *typeMetadata,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterAttached )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata *defaultMetadata,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_get_UnsetValue(This,value)	\
    ( (This)->lpVtbl -> get_UnsetValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_Register(This,name,propertyType,ownerType,typeMetadata,returnValue)	\
    ( (This)->lpVtbl -> Register(This,name,propertyType,ownerType,typeMetadata,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_RegisterAttached(This,name,propertyType,ownerType,defaultMetadata,returnValue)	\
    ( (This)->lpVtbl -> RegisterAttached(This,name,propertyType,ownerType,defaultMetadata,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0201 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.IDependencyPropertyChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0201 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0201_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyPropertyChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("81212C2B-24D0-4957-ABC3-224470A93A4E")
                    IDependencyPropertyChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Property( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldValue( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewValue( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyPropertyChangedEventArgs = __uuidof(IDependencyPropertyChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_Property(This,value)	\
    ( (This)->lpVtbl -> get_Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_OldValue(This,value)	\
    ( (This)->lpVtbl -> get_OldValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_NewValue(This,value)	\
    ( (This)->lpVtbl -> get_NewValue(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0202 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragOperationDeferral[] = L"Windows.UI.Xaml.IDragOperationDeferral";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0202 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0202_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragOperationDeferral */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("BA73ECBA-1B73-4086-B3D3-C223BEEA1633")
                    IDragOperationDeferral : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE Complete( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragOperationDeferral = __uuidof(IDragOperationDeferral);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Complete )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferralVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_Complete(This)	\
    ( (This)->lpVtbl -> Complete(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0203 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUI[] = L"Windows.UI.Xaml.IDragUI";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0203 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0203_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragUI */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragUI */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUI;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("2D9BD838-7C60-4842-9170-346FE10A226A")
                    IDragUI : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage *bitmapImage) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage *bitmapImage,
                            /* [in] */ ABI::Windows::Foundation::Point anchorPoint) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Graphics::Imaging::ISoftwareBitmap *softwareBitmap) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Graphics::Imaging::ISoftwareBitmap *softwareBitmap,
                            /* [in] */ ABI::Windows::Foundation::Point anchorPoint) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromDataPackage( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragUI = __uuidof(IDragUI);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage *bitmapImage);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImageWithAnchorPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage *bitmapImage,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmap )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap *softwareBitmap);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmapWithAnchorPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap *softwareBitmap,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromDataPackage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUI * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragUI
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragUIVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromBitmapImage(This,bitmapImage)	\
    ( (This)->lpVtbl -> SetContentFromBitmapImage(This,bitmapImage) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint)	\
    ( (This)->lpVtbl -> SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmap(This,softwareBitmap)	\
    ( (This)->lpVtbl -> SetContentFromSoftwareBitmap(This,softwareBitmap) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint)	\
    ( (This)->lpVtbl -> SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUI_SetContentFromDataPackage(This)	\
    ( (This)->lpVtbl -> SetContentFromDataPackage(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0204 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragUIOverride[] = L"Windows.UI.Xaml.IDragUIOverride";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0204 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0204_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragUIOverride */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragUIOverride;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("BD6C9DFA-C961-4861-B7A5-BF4FE4A8A6EF")
                    IDragUIOverride : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Caption( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Caption( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsContentVisible( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsContentVisible( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsCaptionVisible( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsCaptionVisible( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsGlyphVisible( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsGlyphVisible( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage *bitmapImage) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Imaging::IBitmapImage *bitmapImage,
                            /* [in] */ ABI::Windows::Foundation::Point anchorPoint) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Graphics::Imaging::ISoftwareBitmap *softwareBitmap) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Graphics::Imaging::ISoftwareBitmap *softwareBitmap,
                            /* [in] */ ABI::Windows::Foundation::Point anchorPoint) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragUIOverride = __uuidof(IDragUIOverride);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsContentVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsContentVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsCaptionVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsCaptionVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsGlyphVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsGlyphVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage *bitmapImage);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImageWithAnchorPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CImaging_CIBitmapImage *bitmapImage,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmap )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap *softwareBitmap);
        
        HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmapWithAnchorPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap *softwareBitmap,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint anchorPoint);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragUIOverrideVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_Caption(This,value)	\
    ( (This)->lpVtbl -> get_Caption(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_Caption(This,value)	\
    ( (This)->lpVtbl -> put_Caption(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsContentVisible(This,value)	\
    ( (This)->lpVtbl -> get_IsContentVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsContentVisible(This,value)	\
    ( (This)->lpVtbl -> put_IsContentVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsCaptionVisible(This,value)	\
    ( (This)->lpVtbl -> get_IsCaptionVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsCaptionVisible(This,value)	\
    ( (This)->lpVtbl -> put_IsCaptionVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_get_IsGlyphVisible(This,value)	\
    ( (This)->lpVtbl -> get_IsGlyphVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_put_IsGlyphVisible(This,value)	\
    ( (This)->lpVtbl -> put_IsGlyphVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImage(This,bitmapImage)	\
    ( (This)->lpVtbl -> SetContentFromBitmapImage(This,bitmapImage) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint)	\
    ( (This)->lpVtbl -> SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmap(This,softwareBitmap)	\
    ( (This)->lpVtbl -> SetContentFromSoftwareBitmap(This,softwareBitmap) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint)	\
    ( (This)->lpVtbl -> SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0205 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkView[] = L"Windows.UI.Xaml.IFrameworkView";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0205 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0205_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkView */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkView */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkView;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("DDBA664B-B603-47AA-942D-3833174F0D80")
                    IFrameworkView : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkView = __uuidof(IFrameworkView);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkView * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkView
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkView_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0206 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadata[] = L"Windows.UI.Xaml.IPropertyMetadata";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0206 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0206_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyMetadata */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("814EF30D-8D18-448A-8644-F2CB51E70380")
                    IPropertyMetadata : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultValue( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CreateDefaultValueCallback( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ICreateDefaultValueCallback **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyMetadata = __uuidof(IPropertyMetadata);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreateDefaultValueCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_get_DefaultValue(This,value)	\
    ( (This)->lpVtbl -> get_DefaultValue(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_get_CreateDefaultValueCallback(This,value)	\
    ( (This)->lpVtbl -> get_CreateDefaultValueCallback(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0207 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataStatics[] = L"Windows.UI.Xaml.IPropertyMetadataStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0207 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0207_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyMetadataStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("3B01077A-6E06-45E9-8B5C-AF243458C062")
                    IPropertyMetadataStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValue( 
                            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValueAndCallback( 
                            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyChangedCallback *propertyChangedCallback,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateWithFactory( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ICreateDefaultValueCallback *createDefaultValueCallback,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateWithFactoryAndCallback( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ICreateDefaultValueCallback *createDefaultValueCallback,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyChangedCallback *propertyChangedCallback,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyMetadataStatics = __uuidof(IPropertyMetadataStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWithDefaultValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWithDefaultValueAndCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback *propertyChangedCallback,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWithFactory )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback *createDefaultValueCallback,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateWithFactoryAndCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CICreateDefaultValueCallback *createDefaultValueCallback,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback *propertyChangedCallback,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValue(This,defaultValue,returnValue)	\
    ( (This)->lpVtbl -> CreateWithDefaultValue(This,defaultValue,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,returnValue)	\
    ( (This)->lpVtbl -> CreateWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactory(This,createDefaultValueCallback,returnValue)	\
    ( (This)->lpVtbl -> CreateWithFactory(This,createDefaultValueCallback,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactoryAndCallback(This,createDefaultValueCallback,propertyChangedCallback,returnValue)	\
    ( (This)->lpVtbl -> CreateWithFactoryAndCallback(This,createDefaultValueCallback,propertyChangedCallback,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0208 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyMetadataFactory[] = L"Windows.UI.Xaml.IPropertyMetadataFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0208 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0208_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyMetadataFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C1B81CC0-57CD-4F2F-B0A9-E1801B28F76B")
                    IPropertyMetadataFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValue( 
                            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **instance) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValueAndCallback( 
                            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyChangedCallback *propertyChangedCallback,
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyMetadata **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyMetadataFactory = __uuidof(IPropertyMetadataFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDefaultValue )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **instance);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDefaultValueAndCallback )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *defaultValue,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyChangedCallback *propertyChangedCallback,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadata **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValue(This,defaultValue,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithDefaultValue(This,defaultValue,outer,inner,instance) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstanceWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0209 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEvent[] = L"Windows.UI.Xaml.IRoutedEvent";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0209 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0209_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRoutedEvent */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A6B25818-43C1-4C70-865C-7BDD5A32E327")
                    IRoutedEvent : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IRoutedEvent = __uuidof(IRoutedEvent);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0210 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgs[] = L"Windows.UI.Xaml.IRoutedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0210 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0210_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRoutedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("5C985AC6-D802-4B38-A223-BF070C43FEDF")
                    IRoutedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OriginalSource( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IRoutedEventArgs = __uuidof(IRoutedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OriginalSource )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_get_OriginalSource(This,value)	\
    ( (This)->lpVtbl -> get_OriginalSource(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0211 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IRoutedEventArgsFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0211 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0211_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRoutedEventArgsFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("B61C4D87-70E5-412E-B520-1A41EE76BBF4")
                    IRoutedEventArgsFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEventArgs **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IRoutedEventArgsFactory = __uuidof(IRoutedEventArgsFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgs **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0212 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseCollection[] = L"Windows.UI.Xaml.ISetterBaseCollection";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0212 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0212_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetterBaseCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("03C40CA8-909E-4117-811C-A4529496BDF1")
                    ISetterBaseCollection : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSealed( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISetterBaseCollection = __uuidof(ISetterBaseCollection);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSealed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_get_IsSealed(This,value)	\
    ( (This)->lpVtbl -> get_IsSealed(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0213 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPath[] = L"Windows.UI.Xaml.ITargetPropertyPath";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0213 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0213_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITargetPropertyPath */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("40740F8E-085F-4CED-BE70-6F47ACF15AD0")
                    ITargetPropertyPath : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyPath **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Path( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IPropertyPath *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Target( 
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITargetPropertyPath = __uuidof(ITargetPropertyPath);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyPath **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Path )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyPath *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_get_Path(This,value)	\
    ( (This)->lpVtbl -> get_Path(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_put_Path(This,value)	\
    ( (This)->lpVtbl -> put_Path(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_get_Target(This,value)	\
    ( (This)->lpVtbl -> get_Target(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_put_Target(This,value)	\
    ( (This)->lpVtbl -> put_Target(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0214 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITargetPropertyPathFactory[] = L"Windows.UI.Xaml.ITargetPropertyPathFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0214 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0214_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITargetPropertyPathFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("88EECCC8-99E2-4A44-9907-B44BC86E2BBE")
                    ITargetPropertyPathFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *targetProperty,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITargetPropertyPath **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ITargetPropertyPathFactory = __uuidof(ITargetPropertyPathFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *targetProperty,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_CreateInstance(This,targetProperty,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,targetProperty,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0215 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.IUnhandledExceptionEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0215 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0215_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0215_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUnhandledExceptionEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("7230269C-054E-4CF3-86C5-BE90EB6863D5")
                    IUnhandledExceptionEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Exception( 
                            /* [out][retval] */ __RPC__out HRESULT *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Message( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                            /* [in] */ boolean value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUnhandledExceptionEventArgs = __uuidof(IUnhandledExceptionEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exception )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out][retval] */ __RPC__out HRESULT *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Exception(This,value)	\
    ( (This)->lpVtbl -> get_Exception(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Message(This,value)	\
    ( (This)->lpVtbl -> get_Message(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0216 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateChangedEventArgs[] = L"Windows.UI.Xaml.IVisualStateChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0216 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0216_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0216_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("FE216AB1-F31F-4791-8989-C70E1D9B59FF")
                    IVisualStateChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OldState( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OldState( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewState( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_NewState( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Control( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Controls::IControl **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Control( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControl *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateChangedEventArgs = __uuidof(IVisualStateChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OldState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OldState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_NewState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Control )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Control )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_OldState(This,value)	\
    ( (This)->lpVtbl -> get_OldState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_OldState(This,value)	\
    ( (This)->lpVtbl -> put_OldState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_NewState(This,value)	\
    ( (This)->lpVtbl -> get_NewState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_NewState(This,value)	\
    ( (This)->lpVtbl -> put_NewState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_get_Control(This,value)	\
    ( (This)->lpVtbl -> get_Control(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_put_Control(This,value)	\
    ( (This)->lpVtbl -> put_Control(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0217 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow[] = L"Windows.UI.Xaml.IWindow";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0217 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0217_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0217_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindow */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindow */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("3276167D-C9F6-462D-9DE2-AE4C1FD8C2E5")
                    IWindow : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Bounds( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Visible( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Content( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Content( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CoreWindow( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Core::ICoreWindow **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Dispatcher( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Core::ICoreDispatcher **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Activated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindowActivatedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Activated( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Closed( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindowClosedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Closed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SizeChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindowSizeChangedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_VisibilityChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindowVisibilityChangedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_VisibilityChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Activate( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindow = __uuidof(IWindow);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounds )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Content )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CoreWindow )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreWindow **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Dispatcher )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CCore_CICoreDispatcher **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Activated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindowActivatedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Activated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindowClosedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Closed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SizeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindowSizeChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SizeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_VisibilityChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindowVisibilityChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_VisibilityChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Activate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This);
        
        HRESULT ( STDMETHODCALLTYPE *Close )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindow
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindow_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Bounds(This,value)	\
    ( (This)->lpVtbl -> get_Bounds(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Visible(This,value)	\
    ( (This)->lpVtbl -> get_Visible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Content(This,value)	\
    ( (This)->lpVtbl -> get_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_put_Content(This,value)	\
    ( (This)->lpVtbl -> put_Content(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_CoreWindow(This,value)	\
    ( (This)->lpVtbl -> get_CoreWindow(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_get_Dispatcher(This,value)	\
    ( (This)->lpVtbl -> get_Dispatcher(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_Activated(This,value,token)	\
    ( (This)->lpVtbl -> add_Activated(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_Activated(This,token)	\
    ( (This)->lpVtbl -> remove_Activated(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_Closed(This,value,token)	\
    ( (This)->lpVtbl -> add_Closed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_Closed(This,token)	\
    ( (This)->lpVtbl -> remove_Closed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_SizeChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SizeChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_SizeChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SizeChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_add_VisibilityChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_VisibilityChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_remove_VisibilityChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VisibilityChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindow_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0218 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowStatics[] = L"Windows.UI.Xaml.IWindowStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0218 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0218_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0218_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("93328409-4EA1-4AFA-83DC-0C4E73E88BB1")
                    IWindowStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IWindow **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowStatics = __uuidof(IWindowStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIWindow **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowStatics_get_Current(This,value)	\
    ( (This)->lpVtbl -> get_Current(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0219 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindow2[] = L"Windows.UI.Xaml.IWindow2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0219 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0219_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0219_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindow2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindow2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindow2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D384759F-34F6-4482-8435-F552F9B24CC8")
                    IWindow2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE SetTitleBar( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindow2 = __uuidof(IWindow2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetTitleBar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindow2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindow2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindow2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindow2_SetTitleBar(This,value)	\
    ( (This)->lpVtbl -> SetTitleBar(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindow2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0220 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IWindowCreatedEventArgs[] = L"Windows.UI.Xaml.IWindowCreatedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0220 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0220_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0220_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IWindowCreatedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("31B71470-FEFF-4654-AF48-9B398AB5772B")
                    IWindowCreatedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Window( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IWindow **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IWindowCreatedEventArgs = __uuidof(IWindowCreatedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Window )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIWindow **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_get_Window(This,value)	\
    ( (This)->lpVtbl -> get_Window(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0221 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDependencyObjectCollectionFactory[] = L"Windows.UI.Xaml.IDependencyObjectCollectionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0221 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0221_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0221_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDependencyObjectCollectionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("051E79FF-B3A8-49EE-B5AF-AC8F68B649E4")
                    IDependencyObjectCollectionFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDependencyObjectCollectionFactory = __uuidof(IDependencyObjectCollectionFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __FIObservableVector_1_Windows__CUI__CXaml__CDependencyObject **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0222 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs[] = L"Windows.UI.Xaml.IDragEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0222 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0222_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0222_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("B440C7C3-02B4-4980-9342-25DAE1C0F188")
                    IDragEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Handled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Handled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackage **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Data( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackage *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *relativeTo,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragEventArgs = __uuidof(IDragEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Handled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *relativeTo,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_get_Handled(This,value)	\
    ( (This)->lpVtbl -> get_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_put_Handled(This,value)	\
    ( (This)->lpVtbl -> put_Handled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_get_Data(This,value)	\
    ( (This)->lpVtbl -> get_Data(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_put_Data(This,value)	\
    ( (This)->lpVtbl -> put_Data(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_GetPosition(This,relativeTo,returnValue)	\
    ( (This)->lpVtbl -> GetPosition(This,relativeTo,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0223 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragEventArgs2[] = L"Windows.UI.Xaml.IDragEventArgs2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0223 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0223_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0223_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragEventArgs2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("26336658-2917-411D-BFC3-2F22471CBBE7")
                    IDragEventArgs2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataView( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackageView **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DragUIOverride( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDragUIOverride **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Modifiers( 
                            /* [out][retval] */ __RPC__out ABI::Windows::ApplicationModel::DataTransfer::DragDrop::DragDropModifiers *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptedOperation( 
                            /* [out][retval] */ __RPC__out ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AcceptedOperation( 
                            /* [in] */ ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDragOperationDeferral **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragEventArgs2 = __uuidof(IDragEventArgs2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataView )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DragUIOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDragUIOverride **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Modifiers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptedOperation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AcceptedOperation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [in] */ __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_DataView(This,value)	\
    ( (This)->lpVtbl -> get_DataView(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_DragUIOverride(This,value)	\
    ( (This)->lpVtbl -> get_DragUIOverride(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_Modifiers(This,value)	\
    ( (This)->lpVtbl -> get_Modifiers(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_get_AcceptedOperation(This,value)	\
    ( (This)->lpVtbl -> get_AcceptedOperation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_put_AcceptedOperation(This,value)	\
    ( (This)->lpVtbl -> put_AcceptedOperation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_GetDeferral(This,returnValue)	\
    ( (This)->lpVtbl -> GetDeferral(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragEventArgs2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0224 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDragStartingEventArgs[] = L"Windows.UI.Xaml.IDragStartingEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0224 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0224_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0224_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDragStartingEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6800D3FA-90B8-46F9-8E30-5AC25F73F0F9")
                    IDragStartingEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cancel( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Cancel( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Data( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::ApplicationModel::DataTransfer::IDataPackage **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DragUI( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDragUI **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetDeferral( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDragOperationDeferral **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *relativeTo,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDragStartingEventArgs = __uuidof(IDragStartingEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Cancel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Data )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DragUI )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDragUI **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetDeferral )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDragOperationDeferral **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetPosition )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *relativeTo,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_Cancel(This,value)	\
    ( (This)->lpVtbl -> get_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_put_Cancel(This,value)	\
    ( (This)->lpVtbl -> put_Cancel(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_Data(This,value)	\
    ( (This)->lpVtbl -> get_Data(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_get_DragUI(This,value)	\
    ( (This)->lpVtbl -> get_DragUI(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetDeferral(This,returnValue)	\
    ( (This)->lpVtbl -> GetDeferral(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_GetPosition(This,relativeTo,returnValue)	\
    ( (This)->lpVtbl -> GetPosition(This,relativeTo,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0225 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDropCompletedEventArgs[] = L"Windows.UI.Xaml.IDropCompletedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0225 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0225_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0225_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDropCompletedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6C4FC188-95BC-4261-9EC5-21CAB677B734")
                    IDropCompletedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DropResult( 
                            /* [out][retval] */ __RPC__out ABI::Windows::ApplicationModel::DataTransfer::DataPackageOperation *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDropCompletedEventArgs = __uuidof(IDropCompletedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DropResult )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_get_DropResult(This,value)	\
    ( (This)->lpVtbl -> get_DropResult(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0226 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0226 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0226_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0226_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IExceptionRoutedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("DD9FF16A-4B62-4A6C-A49D-0671EF6136BE")
                    IExceptionRoutedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ErrorMessage( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IExceptionRoutedEventArgs = __uuidof(IExceptionRoutedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorMessage )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_get_ErrorMessage(This,value)	\
    ( (This)->lpVtbl -> get_ErrorMessage(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0227 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IExceptionRoutedEventArgsFactory[] = L"Windows.UI.Xaml.IExceptionRoutedEventArgsFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0227 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0227_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0227_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IExceptionRoutedEventArgsFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("BBA9826D-5D7A-44E7-B893-B2AE0DD24273")
                    IExceptionRoutedEventArgsFactory : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IExceptionRoutedEventArgsFactory = __uuidof(IExceptionRoutedEventArgsFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0228 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplate[] = L"Windows.UI.Xaml.IFrameworkTemplate";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0228 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0228_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0228_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkTemplate */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A1E254D8-A446-4A27-9A9D-A0F59E1258A5")
                    IFrameworkTemplate : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkTemplate = __uuidof(IFrameworkTemplate);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0229 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkTemplateFactory[] = L"Windows.UI.Xaml.IFrameworkTemplateFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0229 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0229_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0229_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkTemplateFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("1A78A0A5-937D-46D4-832B-94FF14DAB061")
                    IFrameworkTemplateFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IFrameworkTemplate **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkTemplateFactory = __uuidof(IFrameworkTemplateFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplate **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0230 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPath[] = L"Windows.UI.Xaml.IPropertyPath";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0230 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0230_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0230_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyPath */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPath;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("300E5D8A-1FF3-4D2C-95EC-27F81DEBACB8")
                    IPropertyPath : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Path( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyPath = __uuidof(IPropertyPath);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPath * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPath
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPath_get_Path(This,value)	\
    ( (This)->lpVtbl -> get_Path(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0231 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPropertyPathFactory[] = L"Windows.UI.Xaml.IPropertyPathFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0231 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0231_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0231_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPropertyPathFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("4E4CDF99-9826-4E56-847C-CA055F162905")
                    IPropertyPathFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in HSTRING path,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IPropertyPath **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPropertyPathFactory = __uuidof(IPropertyPathFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory * This,
            /* [in] */ __RPC__in HSTRING path,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIPropertyPath **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_CreateInstance(This,path,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,path,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0232 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionary[] = L"Windows.UI.Xaml.IResourceDictionary";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0232 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0232_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0232_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IResourceDictionary */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C1EA4F24-D6DE-4191-8E3A-F48601F7489C")
                    IResourceDictionary : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MergedDictionaries( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CResourceDictionary **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ThemeDictionaries( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIMap_2_IInspectable_IInspectable **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IResourceDictionary = __uuidof(IResourceDictionary);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MergedDictionaries )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CResourceDictionary **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ThemeDictionaries )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIMap_2_IInspectable_IInspectable **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_Source(This,value)	\
    ( (This)->lpVtbl -> get_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_put_Source(This,value)	\
    ( (This)->lpVtbl -> put_Source(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_MergedDictionaries(This,value)	\
    ( (This)->lpVtbl -> get_MergedDictionaries(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_get_ThemeDictionaries(This,value)	\
    ( (This)->lpVtbl -> get_ThemeDictionaries(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0233 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IResourceDictionaryFactory[] = L"Windows.UI.Xaml.IResourceDictionaryFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0233 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0233_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0233_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IResourceDictionaryFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("EA3639B5-31B7-4271-92C9-7C9584A91C22")
                    IResourceDictionaryFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IResourceDictionaryFactory = __uuidof(IResourceDictionaryFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0234 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBase[] = L"Windows.UI.Xaml.ISetterBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0234 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0234_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0234_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetterBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetterBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("418BE27C-2AC4-4F22-8097-DEA3AEEB2FB3")
                    ISetterBase : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSealed( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISetterBase = __uuidof(ISetterBase);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSealed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBase * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetterBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterBase_get_IsSealed(This,value)	\
    ( (This)->lpVtbl -> get_IsSealed(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0235 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterBaseFactory[] = L"Windows.UI.Xaml.ISetterBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0235 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0235_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0235_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetterBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("81F8AD60-1CE8-469D-A667-16E37CEF8BA9")
                    ISetterBaseFactory : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ISetterBaseFactory = __uuidof(ISetterBaseFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0236 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeChangedEventArgs[] = L"Windows.UI.Xaml.ISizeChangedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0236 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0236_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0236_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISizeChangedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D5312E60-5CC1-42A1-920C-1AF46BE2F986")
                    ISizeChangedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PreviousSize( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NewSize( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISizeChangedEventArgs = __uuidof(ISizeChangedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PreviousSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NewSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_get_PreviousSize(This,value)	\
    ( (This)->lpVtbl -> get_PreviousSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_get_NewSize(This,value)	\
    ( (This)->lpVtbl -> get_NewSize(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0237 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBase[] = L"Windows.UI.Xaml.IStateTriggerBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0237 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0237_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0237_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStateTriggerBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("48B20698-AF06-466C-8052-93666DDE0E49")
                    IStateTriggerBase : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IStateTriggerBase = __uuidof(IStateTriggerBase);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0238 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseProtected[] = L"Windows.UI.Xaml.IStateTriggerBaseProtected";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0238 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0238_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0238_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStateTriggerBaseProtected */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("3C41E253-8D14-4216-994C-F9930429F6E5")
                    IStateTriggerBaseProtected : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE SetActive( 
                            /* [in] */ boolean IsActive) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStateTriggerBaseProtected = __uuidof(IStateTriggerBaseProtected);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *SetActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected * This,
            /* [in] */ boolean IsActive);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtectedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_SetActive(This,IsActive)	\
    ( (This)->lpVtbl -> SetActive(This,IsActive) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0239 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerBaseFactory[] = L"Windows.UI.Xaml.IStateTriggerBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0239 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0239_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0239_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStateTriggerBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("970E2C4B-BFAF-47B0-BE42-C1D711BB2E9F")
                    IStateTriggerBaseFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStateTriggerBase **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStateTriggerBaseFactory = __uuidof(IStateTriggerBaseFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBase **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0240 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyle[] = L"Windows.UI.Xaml.IStyle";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0240 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0240_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0240_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStyle */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStyle */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C4A9F225-9DB7-4A7D-B6D1-F74EDB9293C2")
                    IStyle : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsSealed( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Setters( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetterBaseCollection **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetType( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Interop::TypeName *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetType( 
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BasedOn( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BasedOn( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Seal( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStyle = __uuidof(IStyle);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsSealed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Setters )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BasedOn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BasedOn )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        HRESULT ( STDMETHODCALLTYPE *Seal )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyle * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStyle
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStyle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_IsSealed(This,value)	\
    ( (This)->lpVtbl -> get_IsSealed(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_Setters(This,value)	\
    ( (This)->lpVtbl -> get_Setters(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_TargetType(This,value)	\
    ( (This)->lpVtbl -> get_TargetType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_put_TargetType(This,value)	\
    ( (This)->lpVtbl -> put_TargetType(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_get_BasedOn(This,value)	\
    ( (This)->lpVtbl -> get_BasedOn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_put_BasedOn(This,value)	\
    ( (This)->lpVtbl -> put_BasedOn(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyle_Seal(This)	\
    ( (This)->lpVtbl -> Seal(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStyle_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0241 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStyleFactory[] = L"Windows.UI.Xaml.IStyleFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0241 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0241_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0241_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStyleFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStyleFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStyleFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A36824E3-3D81-4CE5-AA51-8B410F602FCD")
                    IStyleFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ ABI::Windows::UI::Xaml::Interop::TypeName targetType,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStyleFactory = __uuidof(IStyleFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStyleFactory * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName targetType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStyleFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStyleFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStyleFactory_CreateInstance(This,targetType,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,targetType,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0242 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerAction[] = L"Windows.UI.Xaml.ITriggerAction";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0242 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0242_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0242_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITriggerAction */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerAction;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A2C0DF02-63D5-4B46-9B83-0868D3079621")
                    ITriggerAction : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ITriggerAction = __uuidof(ITriggerAction);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITriggerAction
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0243 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerActionFactory[] = L"Windows.UI.Xaml.ITriggerActionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0243 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0243_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0243_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITriggerActionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("68D2C0B9-3289-414F-8F6E-C6B97AEDDA03")
                    ITriggerActionFactory : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ITriggerActionFactory = __uuidof(ITriggerActionFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0244 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBase[] = L"Windows.UI.Xaml.ITriggerBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0244 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0244_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0244_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITriggerBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITriggerBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E7EA222F-DEE6-4393-A8B2-8923D641F395")
                    ITriggerBase : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ITriggerBase = __uuidof(ITriggerBase);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITriggerBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0245 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ITriggerBaseFactory[] = L"Windows.UI.Xaml.ITriggerBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0245 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0245_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0245_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ITriggerBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6A3B9E57-FC5D-42D0-8CB9-CA50667AF746")
                    ITriggerBaseFactory : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ITriggerBaseFactory = __uuidof(ITriggerBaseFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0246 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement[] = L"Windows.UI.Xaml.IUIElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0246 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0246_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0246_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("676D0BE9-B65C-41C6-BA40-58CF87F201C1")
                    IUIElement : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DesiredSize( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowDrop( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AllowDrop( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Opacity( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Opacity( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Clip( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IRectangleGeometry **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Clip( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IRectangleGeometry *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderTransform( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ITransform **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RenderTransform( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ITransform *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Projection( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IProjection **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Projection( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::IProjection *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderTransformOrigin( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RenderTransformOrigin( 
                            /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHitTestVisible( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsHitTestVisible( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Visibility( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Visibility *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Visibility( 
                            /* [in] */ ABI::Windows::UI::Xaml::Visibility value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderSize( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UseLayoutRounding( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_UseLayoutRounding( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transitions( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Transitions( 
                            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheMode( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::ICacheMode **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CacheMode( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::ICacheMode *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTapEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTapEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsDoubleTapEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsRightTapEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsRightTapEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHoldingEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsHoldingEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationMode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Input::ManipulationModes *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ManipulationMode( 
                            /* [in] */ ABI::Windows::UI::Xaml::Input::ManipulationModes value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerCaptures( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_KeyUp( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IKeyEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_KeyUp( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_KeyDown( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IKeyEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_KeyDown( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_GotFocus( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_GotFocus( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_LostFocus( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_LostFocus( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DragEnter( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DragEnter( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DragLeave( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DragLeave( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DragOver( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DragOver( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Drop( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDragEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Drop( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerPressed( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerPressed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerMoved( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerMoved( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerReleased( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerReleased( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerEntered( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerEntered( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerExited( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerExited( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerCaptureLost( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerCaptureLost( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerCanceled( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerCanceled( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_PointerWheelChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointerEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_PointerWheelChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Tapped( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::ITappedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Tapped( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DoubleTapped( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IDoubleTappedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DoubleTapped( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Holding( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IHoldingEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Holding( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_RightTapped( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IRightTappedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_RightTapped( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarting( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationStartingEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarting( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ManipulationInertiaStarting( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationInertiaStartingEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ManipulationInertiaStarting( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarted( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationStartedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarted( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ManipulationDelta( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationDeltaEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ManipulationDelta( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_ManipulationCompleted( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IManipulationCompletedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_ManipulationCompleted( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Measure( 
                            /* [in] */ ABI::Windows::Foundation::Size availableSize) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Arrange( 
                            /* [in] */ ABI::Windows::Foundation::Rect finalRect) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CapturePointer( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointer *value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ReleasePointerCapture( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointer *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ReleasePointerCaptures( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE AddHandler( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEvent *routedEvent,
                            /* [in] */ __RPC__in_opt IInspectable *handler,
                            /* [in] */ boolean handledEventsToo) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE RemoveHandler( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEvent *routedEvent,
                            /* [in] */ __RPC__in_opt IInspectable *handler) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE TransformToVisual( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *visual,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::IGeneralTransform **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE InvalidateMeasure( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE InvalidateArrange( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE UpdateLayout( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElement = __uuidof(IUIElement);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DesiredSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowDrop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowDrop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Opacity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Opacity )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Clip )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Clip )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIRectangleGeometry *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderTransform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RenderTransform )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CITransform *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Projection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Projection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIProjection *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderTransformOrigin )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RenderTransformOrigin )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHitTestVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHitTestVisible )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Visibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVisibility *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Visibility )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CVisibility value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseLayoutRounding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseLayoutRounding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Transitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CacheMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CICacheMode *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDoubleTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsDoubleTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRightTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsRightTapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHoldingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsHoldingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ManipulationMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CInput_CManipulationModes value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerCaptures )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CInput__CPointer **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_KeyUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_KeyUp )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_KeyDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIKeyEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_KeyDown )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_GotFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_LostFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DragEnter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DragEnter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DragLeave )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DragLeave )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DragOver )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DragOver )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Drop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDragEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Drop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerPressed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerPressed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerMoved )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerMoved )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerReleased )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerReleased )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerEntered )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerEntered )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerExited )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerExited )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerCaptureLost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerCaptureLost )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerCanceled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerCanceled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_PointerWheelChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointerEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_PointerWheelChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Tapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CITappedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Tapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DoubleTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIDoubleTappedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DoubleTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Holding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIHoldingEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Holding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_RightTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIRightTappedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_RightTapped )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ManipulationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartingEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ManipulationStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ManipulationInertiaStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ManipulationInertiaStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ManipulationStarted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationStartedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ManipulationStarted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ManipulationDelta )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationDeltaEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ManipulationDelta )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_ManipulationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIManipulationCompletedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_ManipulationCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Measure )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize availableSize);
        
        HRESULT ( STDMETHODCALLTYPE *Arrange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect finalRect);
        
        HRESULT ( STDMETHODCALLTYPE *CapturePointer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer *value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ReleasePointerCapture )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer *value);
        
        HRESULT ( STDMETHODCALLTYPE *ReleasePointerCaptures )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *AddHandler )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent *routedEvent,
            /* [in] */ __RPC__in_opt IInspectable *handler,
            /* [in] */ boolean handledEventsToo);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveHandler )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent *routedEvent,
            /* [in] */ __RPC__in_opt IInspectable *handler);
        
        HRESULT ( STDMETHODCALLTYPE *TransformToVisual )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *visual,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CIGeneralTransform **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateMeasure )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateArrange )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *UpdateLayout )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_DesiredSize(This,value)	\
    ( (This)->lpVtbl -> get_DesiredSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_AllowDrop(This,value)	\
    ( (This)->lpVtbl -> get_AllowDrop(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_AllowDrop(This,value)	\
    ( (This)->lpVtbl -> put_AllowDrop(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Opacity(This,value)	\
    ( (This)->lpVtbl -> get_Opacity(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Opacity(This,value)	\
    ( (This)->lpVtbl -> put_Opacity(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Clip(This,value)	\
    ( (This)->lpVtbl -> get_Clip(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Clip(This,value)	\
    ( (This)->lpVtbl -> put_Clip(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderTransform(This,value)	\
    ( (This)->lpVtbl -> get_RenderTransform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_RenderTransform(This,value)	\
    ( (This)->lpVtbl -> put_RenderTransform(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Projection(This,value)	\
    ( (This)->lpVtbl -> get_Projection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Projection(This,value)	\
    ( (This)->lpVtbl -> put_Projection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderTransformOrigin(This,value)	\
    ( (This)->lpVtbl -> get_RenderTransformOrigin(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_RenderTransformOrigin(This,value)	\
    ( (This)->lpVtbl -> put_RenderTransformOrigin(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsHitTestVisible(This,value)	\
    ( (This)->lpVtbl -> get_IsHitTestVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsHitTestVisible(This,value)	\
    ( (This)->lpVtbl -> put_IsHitTestVisible(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Visibility(This,value)	\
    ( (This)->lpVtbl -> get_Visibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Visibility(This,value)	\
    ( (This)->lpVtbl -> put_Visibility(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_RenderSize(This,value)	\
    ( (This)->lpVtbl -> get_RenderSize(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_UseLayoutRounding(This,value)	\
    ( (This)->lpVtbl -> get_UseLayoutRounding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_UseLayoutRounding(This,value)	\
    ( (This)->lpVtbl -> put_UseLayoutRounding(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_Transitions(This,value)	\
    ( (This)->lpVtbl -> get_Transitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_Transitions(This,value)	\
    ( (This)->lpVtbl -> put_Transitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_CacheMode(This,value)	\
    ( (This)->lpVtbl -> get_CacheMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_CacheMode(This,value)	\
    ( (This)->lpVtbl -> put_CacheMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsTapEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsTapEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsDoubleTapEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsDoubleTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsDoubleTapEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsDoubleTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsRightTapEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsRightTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsRightTapEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsRightTapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_IsHoldingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsHoldingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_IsHoldingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsHoldingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_ManipulationMode(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_put_ManipulationMode(This,value)	\
    ( (This)->lpVtbl -> put_ManipulationMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_get_PointerCaptures(This,value)	\
    ( (This)->lpVtbl -> get_PointerCaptures(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_KeyUp(This,value,token)	\
    ( (This)->lpVtbl -> add_KeyUp(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_KeyUp(This,token)	\
    ( (This)->lpVtbl -> remove_KeyUp(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_KeyDown(This,value,token)	\
    ( (This)->lpVtbl -> add_KeyDown(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_KeyDown(This,token)	\
    ( (This)->lpVtbl -> remove_KeyDown(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_GotFocus(This,value,token)	\
    ( (This)->lpVtbl -> add_GotFocus(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_GotFocus(This,token)	\
    ( (This)->lpVtbl -> remove_GotFocus(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_LostFocus(This,value,token)	\
    ( (This)->lpVtbl -> add_LostFocus(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_LostFocus(This,token)	\
    ( (This)->lpVtbl -> remove_LostFocus(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragEnter(This,value,token)	\
    ( (This)->lpVtbl -> add_DragEnter(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragEnter(This,token)	\
    ( (This)->lpVtbl -> remove_DragEnter(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragLeave(This,value,token)	\
    ( (This)->lpVtbl -> add_DragLeave(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragLeave(This,token)	\
    ( (This)->lpVtbl -> remove_DragLeave(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DragOver(This,value,token)	\
    ( (This)->lpVtbl -> add_DragOver(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DragOver(This,token)	\
    ( (This)->lpVtbl -> remove_DragOver(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Drop(This,value,token)	\
    ( (This)->lpVtbl -> add_Drop(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Drop(This,token)	\
    ( (This)->lpVtbl -> remove_Drop(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerPressed(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerPressed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerPressed(This,token)	\
    ( (This)->lpVtbl -> remove_PointerPressed(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerMoved(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerMoved(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerMoved(This,token)	\
    ( (This)->lpVtbl -> remove_PointerMoved(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerReleased(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerReleased(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerReleased(This,token)	\
    ( (This)->lpVtbl -> remove_PointerReleased(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerEntered(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerEntered(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerEntered(This,token)	\
    ( (This)->lpVtbl -> remove_PointerEntered(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerExited(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerExited(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerExited(This,token)	\
    ( (This)->lpVtbl -> remove_PointerExited(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerCaptureLost(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerCaptureLost(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerCaptureLost(This,token)	\
    ( (This)->lpVtbl -> remove_PointerCaptureLost(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerCanceled(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerCanceled(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerCanceled(This,token)	\
    ( (This)->lpVtbl -> remove_PointerCanceled(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_PointerWheelChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_PointerWheelChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_PointerWheelChanged(This,token)	\
    ( (This)->lpVtbl -> remove_PointerWheelChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Tapped(This,value,token)	\
    ( (This)->lpVtbl -> add_Tapped(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Tapped(This,token)	\
    ( (This)->lpVtbl -> remove_Tapped(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_DoubleTapped(This,value,token)	\
    ( (This)->lpVtbl -> add_DoubleTapped(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_DoubleTapped(This,token)	\
    ( (This)->lpVtbl -> remove_DoubleTapped(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_Holding(This,value,token)	\
    ( (This)->lpVtbl -> add_Holding(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_Holding(This,token)	\
    ( (This)->lpVtbl -> remove_Holding(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_RightTapped(This,value,token)	\
    ( (This)->lpVtbl -> add_RightTapped(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_RightTapped(This,token)	\
    ( (This)->lpVtbl -> remove_RightTapped(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_ManipulationStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationStarting(This,token)	\
    ( (This)->lpVtbl -> remove_ManipulationStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationInertiaStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_ManipulationInertiaStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationInertiaStarting(This,token)	\
    ( (This)->lpVtbl -> remove_ManipulationInertiaStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationStarted(This,value,token)	\
    ( (This)->lpVtbl -> add_ManipulationStarted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationStarted(This,token)	\
    ( (This)->lpVtbl -> remove_ManipulationStarted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationDelta(This,value,token)	\
    ( (This)->lpVtbl -> add_ManipulationDelta(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationDelta(This,token)	\
    ( (This)->lpVtbl -> remove_ManipulationDelta(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_add_ManipulationCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_ManipulationCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_remove_ManipulationCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_ManipulationCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Measure(This,availableSize)	\
    ( (This)->lpVtbl -> Measure(This,availableSize) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_Arrange(This,finalRect)	\
    ( (This)->lpVtbl -> Arrange(This,finalRect) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_CapturePointer(This,value,returnValue)	\
    ( (This)->lpVtbl -> CapturePointer(This,value,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_ReleasePointerCapture(This,value)	\
    ( (This)->lpVtbl -> ReleasePointerCapture(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_ReleasePointerCaptures(This)	\
    ( (This)->lpVtbl -> ReleasePointerCaptures(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_AddHandler(This,routedEvent,handler,handledEventsToo)	\
    ( (This)->lpVtbl -> AddHandler(This,routedEvent,handler,handledEventsToo) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_RemoveHandler(This,routedEvent,handler)	\
    ( (This)->lpVtbl -> RemoveHandler(This,routedEvent,handler) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_TransformToVisual(This,visual,returnValue)	\
    ( (This)->lpVtbl -> TransformToVisual(This,visual,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_InvalidateMeasure(This)	\
    ( (This)->lpVtbl -> InvalidateMeasure(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_InvalidateArrange(This)	\
    ( (This)->lpVtbl -> InvalidateArrange(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement_UpdateLayout(This)	\
    ( (This)->lpVtbl -> UpdateLayout(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0247 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementOverrides[] = L"Windows.UI.Xaml.IUIElementOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0247 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0247_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0247_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElementOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("608D2F1D-7858-4AEB-89E4-B54E2C7ED3D3")
                    IUIElementOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE OnCreateAutomationPeer( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Automation::Peers::IAutomationPeer **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnDisconnectVisualChildren( void) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FindSubElementsForTouchTargeting( 
                            /* [in] */ ABI::Windows::Foundation::Point point,
                            /* [in] */ ABI::Windows::Foundation::Rect boundingRect,
                            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElementOverrides = __uuidof(IUIElementOverrides);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnCreateAutomationPeer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *OnDisconnectVisualChildren )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *FindSubElementsForTouchTargeting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect boundingRect,
            /* [out][retval] */ __RPC__deref_out_opt __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_OnCreateAutomationPeer(This,returnValue)	\
    ( (This)->lpVtbl -> OnCreateAutomationPeer(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_OnDisconnectVisualChildren(This)	\
    ( (This)->lpVtbl -> OnDisconnectVisualChildren(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_FindSubElementsForTouchTargeting(This,point,boundingRect,returnValue)	\
    ( (This)->lpVtbl -> FindSubElementsForTouchTargeting(This,point,boundingRect,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0248 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics[] = L"Windows.UI.Xaml.IUIElementStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0248 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0248_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0248_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElementStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("58D3573B-F52C-45BE-988B-A5869564873C")
                    IUIElementStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyDownEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyUpEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerEnteredEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerPressedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerMovedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerReleasedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerExitedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerCaptureLostEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerCanceledEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerWheelChangedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TappedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DoubleTappedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HoldingEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RightTappedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationStartingEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationInertiaStartingEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationStartedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationDeltaEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationCompletedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DragEnterEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DragLeaveEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DragOverEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DropEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowDropProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpacityProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClipProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderTransformProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProjectionProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RenderTransformOriginProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHitTestVisibleProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VisibilityProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UseLayoutRoundingProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TransitionsProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheModeProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTapEnabledProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabledProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsRightTapEnabledProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsHoldingEnabledProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ManipulationModeProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PointerCapturesProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElementStatics = __uuidof(IUIElementStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyDownEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyUpEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerEnteredEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerPressedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerMovedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerReleasedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerExitedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerCaptureLostEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerCanceledEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerWheelChangedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TappedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DoubleTappedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HoldingEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RightTappedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationStartingEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationInertiaStartingEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationStartedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationDeltaEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationCompletedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DragEnterEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DragLeaveEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DragOverEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DropEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowDropProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpacityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClipProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderTransformProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProjectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RenderTransformOriginProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHitTestVisibleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VisibilityProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseLayoutRoundingProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTapEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDoubleTapEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsRightTapEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsHoldingEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManipulationModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PointerCapturesProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_KeyDownEvent(This,value)	\
    ( (This)->lpVtbl -> get_KeyDownEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_KeyUpEvent(This,value)	\
    ( (This)->lpVtbl -> get_KeyUpEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerEnteredEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerEnteredEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerPressedEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerPressedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerMovedEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerMovedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerReleasedEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerReleasedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerExitedEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerExitedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCaptureLostEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerCaptureLostEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCanceledEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerCanceledEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerWheelChangedEvent(This,value)	\
    ( (This)->lpVtbl -> get_PointerWheelChangedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_TappedEvent(This,value)	\
    ( (This)->lpVtbl -> get_TappedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DoubleTappedEvent(This,value)	\
    ( (This)->lpVtbl -> get_DoubleTappedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_HoldingEvent(This,value)	\
    ( (This)->lpVtbl -> get_HoldingEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RightTappedEvent(This,value)	\
    ( (This)->lpVtbl -> get_RightTappedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationStartingEvent(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationStartingEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationInertiaStartingEvent(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationInertiaStartingEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationStartedEvent(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationStartedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationDeltaEvent(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationDeltaEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationCompletedEvent(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationCompletedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragEnterEvent(This,value)	\
    ( (This)->lpVtbl -> get_DragEnterEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragLeaveEvent(This,value)	\
    ( (This)->lpVtbl -> get_DragLeaveEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DragOverEvent(This,value)	\
    ( (This)->lpVtbl -> get_DragOverEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_DropEvent(This,value)	\
    ( (This)->lpVtbl -> get_DropEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_AllowDropProperty(This,value)	\
    ( (This)->lpVtbl -> get_AllowDropProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_OpacityProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpacityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ClipProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClipProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RenderTransformProperty(This,value)	\
    ( (This)->lpVtbl -> get_RenderTransformProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ProjectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_ProjectionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_RenderTransformOriginProperty(This,value)	\
    ( (This)->lpVtbl -> get_RenderTransformOriginProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsHitTestVisibleProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsHitTestVisibleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_VisibilityProperty(This,value)	\
    ( (This)->lpVtbl -> get_VisibilityProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_UseLayoutRoundingProperty(This,value)	\
    ( (This)->lpVtbl -> get_UseLayoutRoundingProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_TransitionsProperty(This,value)	\
    ( (This)->lpVtbl -> get_TransitionsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_CacheModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_CacheModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsTapEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTapEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsDoubleTapEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsDoubleTapEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsRightTapEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsRightTapEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_IsHoldingEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsHoldingEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_ManipulationModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_ManipulationModeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_get_PointerCapturesProperty(This,value)	\
    ( (This)->lpVtbl -> get_PointerCapturesProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0249 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementFactory[] = L"Windows.UI.Xaml.IUIElementFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0249 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0249_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0249_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElementFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("B9EE93FE-A338-419F-AC32-91DCAADF5D08")
                    IUIElementFactory : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IUIElementFactory = __uuidof(IUIElementFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0250 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement2[] = L"Windows.UI.Xaml.IUIElement2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0250 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0250_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0250_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElement2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("676D0BF9-B66C-41D6-BA50-58CF87F201D1")
                    IUIElement2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositeMode( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::ElementCompositeMode *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CompositeMode( 
                            /* [in] */ ABI::Windows::UI::Xaml::Media::ElementCompositeMode value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE CancelDirectManipulations( 
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElement2 = __uuidof(IUIElement2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositeMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CompositeMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CElementCompositeMode value);
        
        HRESULT ( STDMETHODCALLTYPE *CancelDirectManipulations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement2 * This,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_get_CompositeMode(This,value)	\
    ( (This)->lpVtbl -> get_CompositeMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_put_CompositeMode(This,value)	\
    ( (This)->lpVtbl -> put_CompositeMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement2_CancelDirectManipulations(This,returnValue)	\
    ( (This)->lpVtbl -> CancelDirectManipulations(This,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0251 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics2[] = L"Windows.UI.Xaml.IUIElementStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0251 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0251_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0251_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElementStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("58D3574B-F53C-45BE-989B-A5869564874C")
                    IUIElementStatics2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CompositeModeProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElementStatics2 = __uuidof(IUIElementStatics2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CompositeModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_get_CompositeModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_CompositeModeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0252 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElement3[] = L"Windows.UI.Xaml.IUIElement3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0252 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0252_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0252_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElement3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElement3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("BC2B28F1-26F2-4AAB-B256-3B5350881E37")
                    IUIElement3 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transform3D( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Media3D::ITransform3D **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Transform3D( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Media3D::ITransform3D *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanDrag( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CanDrag( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DragStarting( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DragStarting( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DropCompleted( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DropCompleted( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE StartDragAsync( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Input::IPointerPoint *pointerPoint,
                            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElement3 = __uuidof(IUIElement3);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transform3D )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Transform3D )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CMedia3D_CITransform3D *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanDrag )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CanDrag )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_DragStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDragStartingEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DragStarting )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_DropCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CUIElement_Windows__CUI__CXaml__CDropCompletedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DropCompleted )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *StartDragAsync )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElement3 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CInput_CIPointerPoint *pointerPoint,
            /* [out][retval] */ __RPC__deref_out_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElement3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElement3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_get_Transform3D(This,value)	\
    ( (This)->lpVtbl -> get_Transform3D(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_put_Transform3D(This,value)	\
    ( (This)->lpVtbl -> put_Transform3D(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_get_CanDrag(This,value)	\
    ( (This)->lpVtbl -> get_CanDrag(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_put_CanDrag(This,value)	\
    ( (This)->lpVtbl -> put_CanDrag(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_add_DragStarting(This,value,token)	\
    ( (This)->lpVtbl -> add_DragStarting(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_remove_DragStarting(This,token)	\
    ( (This)->lpVtbl -> remove_DragStarting(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_add_DropCompleted(This,value,token)	\
    ( (This)->lpVtbl -> add_DropCompleted(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_remove_DropCompleted(This,token)	\
    ( (This)->lpVtbl -> remove_DropCompleted(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElement3_StartDragAsync(This,pointerPoint,returnValue)	\
    ( (This)->lpVtbl -> StartDragAsync(This,pointerPoint,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElement3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0253 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IUIElementStatics3[] = L"Windows.UI.Xaml.IUIElementStatics3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0253 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0253_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0253_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IUIElementStatics3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D1F87ADE-ECA1-4561-A32B-64601B4E0597")
                    IUIElementStatics3 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transform3DProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CanDragProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE TryStartDirectManipulation( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Input::IPointer *value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IUIElementStatics3 = __uuidof(IUIElementStatics3);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transform3DProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanDragProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *TryStartDirectManipulation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CInput_CIPointer *value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_get_Transform3DProperty(This,value)	\
    ( (This)->lpVtbl -> get_Transform3DProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_get_CanDragProperty(This,value)	\
    ( (This)->lpVtbl -> get_CanDragProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_TryStartDirectManipulation(This,value,returnValue)	\
    ( (This)->lpVtbl -> TryStartDirectManipulation(This,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIUIElementStatics3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0254 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState[] = L"Windows.UI.Xaml.IVisualState";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0254 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0254_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0254_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualState */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualState */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6320AFFC-C31A-4450-AFDE-F6EA7BD1F586")
                    IVisualState : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Storyboard( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Storyboard( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualState = __uuidof(IVisualState);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualState
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_get_Storyboard(This,value)	\
    ( (This)->lpVtbl -> get_Storyboard(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState_put_Storyboard(This,value)	\
    ( (This)->lpVtbl -> put_Storyboard(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0255 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualState2[] = L"Windows.UI.Xaml.IVisualState2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0255 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0255_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0255_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualState2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualState2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualState2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("0FA0F896-64C0-45FB-8D24-FB83298C0D93")
                    IVisualState2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Setters( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetterBaseCollection **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StateTriggers( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualState2 = __uuidof(IVisualState2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Setters )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetterBaseCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StateTriggers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualState2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CStateTriggerBase **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualState2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualState2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_get_Setters(This,value)	\
    ( (This)->lpVtbl -> get_Setters(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualState2_get_StateTriggers(This,value)	\
    ( (This)->lpVtbl -> get_StateTriggers(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualState2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0256 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateGroup[] = L"Windows.UI.Xaml.IVisualStateGroup";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0256 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0256_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0256_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateGroup */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E4F9D9A4-E028-44DE-9B15-4929AE0A26C2")
                    IVisualStateGroup : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Transitions( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualTransition **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_States( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualState **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CurrentState( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualState **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanging( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateChangedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanging( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateGroup = __uuidof(IVisualStateGroup);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Transitions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualTransition **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_States )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualState **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState **value);
        
        HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_Transitions(This,value)	\
    ( (This)->lpVtbl -> get_Transitions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_States(This,value)	\
    ( (This)->lpVtbl -> get_States(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_get_CurrentState(This,value)	\
    ( (This)->lpVtbl -> get_CurrentState(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_CurrentStateChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanged(This,token)	\
    ( (This)->lpVtbl -> remove_CurrentStateChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanging(This,value,token)	\
    ( (This)->lpVtbl -> add_CurrentStateChanging(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanging(This,token)	\
    ( (This)->lpVtbl -> remove_CurrentStateChanging(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0257 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManager[] = L"Windows.UI.Xaml.IVisualStateManager";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0257 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0257_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0257_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateManager */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6FDA9F9A-6FAB-4112-9258-1006A3C3476E")
                    IVisualStateManager : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateManager = __uuidof(IVisualStateManager);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0258 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerOverrides[] = L"Windows.UI.Xaml.IVisualStateManagerOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0258 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0258_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0258_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateManagerOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("4A66910E-7979-43C8-8FF4-EC6122750006")
                    IVisualStateManagerOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GoToStateCore( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControl *control,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *templateRoot,
                            /* [in] */ __RPC__in HSTRING stateName,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *group,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *state,
                            /* [in] */ boolean useTransitions,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateManagerOverrides = __uuidof(IVisualStateManagerOverrides);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GoToStateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl *control,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *templateRoot,
            /* [in] */ __RPC__in HSTRING stateName,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *group,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *state,
            /* [in] */ boolean useTransitions,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_GoToStateCore(This,control,templateRoot,stateName,group,state,useTransitions,returnValue)	\
    ( (This)->lpVtbl -> GoToStateCore(This,control,templateRoot,stateName,group,state,useTransitions,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0259 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerProtected[] = L"Windows.UI.Xaml.IVisualStateManagerProtected";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0259 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0259_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0259_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateManagerProtected */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("4B3B8640-B0B7-404C-9EF4-D949640E245D")
                    IVisualStateManagerProtected : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanging( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *stateGroup,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *oldState,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *newState,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControl *control) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateGroup *stateGroup,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *oldState,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualState *newState,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControl *control) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateManagerProtected = __uuidof(IVisualStateManagerProtected);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *RaiseCurrentStateChanging )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *stateGroup,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *oldState,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *newState,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl *control);
        
        HRESULT ( STDMETHODCALLTYPE *RaiseCurrentStateChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateGroup *stateGroup,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *oldState,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualState *newState,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl *control);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtectedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanging(This,stateGroup,oldState,newState,control)	\
    ( (This)->lpVtbl -> RaiseCurrentStateChanging(This,stateGroup,oldState,newState,control) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanged(This,stateGroup,oldState,newState,control)	\
    ( (This)->lpVtbl -> RaiseCurrentStateChanged(This,stateGroup,oldState,newState,control) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0260 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerStatics[] = L"Windows.UI.Xaml.IVisualStateManagerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0260 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0260_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0260_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateManagerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("01D0E9E0-D713-414E-A74E-E63EC7AC8C3D")
                    IVisualStateManagerStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GetVisualStateGroups( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *obj,
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CustomVisualStateManagerProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetCustomVisualStateManager( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *obj,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualStateManager **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetCustomVisualStateManager( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IFrameworkElement *obj,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IVisualStateManager *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GoToState( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IControl *control,
                            /* [in] */ __RPC__in HSTRING stateName,
                            /* [in] */ boolean useTransitions,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateManagerStatics = __uuidof(IVisualStateManagerStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetVisualStateGroups )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *obj,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CVisualStateGroup **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CustomVisualStateManagerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetCustomVisualStateManager )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *obj,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager **value);
        
        HRESULT ( STDMETHODCALLTYPE *SetCustomVisualStateManager )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement *obj,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager *value);
        
        HRESULT ( STDMETHODCALLTYPE *GoToState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIControl *control,
            /* [in] */ __RPC__in HSTRING stateName,
            /* [in] */ boolean useTransitions,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetVisualStateGroups(This,obj,value)	\
    ( (This)->lpVtbl -> GetVisualStateGroups(This,obj,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_get_CustomVisualStateManagerProperty(This,value)	\
    ( (This)->lpVtbl -> get_CustomVisualStateManagerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GetCustomVisualStateManager(This,obj,value)	\
    ( (This)->lpVtbl -> GetCustomVisualStateManager(This,obj,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_SetCustomVisualStateManager(This,obj,value)	\
    ( (This)->lpVtbl -> SetCustomVisualStateManager(This,obj,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_GoToState(This,control,stateName,useTransitions,returnValue)	\
    ( (This)->lpVtbl -> GoToState(This,control,stateName,useTransitions,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0261 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualStateManagerFactory[] = L"Windows.UI.Xaml.IVisualStateManagerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0261 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0261_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0261_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualStateManagerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("85E598FD-A575-47B6-9E30-383CD08585F2")
                    IVisualStateManagerFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualStateManager **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualStateManagerFactory = __uuidof(IVisualStateManagerFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualStateManager **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0262 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransition[] = L"Windows.UI.Xaml.IVisualTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0262 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0262_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0262_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("55C5905E-2BC7-400D-AAA4-1A2981491EE0")
                    IVisualTransition : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GeneratedDuration( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GeneratedDuration( 
                            /* [in] */ ABI::Windows::UI::Xaml::Duration value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_GeneratedEasingFunction( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_GeneratedEasingFunction( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_To( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_To( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_From( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_From( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Storyboard( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Storyboard( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualTransition = __uuidof(IVisualTransition);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GeneratedDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GeneratedDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_GeneratedEasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_GeneratedEasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_GeneratedDuration(This,value)	\
    ( (This)->lpVtbl -> get_GeneratedDuration(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_GeneratedDuration(This,value)	\
    ( (This)->lpVtbl -> put_GeneratedDuration(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_GeneratedEasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_GeneratedEasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_GeneratedEasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_GeneratedEasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_To(This,value)	\
    ( (This)->lpVtbl -> get_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_To(This,value)	\
    ( (This)->lpVtbl -> put_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_From(This,value)	\
    ( (This)->lpVtbl -> get_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_From(This,value)	\
    ( (This)->lpVtbl -> put_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_get_Storyboard(This,value)	\
    ( (This)->lpVtbl -> get_Storyboard(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransition_put_Storyboard(This,value)	\
    ( (This)->lpVtbl -> put_Storyboard(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0263 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IVisualTransitionFactory[] = L"Windows.UI.Xaml.IVisualTransitionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0263 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0263_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0263_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IVisualTransitionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("EA75864F-D1E0-4DAE-B429-89FC322724F4")
                    IVisualTransitionFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IVisualTransition **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IVisualTransitionFactory = __uuidof(IVisualTransitionFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIVisualTransition **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0264 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTrigger[] = L"Windows.UI.Xaml.IAdaptiveTrigger";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0264 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0264_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0264_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IAdaptiveTrigger */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A5F04119-0CD9-49F1-A23F-44E547AB9F1A")
                    IAdaptiveTrigger : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWindowWidth( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinWindowWidth( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWindowHeight( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinWindowHeight( 
                            /* [in] */ DOUBLE value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IAdaptiveTrigger = __uuidof(IAdaptiveTrigger);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWindowWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinWindowWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWindowHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinWindowHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowWidth(This,value)	\
    ( (This)->lpVtbl -> get_MinWindowWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowWidth(This,value)	\
    ( (This)->lpVtbl -> put_MinWindowWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowHeight(This,value)	\
    ( (This)->lpVtbl -> get_MinWindowHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowHeight(This,value)	\
    ( (This)->lpVtbl -> put_MinWindowHeight(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0265 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerStatics[] = L"Windows.UI.Xaml.IAdaptiveTriggerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0265 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0265_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0265_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IAdaptiveTriggerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("B92E29EA-1615-4350-9C3B-92B2986BF444")
                    IAdaptiveTriggerStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWindowWidthProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWindowHeightProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IAdaptiveTriggerStatics = __uuidof(IAdaptiveTriggerStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWindowWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWindowHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinWindowWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinWindowHeightProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0266 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IAdaptiveTriggerFactory[] = L"Windows.UI.Xaml.IAdaptiveTriggerFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0266 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0266_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0266_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IAdaptiveTriggerFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C966D482-5AEB-4841-9247-C1A0BDD6F59F")
                    IAdaptiveTriggerFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IAdaptiveTrigger **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IAdaptiveTriggerFactory = __uuidof(IAdaptiveTriggerFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTrigger **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0267 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IEventTrigger[] = L"Windows.UI.Xaml.IEventTrigger";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0267 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0267_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0267_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIEventTrigger */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IEventTrigger */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIEventTrigger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("DEF8F855-0B49-4087-B1A9-B8B38488F786")
                    IEventTrigger : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RoutedEvent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IRoutedEvent **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RoutedEvent( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEvent *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Actions( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CTriggerAction **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IEventTrigger = __uuidof(IEventTrigger);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RoutedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RoutedEvent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEvent *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Actions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIEventTrigger * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CTriggerAction **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIEventTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIEventTriggerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_get_RoutedEvent(This,value)	\
    ( (This)->lpVtbl -> get_RoutedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_put_RoutedEvent(This,value)	\
    ( (This)->lpVtbl -> put_RoutedEvent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIEventTrigger_get_Actions(This,value)	\
    ( (This)->lpVtbl -> get_Actions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0268 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement[] = L"Windows.UI.Xaml.IFrameworkElement";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0268 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0268_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0268_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElement */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A391D09B-4A99-4B7C-9D8D-6FA5D01F6FBF")
                    IFrameworkElement : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Triggers( 
                            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CTriggerBase **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Resources( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Resources( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Tag( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Tag( 
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Language( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Language( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualWidth( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualHeight( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Width( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Width( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Height( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Height( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWidth( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinWidth( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxWidth( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxWidth( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinHeight( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinHeight( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxHeight( 
                            /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxHeight( 
                            /* [in] */ DOUBLE value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignment( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::HorizontalAlignment *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalAlignment( 
                            /* [in] */ ABI::Windows::UI::Xaml::HorizontalAlignment value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignment( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::VerticalAlignment *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalAlignment( 
                            /* [in] */ ABI::Windows::UI::Xaml::VerticalAlignment value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Margin( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Thickness *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Margin( 
                            /* [in] */ ABI::Windows::UI::Xaml::Thickness value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
                            /* [in] */ __RPC__in HSTRING value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BaseUri( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataContext( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DataContext( 
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Style( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IStyle **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Style( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IStyle *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlowDirection( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::FlowDirection *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FlowDirection( 
                            /* [in] */ ABI::Windows::UI::Xaml::FlowDirection value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Loaded( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Loaded( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Unloaded( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IRoutedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Unloaded( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_SizeChanged( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISizeChangedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_LayoutUpdated( 
                            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_LayoutUpdated( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FindName( 
                            /* [in] */ __RPC__in HSTRING name,
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE SetBinding( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Data::IBindingBase *binding) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElement = __uuidof(IFrameworkElement);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Triggers )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CTriggerBase **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Resources )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Resources )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Tag )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Tag )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Language )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxWidth )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxHeight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CHorizontalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CVerticalAlignment value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Margin )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CThickness *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Margin )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CThickness value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BaseUri )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataContext )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataContext )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Style )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIStyle **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Style )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIStyle *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlowDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CFlowDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FlowDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CFlowDirection value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Loaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Loaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Unloaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIRoutedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Unloaded )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_SizeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISizeChangedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_SizeChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_LayoutUpdated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_LayoutUpdated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *FindName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetBinding )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CData_CIBindingBase *binding);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Triggers(This,value)	\
    ( (This)->lpVtbl -> get_Triggers(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Resources(This,value)	\
    ( (This)->lpVtbl -> get_Resources(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Resources(This,value)	\
    ( (This)->lpVtbl -> put_Resources(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Tag(This,value)	\
    ( (This)->lpVtbl -> get_Tag(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Tag(This,value)	\
    ( (This)->lpVtbl -> put_Tag(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Language(This,value)	\
    ( (This)->lpVtbl -> get_Language(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Language(This,value)	\
    ( (This)->lpVtbl -> put_Language(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_ActualWidth(This,value)	\
    ( (This)->lpVtbl -> get_ActualWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_ActualHeight(This,value)	\
    ( (This)->lpVtbl -> get_ActualHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Width(This,value)	\
    ( (This)->lpVtbl -> get_Width(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Width(This,value)	\
    ( (This)->lpVtbl -> put_Width(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Height(This,value)	\
    ( (This)->lpVtbl -> get_Height(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Height(This,value)	\
    ( (This)->lpVtbl -> put_Height(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MinWidth(This,value)	\
    ( (This)->lpVtbl -> get_MinWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MinWidth(This,value)	\
    ( (This)->lpVtbl -> put_MinWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MaxWidth(This,value)	\
    ( (This)->lpVtbl -> get_MaxWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MaxWidth(This,value)	\
    ( (This)->lpVtbl -> put_MaxWidth(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MinHeight(This,value)	\
    ( (This)->lpVtbl -> get_MinHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MinHeight(This,value)	\
    ( (This)->lpVtbl -> put_MinHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_MaxHeight(This,value)	\
    ( (This)->lpVtbl -> get_MaxHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_MaxHeight(This,value)	\
    ( (This)->lpVtbl -> put_MaxHeight(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_HorizontalAlignment(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_HorizontalAlignment(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_VerticalAlignment(This,value)	\
    ( (This)->lpVtbl -> get_VerticalAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_VerticalAlignment(This,value)	\
    ( (This)->lpVtbl -> put_VerticalAlignment(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Margin(This,value)	\
    ( (This)->lpVtbl -> get_Margin(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Margin(This,value)	\
    ( (This)->lpVtbl -> put_Margin(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Name(This,value)	\
    ( (This)->lpVtbl -> put_Name(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_BaseUri(This,value)	\
    ( (This)->lpVtbl -> get_BaseUri(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_DataContext(This,value)	\
    ( (This)->lpVtbl -> get_DataContext(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_DataContext(This,value)	\
    ( (This)->lpVtbl -> put_DataContext(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Style(This,value)	\
    ( (This)->lpVtbl -> get_Style(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_Style(This,value)	\
    ( (This)->lpVtbl -> put_Style(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_Parent(This,value)	\
    ( (This)->lpVtbl -> get_Parent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_get_FlowDirection(This,value)	\
    ( (This)->lpVtbl -> get_FlowDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_put_FlowDirection(This,value)	\
    ( (This)->lpVtbl -> put_FlowDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_Loaded(This,value,token)	\
    ( (This)->lpVtbl -> add_Loaded(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_Loaded(This,token)	\
    ( (This)->lpVtbl -> remove_Loaded(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_Unloaded(This,value,token)	\
    ( (This)->lpVtbl -> add_Unloaded(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_Unloaded(This,token)	\
    ( (This)->lpVtbl -> remove_Unloaded(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_SizeChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_SizeChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_SizeChanged(This,token)	\
    ( (This)->lpVtbl -> remove_SizeChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_add_LayoutUpdated(This,value,token)	\
    ( (This)->lpVtbl -> add_LayoutUpdated(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_remove_LayoutUpdated(This,token)	\
    ( (This)->lpVtbl -> remove_LayoutUpdated(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_FindName(This,name,returnValue)	\
    ( (This)->lpVtbl -> FindName(This,name,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_SetBinding(This,dp,binding)	\
    ( (This)->lpVtbl -> SetBinding(This,dp,binding) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0269 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides[] = L"Windows.UI.Xaml.IFrameworkElementOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0269 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0269_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0269_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElementOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("DA007E54-B3C2-4B9A-AA8E-D3F071262B97")
                    IFrameworkElementOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE MeasureOverride( 
                            /* [in] */ ABI::Windows::Foundation::Size availableSize,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE ArrangeOverride( 
                            /* [in] */ ABI::Windows::Foundation::Size finalSize,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnApplyTemplate( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElementOverrides = __uuidof(IFrameworkElementOverrides);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *MeasureOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize availableSize,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *ArrangeOverride )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize finalSize,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *OnApplyTemplate )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_MeasureOverride(This,availableSize,returnValue)	\
    ( (This)->lpVtbl -> MeasureOverride(This,availableSize,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_ArrangeOverride(This,finalSize,returnValue)	\
    ( (This)->lpVtbl -> ArrangeOverride(This,finalSize,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_OnApplyTemplate(This)	\
    ( (This)->lpVtbl -> OnApplyTemplate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0270 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics[] = L"Windows.UI.Xaml.IFrameworkElementStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0270 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0270_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0270_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElementStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("48383032-FBEB-4F8A-AED2-EE21FB27A57B")
                    IFrameworkElementStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TagProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LanguageProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualWidthProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ActualHeightProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WidthProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HeightProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinWidthProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxWidthProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinHeightProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxHeightProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalAlignmentProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MarginProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_NameProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DataContextProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StyleProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FlowDirectionProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElementStatics = __uuidof(IFrameworkElementStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TagProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ActualHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxWidthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxHeightProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MarginProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_NameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataContextProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StyleProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FlowDirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_TagProperty(This,value)	\
    ( (This)->lpVtbl -> get_TagProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_LanguageProperty(This,value)	\
    ( (This)->lpVtbl -> get_LanguageProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_ActualWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ActualWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_ActualHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_ActualHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_WidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_WidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_HeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_HeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MinWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MaxWidthProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxWidthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MinHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MinHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MaxHeightProperty(This,value)	\
    ( (This)->lpVtbl -> get_MaxHeightProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_HorizontalAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_VerticalAlignmentProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalAlignmentProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_MarginProperty(This,value)	\
    ( (This)->lpVtbl -> get_MarginProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_NameProperty(This,value)	\
    ( (This)->lpVtbl -> get_NameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_DataContextProperty(This,value)	\
    ( (This)->lpVtbl -> get_DataContextProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_StyleProperty(This,value)	\
    ( (This)->lpVtbl -> get_StyleProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_get_FlowDirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_FlowDirectionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0271 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementFactory[] = L"Windows.UI.Xaml.IFrameworkElementFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0271 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0271_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0271_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElementFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("DEAEE126-03CA-4966-B576-604CCE93B5E8")
                    IFrameworkElementFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IFrameworkElement **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElementFactory = __uuidof(IFrameworkElementFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0272 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement2[] = L"Windows.UI.Xaml.IFrameworkElement2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0272 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0272_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0272_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElement2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("F19104BE-422A-4904-A52F-EE72010429E5")
                    IFrameworkElement2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RequestedTheme( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::ElementTheme *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RequestedTheme( 
                            /* [in] */ ABI::Windows::UI::Xaml::ElementTheme value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_DataContextChanged( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_DataContextChanged( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetBindingExpression( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *dp,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Data::IBindingExpression **returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElement2 = __uuidof(IFrameworkElement2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestedTheme )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CElementTheme *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RequestedTheme )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CElementTheme value);
        
        HRESULT ( STDMETHODCALLTYPE *add_DataContextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_Windows__CUI__CXaml__CDataContextChangedEventArgs *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_DataContextChanged )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *GetBindingExpression )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *dp,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CData_CIBindingExpression **returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_get_RequestedTheme(This,value)	\
    ( (This)->lpVtbl -> get_RequestedTheme(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_put_RequestedTheme(This,value)	\
    ( (This)->lpVtbl -> put_RequestedTheme(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_add_DataContextChanged(This,value,token)	\
    ( (This)->lpVtbl -> add_DataContextChanged(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_remove_DataContextChanged(This,token)	\
    ( (This)->lpVtbl -> remove_DataContextChanged(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_GetBindingExpression(This,dp,returnValue)	\
    ( (This)->lpVtbl -> GetBindingExpression(This,dp,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0273 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementOverrides2[] = L"Windows.UI.Xaml.IFrameworkElementOverrides2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0273 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0273_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0273_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElementOverrides2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("CB5CD2B9-E3B4-458C-B64E-1434FD1BD88A")
                    IFrameworkElementOverrides2 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE GoToElementStateCore( 
                            /* [in] */ __RPC__in HSTRING stateName,
                            /* [in] */ boolean useTransitions,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElementOverrides2 = __uuidof(IFrameworkElementOverrides2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GoToElementStateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2 * This,
            /* [in] */ __RPC__in HSTRING stateName,
            /* [in] */ boolean useTransitions,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_GoToElementStateCore(This,stateName,useTransitions,returnValue)	\
    ( (This)->lpVtbl -> GoToElementStateCore(This,stateName,useTransitions,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementOverrides2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0274 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElementStatics2[] = L"Windows.UI.Xaml.IFrameworkElementStatics2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0274 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0274_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0274_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElementStatics2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("9695DB02-C0D8-4FA2-B100-3FA2DF8B9538")
                    IFrameworkElementStatics2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RequestedThemeProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElementStatics2 = __uuidof(IFrameworkElementStatics2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestedThemeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_get_RequestedThemeProperty(This,value)	\
    ( (This)->lpVtbl -> get_RequestedThemeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElementStatics2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0275 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkElement3[] = L"Windows.UI.Xaml.IFrameworkElement3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0275 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0275_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0275_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkElement3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("C81C2720-5C52-4BBE-A199-2B1E34F00F70")
                    IFrameworkElement3 : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE add_Loading( 
                            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Loading( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkElement3 = __uuidof(IFrameworkElement3);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *add_Loading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [in] */ __RPC__in_opt __FITypedEventHandler_2_Windows__CUI__CXaml__CFrameworkElement_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Loading )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3 * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_add_Loading(This,value,token)	\
    ( (This)->lpVtbl -> add_Loading(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_remove_Loading(This,token)	\
    ( (This)->lpVtbl -> remove_Loading(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkElement3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0276 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IMediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.IMediaFailedRoutedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0276 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0276_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0276_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IMediaFailedRoutedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("46D1FA8D-5149-4153-BA3C-B03E64EE531E")
                    IMediaFailedRoutedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ErrorTrace( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IMediaFailedRoutedEventArgs = __uuidof(IMediaFailedRoutedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorTrace )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_get_ErrorTrace(This,value)	\
    ( (This)->lpVtbl -> get_ErrorTrace(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0277 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter[] = L"Windows.UI.Xaml.ISetter";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0277 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0277_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0277_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetter */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetter */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A73DED29-B4AE-4A81-BE85-E690BA0D3B6E")
                    ISetter : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Property( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Property( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                            /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISetter = __uuidof(ISetter);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Property )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetterVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetter
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetter_get_Property(This,value)	\
    ( (This)->lpVtbl -> get_Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_put_Property(This,value)	\
    ( (This)->lpVtbl -> put_Property(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetter_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0278 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetterFactory[] = L"Windows.UI.Xaml.ISetterFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0278 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0278_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0278_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetterFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetterFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetterFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("D3CA3D42-09B1-49D5-8891-E7B5648E02A2")
                    ISetterFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyProperty *targetProperty,
                            /* [in] */ __RPC__in_opt IInspectable *value,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ISetter **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISetterFactory = __uuidof(ISetterFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetterFactory * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty *targetProperty,
            /* [in] */ __RPC__in_opt IInspectable *value,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CISetter **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetterFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetterFactory_CreateInstance(This,targetProperty,value,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,targetProperty,value,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0279 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISetter2[] = L"Windows.UI.Xaml.ISetter2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0279 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0279_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0279_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISetter2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISetter2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISetter2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("70169561-05B1-4FA3-9D53-8E0C8C747AFC")
                    ISetter2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Target( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::ITargetPropertyPath **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Target( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ITargetPropertyPath *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISetter2 = __uuidof(ISetter2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Target )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISetter2 * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CITargetPropertyPath *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISetter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISetter2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISetter2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISetter2_get_Target(This,value)	\
    ( (This)->lpVtbl -> get_Target(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISetter2_put_Target(This,value)	\
    ( (This)->lpVtbl -> put_Target(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISetter2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0280 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTrigger[] = L"Windows.UI.Xaml.IStateTrigger";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0280 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0280_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0280_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStateTrigger */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStateTrigger */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTrigger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("67ADEF2E-D8D9-49F7-A1FD-2E35EEDD23CD")
                    IStateTrigger : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActive( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsActive( 
                            /* [in] */ boolean value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStateTrigger = __uuidof(IStateTrigger);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsActive )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTrigger * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStateTrigger
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_get_IsActive(This,value)	\
    ( (This)->lpVtbl -> get_IsActive(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTrigger_put_IsActive(This,value)	\
    ( (This)->lpVtbl -> put_IsActive(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0281 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IStateTriggerStatics[] = L"Windows.UI.Xaml.IStateTriggerStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0281 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0281_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0281_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IStateTriggerStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("71E95C90-B3FE-4DD3-A8A8-44A2CE25E0B8")
                    IStateTriggerStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsActiveProperty( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IStateTriggerStatics = __uuidof(IStateTriggerStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsActiveProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_get_IsActiveProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsActiveProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0282 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelper[] = L"Windows.UI.Xaml.IGridLengthHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0282 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0282_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0282_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IGridLengthHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("7A826CE1-07A0-4083-B6D1-B1D917B976AC")
                    IGridLengthHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IGridLengthHelper = __uuidof(IGridLengthHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0283 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IGridLengthHelperStatics[] = L"Windows.UI.Xaml.IGridLengthHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0283 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0283_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0283_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IGridLengthHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("9D457B9B-019F-4266-8872-215F198F6A9D")
                    IGridLengthHelperStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Auto( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::GridLength *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromPixels( 
                            /* [in] */ DOUBLE pixels,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::GridLength *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromValueAndType( 
                            /* [in] */ DOUBLE value,
                            /* [in] */ ABI::Windows::UI::Xaml::GridUnitType type,
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::GridLength *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetIsAbsolute( 
                            /* [in] */ ABI::Windows::UI::Xaml::GridLength target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetIsAuto( 
                            /* [in] */ ABI::Windows::UI::Xaml::GridLength target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetIsStar( 
                            /* [in] */ ABI::Windows::UI::Xaml::GridLength target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Equals( 
                            /* [in] */ ABI::Windows::UI::Xaml::GridLength target,
                            /* [in] */ ABI::Windows::UI::Xaml::GridLength value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IGridLengthHelperStatics = __uuidof(IGridLengthHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Auto )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength *value);
        
        HRESULT ( STDMETHODCALLTYPE *FromPixels )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ DOUBLE pixels,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromValueAndType )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ DOUBLE value,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridUnitType type,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CGridLength *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsAbsolute )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsAuto )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsStar )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *Equals )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength target,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CGridLength value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_get_Auto(This,value)	\
    ( (This)->lpVtbl -> get_Auto(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FromPixels(This,pixels,returnValue)	\
    ( (This)->lpVtbl -> FromPixels(This,pixels,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_FromValueAndType(This,value,type,returnValue)	\
    ( (This)->lpVtbl -> FromValueAndType(This,value,type,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsAbsolute(This,target,value)	\
    ( (This)->lpVtbl -> GetIsAbsolute(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsAuto(This,target,value)	\
    ( (This)->lpVtbl -> GetIsAuto(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_GetIsStar(This,target,value)	\
    ( (This)->lpVtbl -> GetIsStar(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_Equals(This,target,value,returnValue)	\
    ( (This)->lpVtbl -> Equals(This,target,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0284 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IBindingFailedEventArgs[] = L"Windows.UI.Xaml.IBindingFailedEventArgs";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0284 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0284_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0284_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IBindingFailedEventArgs */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("32C1D013-4DBD-446D-BBB8-0DE35048A449")
                    IBindingFailedEventArgs : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Message( 
                            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IBindingFailedEventArgs = __uuidof(IBindingFailedEventArgs);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_get_Message(This,value)	\
    ( (This)->lpVtbl -> get_Message(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0285 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings[] = L"Windows.UI.Xaml.IDebugSettings";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0285 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0285_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0285_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDebugSettings */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("3D451F98-C6A7-4D17-8398-D83A067183D8")
                    IDebugSettings : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableFrameRateCounter( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableFrameRateCounter( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsBindingTracingEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsBindingTracingEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsOverdrawHeatMapEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsOverdrawHeatMapEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_BindingFailed( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IBindingFailedEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_BindingFailed( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDebugSettings = __uuidof(IDebugSettings);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableFrameRateCounter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableFrameRateCounter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsBindingTracingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsBindingTracingEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsOverdrawHeatMapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsOverdrawHeatMapEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ boolean value);
        
        HRESULT ( STDMETHODCALLTYPE *add_BindingFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIBindingFailedEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_BindingFailed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettingsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_EnableFrameRateCounter(This,value)	\
    ( (This)->lpVtbl -> get_EnableFrameRateCounter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_EnableFrameRateCounter(This,value)	\
    ( (This)->lpVtbl -> put_EnableFrameRateCounter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_IsBindingTracingEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsBindingTracingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_IsBindingTracingEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsBindingTracingEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_get_IsOverdrawHeatMapEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsOverdrawHeatMapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_put_IsOverdrawHeatMapEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsOverdrawHeatMapEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_add_BindingFailed(This,value,token)	\
    ( (This)->lpVtbl -> add_BindingFailed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings_remove_BindingFailed(This,token)	\
    ( (This)->lpVtbl -> remove_BindingFailed(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0286 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings2[] = L"Windows.UI.Xaml.IDebugSettings2";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0286 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0286_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0286_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDebugSettings2 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("48D37585-E1A6-469B-83C8-30825037119E")
                    IDebugSettings2 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableRedrawRegions( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableRedrawRegions( 
                            /* [in] */ boolean value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDebugSettings2 = __uuidof(IDebugSettings2);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableRedrawRegions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableRedrawRegions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2 * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_get_EnableRedrawRegions(This,value)	\
    ( (This)->lpVtbl -> get_EnableRedrawRegions(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_put_EnableRedrawRegions(This,value)	\
    ( (This)->lpVtbl -> put_EnableRedrawRegions(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings2_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0287 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IDebugSettings3[] = L"Windows.UI.Xaml.IDebugSettings3";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0287 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0287_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0287_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IDebugSettings3 */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIDebugSettings3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E6BB5022-0625-479F-8E32-4B583D73B7AC")
                    IDebugSettings3 : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTextPerformanceVisualizationEnabled( 
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsTextPerformanceVisualizationEnabled( 
                            /* [in] */ boolean value) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IDebugSettings3 = __uuidof(IDebugSettings3);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTextPerformanceVisualizationEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsTextPerformanceVisualizationEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3 * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_get_IsTextPerformanceVisualizationEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsTextPerformanceVisualizationEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_put_IsTextPerformanceVisualizationEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsTextPerformanceVisualizationEnabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIDebugSettings3_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0288 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplication[] = L"Windows.UI.Xaml.IApplication";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0288 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0288_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0288_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplication */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplication */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplication;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("74B861A1-7487-46A9-9A6E-C78B512726C5")
                    IApplication : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Resources( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IResourceDictionary **value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Resources( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IResourceDictionary *value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DebugSettings( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDebugSettings **value) = 0;
                        
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RequestedTheme( 
                            /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::ApplicationTheme *value) = 0;
                        
                        virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RequestedTheme( 
                            /* [in] */ ABI::Windows::UI::Xaml::ApplicationTheme value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_UnhandledException( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUnhandledExceptionEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_UnhandledException( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Suspending( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::ISuspendingEventHandler *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Suspending( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE add_Resuming( 
                            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                            /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE remove_Resuming( 
                            /* [in] */ EventRegistrationToken token) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Exit( void) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IApplication = __uuidof(IApplication);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Resources )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Resources )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIResourceDictionary *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DebugSettings )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDebugSettings **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequestedTheme )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CApplicationTheme *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RequestedTheme )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CApplicationTheme value);
        
        HRESULT ( STDMETHODCALLTYPE *add_UnhandledException )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUnhandledExceptionEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_UnhandledException )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Suspending )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CISuspendingEventHandler *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Suspending )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *add_Resuming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Resuming )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This,
            /* [in] */ EventRegistrationToken token);
        
        HRESULT ( STDMETHODCALLTYPE *Exit )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplication * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplication
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplication_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_Resources(This,value)	\
    ( (This)->lpVtbl -> get_Resources(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_put_Resources(This,value)	\
    ( (This)->lpVtbl -> put_Resources(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_DebugSettings(This,value)	\
    ( (This)->lpVtbl -> get_DebugSettings(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_get_RequestedTheme(This,value)	\
    ( (This)->lpVtbl -> get_RequestedTheme(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_put_RequestedTheme(This,value)	\
    ( (This)->lpVtbl -> put_RequestedTheme(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_UnhandledException(This,value,token)	\
    ( (This)->lpVtbl -> add_UnhandledException(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_UnhandledException(This,token)	\
    ( (This)->lpVtbl -> remove_UnhandledException(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_Suspending(This,value,token)	\
    ( (This)->lpVtbl -> add_Suspending(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_Suspending(This,token)	\
    ( (This)->lpVtbl -> remove_Suspending(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_add_Resuming(This,value,token)	\
    ( (This)->lpVtbl -> add_Resuming(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_remove_Resuming(This,token)	\
    ( (This)->lpVtbl -> remove_Resuming(This,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplication_Exit(This)	\
    ( (This)->lpVtbl -> Exit(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplication_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0289 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationOverrides[] = L"Windows.UI.Xaml.IApplicationOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0289 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0289_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0289_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplicationOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("25F99FF7-9347-459A-9FAC-B2D0E11C1A0F")
                    IApplicationOverrides : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE OnActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::IActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnLaunched( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnFileActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::IFileActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnSearchActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnShareTargetActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnFileOpenPickerActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnFileSavePickerActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnCachedFileUpdaterActivated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs *args) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE OnWindowCreated( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IWindowCreatedEventArgs *args) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IApplicationOverrides = __uuidof(IApplicationOverrides);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *OnActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnLaunched )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnFileActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnSearchActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnShareTargetActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnFileOpenPickerActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnFileSavePickerActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnCachedFileUpdaterActivated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs *args);
        
        HRESULT ( STDMETHODCALLTYPE *OnWindowCreated )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIWindowCreatedEventArgs *args);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnActivated(This,args)	\
    ( (This)->lpVtbl -> OnActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnLaunched(This,args)	\
    ( (This)->lpVtbl -> OnLaunched(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileActivated(This,args)	\
    ( (This)->lpVtbl -> OnFileActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnSearchActivated(This,args)	\
    ( (This)->lpVtbl -> OnSearchActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnShareTargetActivated(This,args)	\
    ( (This)->lpVtbl -> OnShareTargetActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileOpenPickerActivated(This,args)	\
    ( (This)->lpVtbl -> OnFileOpenPickerActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnFileSavePickerActivated(This,args)	\
    ( (This)->lpVtbl -> OnFileSavePickerActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnCachedFileUpdaterActivated(This,args)	\
    ( (This)->lpVtbl -> OnCachedFileUpdaterActivated(This,args) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_OnWindowCreated(This,args)	\
    ( (This)->lpVtbl -> OnWindowCreated(This,args) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0290 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationStatics[] = L"Windows.UI.Xaml.IApplicationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0290 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0290_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0290_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplicationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("06499997-F7B4-45FE-B763-7577D1D3CB4A")
                    IApplicationStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IApplication **value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Start( 
                            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IApplicationInitializationCallback *callback) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE LoadComponent( 
                            /* [in] */ __RPC__in_opt IInspectable *component,
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *resourceLocator) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE LoadComponentWithResourceLocation( 
                            /* [in] */ __RPC__in_opt IInspectable *component,
                            /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *resourceLocator,
                            /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation componentResourceLocation) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IApplicationStatics = __uuidof(IApplicationStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIApplication **value);
        
        HRESULT ( STDMETHODCALLTYPE *Start )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIApplicationInitializationCallback *callback);
        
        HRESULT ( STDMETHODCALLTYPE *LoadComponent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [in] */ __RPC__in_opt IInspectable *component,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *resourceLocator);
        
        HRESULT ( STDMETHODCALLTYPE *LoadComponentWithResourceLocation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics * This,
            /* [in] */ __RPC__in_opt IInspectable *component,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *resourceLocator,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation componentResourceLocation);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_get_Current(This,value)	\
    ( (This)->lpVtbl -> get_Current(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_Start(This,callback)	\
    ( (This)->lpVtbl -> Start(This,callback) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_LoadComponent(This,component,resourceLocator)	\
    ( (This)->lpVtbl -> LoadComponent(This,component,resourceLocator) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_LoadComponentWithResourceLocation(This,component,resourceLocator,componentResourceLocation)	\
    ( (This)->lpVtbl -> LoadComponentWithResourceLocation(This,component,resourceLocator,componentResourceLocation) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0291 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IApplicationFactory[] = L"Windows.UI.Xaml.IApplicationFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0291 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0291_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0291_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IApplicationFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIApplicationFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("93BBE361-BE5A-4EE3-B4A3-95118DC97A89")
                    IApplicationFactory : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                            /* [in] */ __RPC__in_opt IInspectable *outer,
                            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                            /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IApplication **instance) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IApplicationFactory = __uuidof(IApplicationFactory);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIApplication **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIApplicationFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0292 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IFrameworkViewSource[] = L"Windows.UI.Xaml.IFrameworkViewSource";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0292 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0292_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0292_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IFrameworkViewSource */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E3B077DA-35AD-4B09-B5B2-27420041BA9F")
                    IFrameworkViewSource : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IFrameworkViewSource = __uuidof(IFrameworkViewSource);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSourceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0293 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelper[] = L"Windows.UI.Xaml.IPointHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0293 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0293_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0293_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPointHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPointHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("727BDD92-64B0-49CF-A321-A9793E73E2E7")
                    IPointHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IPointHelper = __uuidof(IPointHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPointHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0294 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IPointHelperStatics[] = L"Windows.UI.Xaml.IPointHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0294 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0294_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0294_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IPointHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("015ACA75-76D8-4B7E-8A33-7D79204691EE")
                    IPointHelperStatics : public IInspectable
                    {
                    public:
                        virtual HRESULT STDMETHODCALLTYPE FromCoordinates( 
                            /* [in] */ FLOAT x,
                            /* [in] */ FLOAT y,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IPointHelperStatics = __uuidof(IPointHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FromCoordinates )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics * This,
            /* [in] */ FLOAT x,
            /* [in] */ FLOAT y,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIPointHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_FromCoordinates(This,x,y,returnValue)	\
    ( (This)->lpVtbl -> FromCoordinates(This,x,y,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0295 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelper[] = L"Windows.UI.Xaml.IRectHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0295 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0295_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0295_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRectHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRectHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("A38781E2-4BFB-4EE2-AFE5-89F31B37478D")
                    IRectHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_IRectHelper = __uuidof(IRectHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRectHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0296 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_IRectHelperStatics[] = L"Windows.UI.Xaml.IRectHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0296 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0296_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0296_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::IRectHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("5EE163E4-C17E-494F-B580-2F0574FC3A15")
                    IRectHelperStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Empty( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromCoordinatesAndDimensions( 
                            /* [in] */ FLOAT x,
                            /* [in] */ FLOAT y,
                            /* [in] */ FLOAT width,
                            /* [in] */ FLOAT height,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromPoints( 
                            /* [in] */ ABI::Windows::Foundation::Point point1,
                            /* [in] */ ABI::Windows::Foundation::Point point2,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromLocationAndSize( 
                            /* [in] */ ABI::Windows::Foundation::Point location,
                            /* [in] */ ABI::Windows::Foundation::Size size,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetIsEmpty( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetBottom( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetLeft( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetRight( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetTop( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [out][retval] */ __RPC__out FLOAT *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Contains( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [in] */ ABI::Windows::Foundation::Point point,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Equals( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [in] */ ABI::Windows::Foundation::Rect value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Intersect( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [in] */ ABI::Windows::Foundation::Rect rect,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE UnionWithPoint( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [in] */ ABI::Windows::Foundation::Point point,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE UnionWithRect( 
                            /* [in] */ ABI::Windows::Foundation::Rect target,
                            /* [in] */ ABI::Windows::Foundation::Rect rect,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Rect *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_IRectHelperStatics = __uuidof(IRectHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Empty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *value);
        
        HRESULT ( STDMETHODCALLTYPE *FromCoordinatesAndDimensions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ FLOAT x,
            /* [in] */ FLOAT y,
            /* [in] */ FLOAT width,
            /* [in] */ FLOAT height,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromPoints )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point1,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point2,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromLocationAndSize )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint location,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize size,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsEmpty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetBottom )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetLeft )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetRight )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetTop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [out][retval] */ __RPC__out FLOAT *value);
        
        HRESULT ( STDMETHODCALLTYPE *Contains )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Equals )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *Intersect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect rect,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *UnionWithPoint )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint point,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *UnionWithRect )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CRect rect,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CRect *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CIRectHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_get_Empty(This,value)	\
    ( (This)->lpVtbl -> get_Empty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromCoordinatesAndDimensions(This,x,y,width,height,returnValue)	\
    ( (This)->lpVtbl -> FromCoordinatesAndDimensions(This,x,y,width,height,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromPoints(This,point1,point2,returnValue)	\
    ( (This)->lpVtbl -> FromPoints(This,point1,point2,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_FromLocationAndSize(This,location,size,returnValue)	\
    ( (This)->lpVtbl -> FromLocationAndSize(This,location,size,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetIsEmpty(This,target,value)	\
    ( (This)->lpVtbl -> GetIsEmpty(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetBottom(This,target,value)	\
    ( (This)->lpVtbl -> GetBottom(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetLeft(This,target,value)	\
    ( (This)->lpVtbl -> GetLeft(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetRight(This,target,value)	\
    ( (This)->lpVtbl -> GetRight(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_GetTop(This,target,value)	\
    ( (This)->lpVtbl -> GetTop(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Contains(This,target,point,returnValue)	\
    ( (This)->lpVtbl -> Contains(This,target,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Equals(This,target,value,returnValue)	\
    ( (This)->lpVtbl -> Equals(This,target,value,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_Intersect(This,target,rect,returnValue)	\
    ( (This)->lpVtbl -> Intersect(This,target,rect,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_UnionWithPoint(This,target,point,returnValue)	\
    ( (This)->lpVtbl -> UnionWithPoint(This,target,point,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_UnionWithRect(This,target,rect,returnValue)	\
    ( (This)->lpVtbl -> UnionWithRect(This,target,rect,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0297 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelper[] = L"Windows.UI.Xaml.ISizeHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0297 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0297_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0297_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISizeHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISizeHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("E7225A94-5D03-4A03-BA94-967FC68FCEFE")
                    ISizeHelper : public IInspectable
                    {
                    public:
                    };

                    extern const __declspec(selectany) IID & IID_ISizeHelper = __uuidof(ISizeHelper);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISizeHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0298 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_ISizeHelperStatics[] = L"Windows.UI.Xaml.ISizeHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0298 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0298_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0298_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::ISizeHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    
                    MIDL_INTERFACE("6286C5B2-CF78-4915-AA40-76004A165F5E")
                    ISizeHelperStatics : public IInspectable
                    {
                    public:
                        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Empty( 
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE FromDimensions( 
                            /* [in] */ FLOAT width,
                            /* [in] */ FLOAT height,
                            /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Size *returnValue) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE GetIsEmpty( 
                            /* [in] */ ABI::Windows::Foundation::Size target,
                            /* [out][retval] */ __RPC__out boolean *value) = 0;
                        
                        virtual HRESULT STDMETHODCALLTYPE Equals( 
                            /* [in] */ ABI::Windows::Foundation::Size target,
                            /* [in] */ ABI::Windows::Foundation::Size value,
                            /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                        
                    };

                    extern const __declspec(selectany) IID & IID_ISizeHelperStatics = __uuidof(ISizeHelperStatics);

                    
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Empty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *value);
        
        HRESULT ( STDMETHODCALLTYPE *FromDimensions )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [in] */ FLOAT width,
            /* [in] */ FLOAT height,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CSize *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsEmpty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *Equals )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize target,
            /* [in] */ __x_ABI_CWindows_CFoundation_CSize value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CISizeHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_get_Empty(This,value)	\
    ( (This)->lpVtbl -> get_Empty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_FromDimensions(This,width,height,returnValue)	\
    ( (This)->lpVtbl -> FromDimensions(This,width,height,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_GetIsEmpty(This,target,value)	\
    ( (This)->lpVtbl -> GetIsEmpty(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_Equals(This,target,value,returnValue)	\
    ( (This)->lpVtbl -> Equals(This,target,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl_0000_0299 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DispatcherTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DispatcherTimer[] = L"Windows.UI.Xaml.DispatcherTimer";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_CornerRadiusHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_CornerRadiusHelper[] = L"Windows.UI.Xaml.CornerRadiusHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DurationHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DurationHelper[] = L"Windows.UI.Xaml.DurationHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ThicknessHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ThicknessHelper[] = L"Windows.UI.Xaml.ThicknessHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ApplicationInitializationCallbackParams[] = L"Windows.UI.Xaml.ApplicationInitializationCallbackParams";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObject[] = L"Windows.UI.Xaml.DependencyObject";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyProperty_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyProperty[] = L"Windows.UI.Xaml.DependencyProperty";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyPropertyChangedEventArgs[] = L"Windows.UI.Xaml.DependencyPropertyChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEventArgs[] = L"Windows.UI.Xaml.RoutedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UnhandledExceptionEventArgs[] = L"Windows.UI.Xaml.UnhandledExceptionEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateChangedEventArgs[] = L"Windows.UI.Xaml.VisualStateChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataContextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataContextChangedEventArgs[] = L"Windows.UI.Xaml.DataContextChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplateKey_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplateKey[] = L"Windows.UI.Xaml.DataTemplateKey";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyMetadata_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyMetadata[] = L"Windows.UI.Xaml.PropertyMetadata";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragOperationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragOperationDeferral[] = L"Windows.UI.Xaml.DragOperationDeferral";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUI[] = L"Windows.UI.Xaml.DragUI";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragUIOverride_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragUIOverride[] = L"Windows.UI.Xaml.DragUIOverride";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkView[] = L"Windows.UI.Xaml.FrameworkView";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RoutedEvent_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RoutedEvent[] = L"Windows.UI.Xaml.RoutedEvent";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBaseCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBaseCollection[] = L"Windows.UI.Xaml.SetterBaseCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TargetPropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TargetPropertyPath[] = L"Windows.UI.Xaml.TargetPropertyPath";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerActionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerActionCollection[] = L"Windows.UI.Xaml.TriggerActionCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerCollection[] = L"Windows.UI.Xaml.TriggerCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Window_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Window[] = L"Windows.UI.Xaml.Window";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_WindowCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_WindowCreatedEventArgs[] = L"Windows.UI.Xaml.WindowCreatedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DependencyObjectCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DependencyObjectCollection[] = L"Windows.UI.Xaml.DependencyObjectCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragEventArgs[] = L"Windows.UI.Xaml.DragEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DragStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DragStartingEventArgs[] = L"Windows.UI.Xaml.DragStartingEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DropCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DropCompletedEventArgs[] = L"Windows.UI.Xaml.DropCompletedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ExceptionRoutedEventArgs[] = L"Windows.UI.Xaml.ExceptionRoutedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkTemplate[] = L"Windows.UI.Xaml.FrameworkTemplate";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DataTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DataTemplate[] = L"Windows.UI.Xaml.DataTemplate";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PropertyPath[] = L"Windows.UI.Xaml.PropertyPath";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_ResourceDictionary_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_ResourceDictionary[] = L"Windows.UI.Xaml.ResourceDictionary";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SetterBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SetterBase[] = L"Windows.UI.Xaml.SetterBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeChangedEventArgs[] = L"Windows.UI.Xaml.SizeChangedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTriggerBase[] = L"Windows.UI.Xaml.StateTriggerBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Style_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Style[] = L"Windows.UI.Xaml.Style";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerAction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerAction[] = L"Windows.UI.Xaml.TriggerAction";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_TriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_TriggerBase[] = L"Windows.UI.Xaml.TriggerBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_UIElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_UIElement[] = L"Windows.UI.Xaml.UIElement";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualState[] = L"Windows.UI.Xaml.VisualState";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateGroup[] = L"Windows.UI.Xaml.VisualStateGroup";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualStateManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualStateManager[] = L"Windows.UI.Xaml.VisualStateManager";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_VisualTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_VisualTransition[] = L"Windows.UI.Xaml.VisualTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_AdaptiveTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_AdaptiveTrigger[] = L"Windows.UI.Xaml.AdaptiveTrigger";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_EventTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_EventTrigger[] = L"Windows.UI.Xaml.EventTrigger";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkElement[] = L"Windows.UI.Xaml.FrameworkElement";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_MediaFailedRoutedEventArgs[] = L"Windows.UI.Xaml.MediaFailedRoutedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Setter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Setter[] = L"Windows.UI.Xaml.Setter";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_StateTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_StateTrigger[] = L"Windows.UI.Xaml.StateTrigger";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_GridLengthHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_GridLengthHelper[] = L"Windows.UI.Xaml.GridLengthHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_BindingFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_BindingFailedEventArgs[] = L"Windows.UI.Xaml.BindingFailedEventArgs";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_DebugSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_DebugSettings[] = L"Windows.UI.Xaml.DebugSettings";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Application_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Application[] = L"Windows.UI.Xaml.Application";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_FrameworkViewSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_FrameworkViewSource[] = L"Windows.UI.Xaml.FrameworkViewSource";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_PointHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_PointHelper[] = L"Windows.UI.Xaml.PointHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_RectHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_RectHelper[] = L"Windows.UI.Xaml.RectHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_SizeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_SizeHelper[] = L"Windows.UI.Xaml.SizeHelper";
#endif


/* interface __MIDL_itf_windows2Eui2Examl_0000_0299 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0299_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl_0000_0299_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


