//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Media.Playback.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Emedia2Eplayback_h__)")
cpp_quote("#include <Windows.Media.Playback.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eplayback_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Playback
        {
            runtimeclass MediaPlaybackItem;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            typedef enum RevocationAndRenewalReasons RevocationAndRenewalReasons;

            typedef enum RenewalStatus RenewalStatus;

            typedef enum GraphicsTrustStatus GraphicsTrustStatus;

            typedef enum ProtectionCapabilityResult ProtectionCapabilityResult;

            delegate ServiceRequestedEventHandler;

            delegate RebootNeededEventHandler;

            delegate ComponentLoadFailedEventHandler;

            interface IMediaProtectionManager;

            interface IMediaProtectionServiceCompletion;

            interface IServiceRequestedEventArgs;

            interface IMediaProtectionServiceRequest;

            interface IServiceRequestedEventArgs2;

            interface IComponentLoadFailedEventArgs;

            interface IRevocationAndRenewalInformation;

            interface IRevocationAndRenewalItem;

            interface IComponentRenewalStatics;

            interface IMediaProtectionPMPServerFactory;

            interface IMediaProtectionPMPServer;

            interface IProtectionCapabilities;

            runtimeclass MediaProtectionManager;

            runtimeclass ServiceRequestedEventArgs;

            runtimeclass ComponentLoadFailedEventArgs;

            runtimeclass MediaProtectionServiceCompletion;

            runtimeclass RevocationAndRenewalInformation;

            runtimeclass RevocationAndRenewalItem;

            runtimeclass MediaProtectionPMPServer;

            runtimeclass ComponentRenewal;

            runtimeclass ProtectionCapabilities;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Media.Protection.RevocationAndRenewalItem*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Media.Protection.RevocationAndRenewalItem*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Media.Protection.RevocationAndRenewalItem*>;

                interface Windows.Foundation.Collections.IVector<Windows.Media.Protection.RevocationAndRenewalItem*>;

                interface Windows.Foundation.IAsyncOperationWithProgress<Windows.Media.Protection.RenewalStatus, UINT32>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Media
    {
        namespace Protection
        {
            [flags]
            [version(0x06020000)]
            enum RevocationAndRenewalReasons
            {
                UserModeComponentLoad                     = 0x1,
                KernelModeComponentLoad                   = 0x2,
                AppComponent                              = 0x4,
                GlobalRevocationListLoadFailed            = 0x10,
                InvalidGlobalRevocationListSignature      = 0x20,
                GlobalRevocationListAbsent                = 0x1000,
                ComponentRevoked                          = 0x2000,
                InvalidComponentCertificateExtendedKeyUse = 0x4000,
                ComponentCertificateRevoked               = 0x8000,
                InvalidComponentCertificateRoot           = 0x10000,
                ComponentHighSecurityCertificateRevoked   = 0x20000,
                ComponentLowSecurityCertificateRevoked    = 0x40000,
                BootDriverVerificationFailed              = 0x100000,
                ComponentSignedWithTestCertificate        = 0x1000000,
                EncryptionFailure                         = 0x10000000
            };

            [version(0x06020000)]
            enum RenewalStatus
            {
                NotStarted                   = 0,
                UpdatesInProgress            = 1,
                UserCancelled                = 2,
                AppComponentsMayNeedUpdating = 3,
                NoComponentsFound            = 4
            };

            [version(0x06030000)]
            enum GraphicsTrustStatus
            {
                TrustNotRequired        = 0,
                TrustEstablished        = 1,
                EnvironmentNotSupported = 2,
                DriverNotSupported      = 3,
                DriverSigningFailure    = 4,
                UnknownFailure          = 5
            };

            [version(0x0A000000)]
            enum ProtectionCapabilityResult
            {
                NotSupported = 0,
                Maybe        = 1,
                Probably     = 2
            };

            [uuid(D2D690BA-CAC9-48E1-95C0-D38495A84055)]
            [version(0x06020000)]
            delegate
                HRESULT ServiceRequestedEventHandler([in] Windows.Media.Protection.MediaProtectionManager* sender, [in] Windows.Media.Protection.ServiceRequestedEventArgs* e);

            [uuid(64E12A45-973B-4A3A-B260-91898A49A82C)]
            [version(0x06020000)]
            delegate
                HRESULT RebootNeededEventHandler([in] Windows.Media.Protection.MediaProtectionManager* sender);

            [uuid(95DA643C-6DB9-424B-86CA-091AF432081C)]
            [version(0x06020000)]
            delegate
                HRESULT ComponentLoadFailedEventHandler([in] Windows.Media.Protection.MediaProtectionManager* sender, [in] Windows.Media.Protection.ComponentLoadFailedEventArgs* e);

            [exclusiveto(Windows.Media.Protection.MediaProtectionManager)]
            [uuid(45694947-C741-434B-A79E-474C12D93D2F)]
            [version(0x06020000)]
            interface IMediaProtectionManager : IInspectable
            {
                [eventadd] HRESULT ServiceRequested([in] Windows.Media.Protection.ServiceRequestedEventHandler* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT ServiceRequested([in] EventRegistrationToken cookie);
                [eventadd] HRESULT RebootNeeded([in] Windows.Media.Protection.RebootNeededEventHandler* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT RebootNeeded([in] EventRegistrationToken cookie);
                [eventadd] HRESULT ComponentLoadFailed([in] Windows.Media.Protection.ComponentLoadFailedEventHandler* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT ComponentLoadFailed([in] EventRegistrationToken cookie);
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IPropertySet** value);
            }

            [exclusiveto(Windows.Media.Protection.MediaProtectionServiceCompletion)]
            [uuid(8B5CCA18-CFD5-44EE-A2ED-DF76010C14B5)]
            [version(0x06020000)]
            interface IMediaProtectionServiceCompletion : IInspectable
            {
                HRESULT Complete([in] boolean success);
            }

            [exclusiveto(Windows.Media.Protection.ServiceRequestedEventArgs)]
            [uuid(34283BAF-ABB4-4FC1-BD89-93F106573A49)]
            [version(0x06020000)]
            interface IServiceRequestedEventArgs : IInspectable
            {
                [propget] HRESULT Request([out] [retval] Windows.Media.Protection.IMediaProtectionServiceRequest** value);
                [propget] HRESULT Completion([out] [retval] Windows.Media.Protection.MediaProtectionServiceCompletion** value);
            }

            [uuid(B1DE0EA6-2094-478D-87A4-8B95200F85C6)]
            [version(0x06020000)]
            interface IMediaProtectionServiceRequest : IInspectable
            {
                [propget] HRESULT ProtectionSystem([out] [retval] GUID* system);
                [propget] HRESULT Type([out] [retval] GUID* type);
            }

            [exclusiveto(Windows.Media.Protection.ServiceRequestedEventArgs)]
            [uuid(553C69D6-FAFE-4128-8DFA-130E398A13A7)]
            [version(0x0A000000)]
            interface IServiceRequestedEventArgs2 : IInspectable
            {
                [propget] HRESULT MediaPlaybackItem([out] [retval] Windows.Media.Playback.MediaPlaybackItem** value);
            }

            [exclusiveto(Windows.Media.Protection.ComponentLoadFailedEventArgs)]
            [uuid(95972E93-7746-417E-8495-F031BBC5862C)]
            [version(0x06020000)]
            interface IComponentLoadFailedEventArgs : IInspectable
            {
                [propget] HRESULT Information([out] [retval] Windows.Media.Protection.RevocationAndRenewalInformation** value);
                [propget] HRESULT Completion([out] [retval] Windows.Media.Protection.MediaProtectionServiceCompletion** value);
            }

            [exclusiveto(Windows.Media.Protection.RevocationAndRenewalInformation)]
            [uuid(F3A1937B-2501-439E-A6E7-6FC95E175FCF)]
            [version(0x06020000)]
            interface IRevocationAndRenewalInformation : IInspectable
            {
                [propget] HRESULT Items([out] [retval] Windows.Foundation.Collections.IVector<Windows.Media.Protection.RevocationAndRenewalItem*>** items);
            }

            [exclusiveto(Windows.Media.Protection.RevocationAndRenewalItem)]
            [uuid(3099C20C-3CF0-49EA-902D-CAF32D2DDE2C)]
            [version(0x06020000)]
            interface IRevocationAndRenewalItem : IInspectable
            {
                [propget] HRESULT Reasons([out] [retval] Windows.Media.Protection.RevocationAndRenewalReasons* reasons);
                [propget] HRESULT HeaderHash([out] [retval] HSTRING* value);
                [propget] HRESULT PublicKeyHash([out] [retval] HSTRING* value);
                [propget] HRESULT Name([out] [retval] HSTRING* name);
                [propget] HRESULT RenewalId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Media.Protection.ComponentRenewal)]
            [uuid(6FFBCD67-B795-48C5-8B7B-A7C4EFE202E3)]
            [version(0x06020000)]
            interface IComponentRenewalStatics : IInspectable
            {
                HRESULT RenewSystemComponentsAsync([in] Windows.Media.Protection.RevocationAndRenewalInformation* information, [out] [retval] Windows.Foundation.IAsyncOperationWithProgress<Windows.Media.Protection.RenewalStatus, UINT32>** operation);
            }

            [exclusiveto(Windows.Media.Protection.MediaProtectionPMPServer)]
            [uuid(602C8E5E-F7D2-487E-AF91-DBC4252B2182)]
            [version(0x0A000000)]
            interface IMediaProtectionPMPServerFactory : IInspectable
            {
                HRESULT CreatePMPServer([in] Windows.Foundation.Collections.IPropertySet* pProperties, [out] [retval] Windows.Media.Protection.MediaProtectionPMPServer** ppObject);
            }

            [exclusiveto(Windows.Media.Protection.MediaProtectionPMPServer)]
            [uuid(0C111226-7B26-4D31-95BB-9C1B08EF7FC0)]
            [version(0x0A000000)]
            interface IMediaProtectionPMPServer : IInspectable
            {
                [propget] HRESULT Properties([out] [retval] Windows.Foundation.Collections.IPropertySet** ppProperties);
            }

            [exclusiveto(Windows.Media.Protection.ProtectionCapabilities)]
            [uuid(C7AC5D7E-7480-4D29-A464-7BCD913DD8E4)]
            [version(0x0A000000)]
            interface IProtectionCapabilities : IInspectable
            {
                HRESULT IsTypeSupported([in] HSTRING type, [in] HSTRING keySystem, [out] [retval] Windows.Media.Protection.ProtectionCapabilityResult* value);
            }

            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [threading(mta)]
            [version(0x06020000)]
            runtimeclass MediaProtectionManager
            {
                [default] interface Windows.Media.Protection.IMediaProtectionManager;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ServiceRequestedEventArgs
            {
                [default] interface Windows.Media.Protection.IServiceRequestedEventArgs;
                [version(0x0A000000)] interface Windows.Media.Protection.IServiceRequestedEventArgs2;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ComponentLoadFailedEventArgs
            {
                [default] interface Windows.Media.Protection.IComponentLoadFailedEventArgs;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass MediaProtectionServiceCompletion
            {
                [default] interface Windows.Media.Protection.IMediaProtectionServiceCompletion;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass RevocationAndRenewalInformation
            {
                [default] interface Windows.Media.Protection.IRevocationAndRenewalInformation;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass RevocationAndRenewalItem
            {
                [default] interface Windows.Media.Protection.IRevocationAndRenewalItem;
            }

            [activatable(Windows.Media.Protection.IMediaProtectionPMPServerFactory, 0x0A000000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass MediaProtectionPMPServer
            {
                [default] interface Windows.Media.Protection.IMediaProtectionPMPServer;
            }

            [static(Windows.Media.Protection.IComponentRenewalStatics, 0x06020000)]
            [version(0x06020000)]
            runtimeclass ComponentRenewal
            {
            }

            [activatable(0x0A000000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ProtectionCapabilities
            {
                [default] interface Windows.Media.Protection.IProtectionCapabilities;
            }
        }
    }
}
