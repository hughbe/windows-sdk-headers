//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Text.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Media.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eui2Etext_h__)")
cpp_quote("#include <Windows.UI.Text.h>")
cpp_quote("#endif // !defined(__windows2Eui2Etext_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl_h__)")
cpp_quote("#include <Windows.UI.Xaml.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct Rect Rect;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            typedef enum FontStretch FontStretch;

            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            typedef enum FlowDirection FlowDirection;

            typedef enum FontCapitals FontCapitals;

            typedef enum FontEastAsianLanguage FontEastAsianLanguage;

            typedef enum FontEastAsianWidths FontEastAsianWidths;

            typedef enum FontFraction FontFraction;

            typedef enum FontNumeralAlignment FontNumeralAlignment;

            typedef enum FontNumeralStyle FontNumeralStyle;

            typedef enum FontVariants FontVariants;

            runtimeclass FrameworkElement;

            typedef enum LineStackingStrategy LineStackingStrategy;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass Brush;

                runtimeclass FontFamily;

                typedef enum StyleSimulations StyleSimulations;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum TextAlignment TextAlignment;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                typedef enum LogicalDirection LogicalDirection;

                typedef enum UnderlineStyle UnderlineStyle;

                interface ITextPointer;

                interface ITypography;

                interface ITypographyStatics;

                interface ITextElement;

                interface ITextElementOverrides;

                interface ITextElementStatics;

                interface ITextElementFactory;

                interface ITextElement2;

                interface ITextElementStatics2;

                interface IBlock;

                interface IBlockStatics;

                interface IBlockFactory;

                interface IInline;

                interface IInlineFactory;

                interface IInlineUIContainer;

                interface ILineBreak;

                interface IParagraph;

                interface IParagraphStatics;

                interface IRun;

                interface IRunStatics;

                interface ISpan;

                interface ISpanFactory;

                interface IBold;

                interface IItalic;

                interface IUnderline;

                interface IHyperlinkClickEventArgs;

                interface IGlyphs;

                interface IGlyphsStatics;

                interface IGlyphs2;

                interface IGlyphsStatics2;

                interface IHyperlink;

                interface IHyperlinkStatics;

                interface IHyperlink2;

                interface IHyperlinkStatics2;

                runtimeclass BlockCollection;

                runtimeclass InlineCollection;

                runtimeclass TextPointer;

                runtimeclass Typography;

                runtimeclass TextElement;

                runtimeclass Block;

                runtimeclass Inline;

                runtimeclass InlineUIContainer;

                runtimeclass LineBreak;

                runtimeclass Paragraph;

                runtimeclass Run;

                runtimeclass Span;

                runtimeclass Bold;

                runtimeclass Italic;

                runtimeclass Underline;

                runtimeclass Hyperlink;

                runtimeclass HyperlinkClickEventArgs;

                runtimeclass Glyphs;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Documents.Hyperlink*, Windows.UI.Xaml.Documents.HyperlinkClickEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                [version(0x06020000)]
                enum LogicalDirection
                {
                    Backward = 0,
                    Forward  = 1
                };

                [version(0x0A000000)]
                enum UnderlineStyle
                {
                    None   = 0,
                    Single = 1
                };

                [exclusiveto(Windows.UI.Xaml.Documents.TextPointer)]
                [uuid(AC687AA1-6A41-43FF-851E-45348AA2CF7B)]
                [version(0x06020000)]
                interface ITextPointer : IInspectable
                {
                    [propget] HRESULT Parent([out] [retval] Windows.UI.Xaml.DependencyObject** value);
                    [propget] HRESULT VisualParent([out] [retval] Windows.UI.Xaml.FrameworkElement** value);
                    [propget] HRESULT LogicalDirection([out] [retval] Windows.UI.Xaml.Documents.LogicalDirection* value);
                    [propget] HRESULT Offset([out] [retval] INT32* value);
                    HRESULT GetCharacterRect([in] Windows.UI.Xaml.Documents.LogicalDirection direction, [out] [retval] Windows.Foundation.Rect* returnValue);
                    HRESULT GetPositionAtOffset([in] INT32 offset, [in] Windows.UI.Xaml.Documents.LogicalDirection direction, [out] [retval] Windows.UI.Xaml.Documents.TextPointer** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Typography)]
                [uuid(866F65D5-EA97-42AB-9288-9C01AEBC7A97)]
                [version(0x06020000)]
                interface ITypography : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Typography)]
                [uuid(67B9EC88-6C57-4CE0-95F1-D4B9ED632FB4)]
                [version(0x06020000)]
                interface ITypographyStatics : IInspectable
                {
                    [propget] HRESULT AnnotationAlternatesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAnnotationAlternates([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetAnnotationAlternates([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT EastAsianExpertFormsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianExpertForms([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetEastAsianExpertForms([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT EastAsianLanguageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianLanguage([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontEastAsianLanguage* value);
                    HRESULT SetEastAsianLanguage([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontEastAsianLanguage value);
                    [propget] HRESULT EastAsianWidthsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianWidths([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontEastAsianWidths* value);
                    HRESULT SetEastAsianWidths([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontEastAsianWidths value);
                    [propget] HRESULT StandardLigaturesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStandardLigatures([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStandardLigatures([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT ContextualLigaturesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualLigatures([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetContextualLigatures([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT DiscretionaryLigaturesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetDiscretionaryLigatures([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetDiscretionaryLigatures([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT HistoricalLigaturesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHistoricalLigatures([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetHistoricalLigatures([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StandardSwashesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStandardSwashes([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetStandardSwashes([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT ContextualSwashesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualSwashes([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetContextualSwashes([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT ContextualAlternatesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualAlternates([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetContextualAlternates([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticAlternatesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticAlternates([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetStylisticAlternates([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT StylisticSet1Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet1([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet1([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet2Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet2([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet2([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet3Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet3([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet3([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet4Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet4([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet4([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet5Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet5([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet5([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet6Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet6([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet6([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet7Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet7([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet7([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet8Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet8([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet8([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet9Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet9([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet9([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet10Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet10([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet10([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet11Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet11([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet11([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet12Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet12([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet12([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet13Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet13([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet13([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet14Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet14([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet14([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet15Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet15([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet15([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet16Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet16([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet16([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet17Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet17([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet17([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet18Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet18([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet18([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet19Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet19([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet19([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet20Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet20([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetStylisticSet20([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT CapitalsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCapitals([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontCapitals* value);
                    HRESULT SetCapitals([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontCapitals value);
                    [propget] HRESULT CapitalSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCapitalSpacing([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetCapitalSpacing([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT KerningProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetKerning([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetKerning([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT CaseSensitiveFormsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCaseSensitiveForms([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetCaseSensitiveForms([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT HistoricalFormsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHistoricalForms([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetHistoricalForms([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT FractionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetFraction([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontFraction* value);
                    HRESULT SetFraction([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontFraction value);
                    [propget] HRESULT NumeralStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetNumeralStyle([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontNumeralStyle* value);
                    HRESULT SetNumeralStyle([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontNumeralStyle value);
                    [propget] HRESULT NumeralAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetNumeralAlignment([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontNumeralAlignment* value);
                    HRESULT SetNumeralAlignment([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontNumeralAlignment value);
                    [propget] HRESULT SlashedZeroProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetSlashedZero([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetSlashedZero([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT MathematicalGreekProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetMathematicalGreek([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetMathematicalGreek([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT VariantsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVariants([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.FontVariants* value);
                    HRESULT SetVariants([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.FontVariants value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(E83B0062-D776-4F92-BAEA-40E77D4791D5)]
                [version(0x06020000)]
                interface ITextElement : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Windows.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Windows.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propput] HRESULT Language([in] HSTRING value);
                    [propget] HRESULT ContentStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ElementStart([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ElementEnd([out] [retval] Windows.UI.Xaml.Documents.TextPointer** value);
                    HRESULT FindName([in] HSTRING name, [out] [retval] IInspectable** returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(0CE21EE7-4F76-4DD9-BF91-163BECCF84BC)]
                [version(0x06020000)]
                interface ITextElementOverrides : IInspectable
                {
                    HRESULT OnDisconnectVisualChildren();
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(0A2F9B98-6C03-4470-A79B-3298A10482CE)]
                [version(0x06020000)]
                interface ITextElementStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LanguageProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(35007285-CF47-4BFE-B1BC-39C93AF4AE80)]
                [version(0x06020000)]
                interface ITextElementFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(A8076AA8-F892-49F6-8CD2-89ADDAF06D2D)]
                [version(0x0A000000)]
                interface ITextElement2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.TextElement)]
                [uuid(164297B2-982B-49E1-8C03-CA43BC4D5B6D)]
                [version(0x0A000000)]
                interface ITextElementStatics2 : IInspectable
                {
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Block)]
                [uuid(4BCE0016-DD47-4350-8CB0-E171600AC896)]
                [version(0x06020000)]
                interface IBlock : IInspectable
                {
                    [propget] HRESULT TextAlignment([out] [retval] Windows.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Windows.UI.Xaml.TextAlignment value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Windows.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Windows.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT Margin([out] [retval] Windows.UI.Xaml.Thickness* value);
                    [propput] HRESULT Margin([in] Windows.UI.Xaml.Thickness value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Block)]
                [uuid(F86A8C34-8D18-4C53-AEBD-91E610A5E010)]
                [version(0x06020000)]
                interface IBlockStatics : IInspectable
                {
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MarginProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Block)]
                [uuid(07110532-4F59-4F3B-9CE5-25784C430507)]
                [version(0x06020000)]
                interface IBlockFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Documents.Block** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Inline)]
                [uuid(0C92712D-1BC9-4931-8CB1-1AEADF1CC685)]
                [version(0x06020000)]
                interface IInline : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Inline)]
                [uuid(4058ACD1-2F90-4B8F-99DD-4218EF5F03DE)]
                [version(0x06020000)]
                interface IInlineFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Documents.Inline** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.InlineUIContainer)]
                [uuid(1416CE81-28EE-452E-B121-5FC4F60B86A6)]
                [version(0x06020000)]
                interface IInlineUIContainer : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Windows.UI.Xaml.UIElement* value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.LineBreak)]
                [uuid(645589C4-F769-41ED-895B-8A1B2FB31562)]
                [version(0x06020000)]
                interface ILineBreak : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Paragraph)]
                [uuid(F83EF59A-FA61-4BEF-AE33-0B0AD756A84D)]
                [version(0x06020000)]
                interface IParagraph : IInspectable
                {
                    [propget] HRESULT Inlines([out] [retval] Windows.UI.Xaml.Documents.InlineCollection** value);
                    [propget] HRESULT TextIndent([out] [retval] DOUBLE* value);
                    [propput] HRESULT TextIndent([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Paragraph)]
                [uuid(EF08889A-535B-4E4C-8D84-283B33E98A37)]
                [version(0x06020000)]
                interface IParagraphStatics : IInspectable
                {
                    [propget] HRESULT TextIndentProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Run)]
                [uuid(59553C83-0E14-49BD-B84B-C526F3034349)]
                [version(0x06020000)]
                interface IRun : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT FlowDirection([out] [retval] Windows.UI.Xaml.FlowDirection* value);
                    [propput] HRESULT FlowDirection([in] Windows.UI.Xaml.FlowDirection value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Run)]
                [uuid(E9303CEF-65A0-4B8D-A7F7-8FDB287B46F3)]
                [version(0x06020000)]
                interface IRunStatics : IInspectable
                {
                    [propget] HRESULT FlowDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Span)]
                [uuid(9839D4A9-02AF-4811-AA15-6BEF3ACAC97A)]
                [version(0x06020000)]
                interface ISpan : IInspectable
                {
                    [propget] HRESULT Inlines([out] [retval] Windows.UI.Xaml.Documents.InlineCollection** value);
                    [propput] HRESULT Inlines([in] Windows.UI.Xaml.Documents.InlineCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Span)]
                [uuid(5B916F5C-CD2D-40C0-956A-386448322F79)]
                [version(0x06020000)]
                interface ISpanFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Documents.Span** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Bold)]
                [uuid(ADE73784-1B59-4DA4-BB23-0F20E885B4BF)]
                [version(0x06020000)]
                interface IBold : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Italic)]
                [uuid(91F4619C-FCBB-4157-802C-76F63B5FB657)]
                [version(0x06020000)]
                interface IItalic : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Underline)]
                [uuid(A5FA8202-61C0-47D7-93EF-BC0B577C5F26)]
                [version(0x06020000)]
                interface IUnderline : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.HyperlinkClickEventArgs)]
                [uuid(C755916B-7BDC-4BE7-B373-9240A503D870)]
                [version(0x06030000)]
                interface IHyperlinkClickEventArgs : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Glyphs)]
                [uuid(D079498B-F2B1-4281-99A2-E4D05932B2B5)]
                [version(0x06020000)]
                interface IGlyphs : IInspectable
                {
                    [propget] HRESULT UnicodeString([out] [retval] HSTRING* value);
                    [propput] HRESULT UnicodeString([in] HSTRING value);
                    [propget] HRESULT Indices([out] [retval] HSTRING* value);
                    [propput] HRESULT Indices([in] HSTRING value);
                    [propget] HRESULT FontUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT FontUri([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT StyleSimulations([out] [retval] Windows.UI.Xaml.Media.StyleSimulations* value);
                    [propput] HRESULT StyleSimulations([in] Windows.UI.Xaml.Media.StyleSimulations value);
                    [propget] HRESULT FontRenderingEmSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontRenderingEmSize([in] DOUBLE value);
                    [propget] HRESULT OriginX([out] [retval] DOUBLE* value);
                    [propput] HRESULT OriginX([in] DOUBLE value);
                    [propget] HRESULT OriginY([out] [retval] DOUBLE* value);
                    [propput] HRESULT OriginY([in] DOUBLE value);
                    [propget] HRESULT Fill([out] [retval] Windows.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Fill([in] Windows.UI.Xaml.Media.Brush* value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Glyphs)]
                [uuid(225CF4C5-FDF1-43ED-958F-414E86F103F2)]
                [version(0x06020000)]
                interface IGlyphsStatics : IInspectable
                {
                    [propget] HRESULT UnicodeStringProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndicesProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StyleSimulationsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontRenderingEmSizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OriginXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OriginYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FillProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Glyphs)]
                [uuid(AA8BFE5C-3754-4BEE-BBE1-4403EE9B86F0)]
                [version(0x0A000000)]
                interface IGlyphs2 : IInspectable
                {
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT ColorFontPaletteIndex([out] [retval] INT32* value);
                    [propput] HRESULT ColorFontPaletteIndex([in] INT32 value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Glyphs)]
                [uuid(10489AA7-1615-4A33-AA02-D7EF2AEFC739)]
                [version(0x0A000000)]
                interface IGlyphsStatics2 : IInspectable
                {
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorFontPaletteIndexProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Hyperlink)]
                [uuid(0FE2363B-14E9-4152-9E58-5AEA5B21F08D)]
                [version(0x06030000)]
                interface IHyperlink : IInspectable
                {
                    [propget] HRESULT NavigateUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT NavigateUri([in] Windows.Foundation.Uri* value);
                    [eventadd] HRESULT Click([in] Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Documents.Hyperlink*, Windows.UI.Xaml.Documents.HyperlinkClickEventArgs*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Hyperlink)]
                [uuid(3A44D3D4-FD41-41DB-8C72-3B790ACD9FD3)]
                [version(0x06030000)]
                interface IHyperlinkStatics : IInspectable
                {
                    [propget] HRESULT NavigateUriProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Hyperlink)]
                [uuid(4CE9DA5F-7CFF-4291-B78F-DFEC72490576)]
                [version(0x0A000000)]
                interface IHyperlink2 : IInspectable
                {
                    [propget] HRESULT UnderlineStyle([out] [retval] Windows.UI.Xaml.Documents.UnderlineStyle* value);
                    [propput] HRESULT UnderlineStyle([in] Windows.UI.Xaml.Documents.UnderlineStyle value);
                }

                [exclusiveto(Windows.UI.Xaml.Documents.Hyperlink)]
                [uuid(5028D8B7-7ADF-43EE-A4AE-9C925F755716)]
                [version(0x0A000000)]
                interface IHyperlinkStatics2 : IInspectable
                {
                    [propget] HRESULT UnderlineStyleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass BlockCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.Block*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Documents.Block*>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass InlineCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Documents.Inline*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Documents.Inline*>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextPointer
                {
                    [default] interface Windows.UI.Xaml.Documents.ITextPointer;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.ITypographyStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Typography
                {
                    [default] interface Windows.UI.Xaml.Documents.ITypography;
                }

                [composable(Windows.UI.Xaml.Documents.ITextElementFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.ITextElementStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Documents.ITextElementStatics2, 0x0A000000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TextElement : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Documents.ITextElement;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Documents.ITextElementOverrides;
                    [version(0x0A000000)] interface Windows.UI.Xaml.Documents.ITextElement2;
                }

                [composable(Windows.UI.Xaml.Documents.IBlockFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.IBlockStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Block : Windows.UI.Xaml.Documents.TextElement
                {
                    [default] interface Windows.UI.Xaml.Documents.IBlock;
                }

                [composable(Windows.UI.Xaml.Documents.IInlineFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Inline : Windows.UI.Xaml.Documents.TextElement
                {
                    [default] interface Windows.UI.Xaml.Documents.IInline;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass InlineUIContainer : Windows.UI.Xaml.Documents.Inline
                {
                    [default] interface Windows.UI.Xaml.Documents.IInlineUIContainer;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass LineBreak : Windows.UI.Xaml.Documents.Inline
                {
                    [default] interface Windows.UI.Xaml.Documents.ILineBreak;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.IParagraphStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Paragraph : Windows.UI.Xaml.Documents.Block
                {
                    [default] interface Windows.UI.Xaml.Documents.IParagraph;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.IRunStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Run : Windows.UI.Xaml.Documents.Inline
                {
                    [default] interface Windows.UI.Xaml.Documents.IRun;
                }

                [composable(Windows.UI.Xaml.Documents.ISpanFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Span : Windows.UI.Xaml.Documents.Inline
                {
                    [default] interface Windows.UI.Xaml.Documents.ISpan;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Bold : Windows.UI.Xaml.Documents.Span
                {
                    [default] interface Windows.UI.Xaml.Documents.IBold;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Italic : Windows.UI.Xaml.Documents.Span
                {
                    [default] interface Windows.UI.Xaml.Documents.IItalic;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Underline : Windows.UI.Xaml.Documents.Span
                {
                    [default] interface Windows.UI.Xaml.Documents.IUnderline;
                }

                [activatable(0x06030000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.IHyperlinkStatics, 0x06030000)]
                [static(Windows.UI.Xaml.Documents.IHyperlinkStatics2, 0x0A000000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass Hyperlink : Windows.UI.Xaml.Documents.Span
                {
                    [default] interface Windows.UI.Xaml.Documents.IHyperlink;
                    [version(0x0A000000)] interface Windows.UI.Xaml.Documents.IHyperlink2;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass HyperlinkClickEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Documents.IHyperlinkClickEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Documents.IGlyphsStatics2, 0x0A000000)]
                [static(Windows.UI.Xaml.Documents.IGlyphsStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Glyphs : Windows.UI.Xaml.FrameworkElement
                {
                    [default] interface Windows.UI.Xaml.Documents.IGlyphs;
                    [version(0x0A000000)] interface Windows.UI.Xaml.Documents.IGlyphs2;
                }
            }
        }
    }
}
