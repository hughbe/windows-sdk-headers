

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eui2Examl2Emedia2Eanimation_h__
#define __windows2Eui2Examl2Emedia2Eanimation_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IKeyTimeHelper;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IKeyTimeHelperStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IRepeatBehaviorHelper;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IRepeatBehaviorHelperStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorKeyFrameFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleKeyFrameFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingFunctionBase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingFunctionBaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingFunctionBaseFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IKeySpline;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface INavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface INavigationTransitionInfoOverrides;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface INavigationTransitionInfoFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IObjectKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IObjectKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IObjectKeyFrameFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointKeyFrameFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITimeline;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITimelineStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITimelineFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ITransitionFactory;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IAddDeleteThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBackEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBackEaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBeginStoryboard;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBeginStoryboardStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBounceEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IBounceEaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ICircleEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorAnimationUsingKeyFrames;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IColorAnimationUsingKeyFramesStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IContentThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IContentThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ICubicEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDiscreteColorKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDiscreteDoubleKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDiscreteObjectKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDiscretePointKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleAnimationUsingKeyFrames;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDoubleAnimationUsingKeyFramesStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDragItemThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDragItemThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDragOverThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDragOverThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDrillInThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDrillInThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDrillOutThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDrillOutThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDropTargetItemThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDropTargetItemThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingColorKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingColorKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingDoubleKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingDoubleKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingPointKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEasingPointKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEdgeUIThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEdgeUIThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IElasticEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IElasticEaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEntranceThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEntranceThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IExponentialEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IExponentialEaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IFadeInThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IFadeInThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IFadeOutThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IFadeOutThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ILinearColorKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ILinearDoubleKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ILinearPointKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IObjectAnimationUsingKeyFrames;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IObjectAnimationUsingKeyFramesStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPaneThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPaneThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointAnimationUsingKeyFrames;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointAnimationUsingKeyFramesStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointerDownThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointerDownThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointerUpThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPointerUpThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopInThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopInThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopOutThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopOutThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopupThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPopupThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPowerEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IPowerEaseStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IQuadraticEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IQuarticEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IQuinticEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IReorderThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IRepositionThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IRepositionThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IRepositionThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISineEase;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplineColorKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplineColorKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplineDoubleKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplineDoubleKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplinePointKeyFrame;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplinePointKeyFrameStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplitCloseThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplitCloseThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplitOpenThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISplitOpenThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IStoryboard;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IStoryboardStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISwipeBackThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISwipeBackThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISwipeHintThemeAnimation;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISwipeHintThemeAnimationStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ICommonNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ICommonNavigationTransitionInfoStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IContinuumNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IContinuumNavigationTransitionInfoStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IDrillInNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEntranceNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface IEntranceNavigationTransitionInfoStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface INavigationThemeTransition;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface INavigationThemeTransitionStatics;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISlideNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        interface ISuppressNavigationTransitionInfo;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.UI.h"
#include "Windows.UI.Xaml.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface IColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3851 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3851 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3851_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3851_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("36a6440d-aa86-5bce-8df2-5de99206f151"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3852 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3852 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3852_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3852_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1859dd08-582d-51dc-82a1-466111caf944"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface IDoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3853 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3853 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3853_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3853_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ca007bbd-84a1-512f-977f-9bd728e1e73f"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3854 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3854 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3854_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3854_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5f1676da-a405-5b7a-baf1-968de4391fb7"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ObjectKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface IObjectKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0004 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3855 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3855 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3855_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3855_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("69c69834-8951-54a7-a2ca-922bacf9fc70"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3856 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3856 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3856_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3856_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0006 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9084a8e1-8f4d-5de3-b1c6-e5f05724caed"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface IPointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0006 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3857 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3857 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3857_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3857_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0007 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e55a65ad-e742-5f78-876b-64d1681fc9e2"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3858 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3858 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3858_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3858_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b8de4dc9-8c69-55f3-af58-040f1319649c"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Timeline;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface ITimeline;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0008 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3859 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3859 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3859_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3859_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b0c22c25-ae1a-5326-bf81-394246cc3076"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Timeline*, ABI::Windows::UI::Xaml::Media::Animation::ITimeline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Timeline>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3860 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3860 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3860_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3860_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a122a346-e6d5-5c54-857d-038e60f5d9c1"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Timeline*, ABI::Windows::UI::Xaml::Media::Animation::ITimeline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.Timeline>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Transition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
interface ITransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0010 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3861 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3861 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3861_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3861_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0f149913-d622-5dde-b6e3-7835c2ab54b7"))
IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterator<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0011 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3862 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3862 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3862_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3862_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("feb51398-4fdb-5112-8a9b-6a8786ca01ce"))
IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IIterable<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0012 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3863 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3863 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3863_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3863_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0013 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8d66a3ca-480c-5a76-98a2-9036c03ed7bd"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0013 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3864 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3864 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3864_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3864_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0014 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c12407b6-145f-5420-9e16-d0a20bf13176"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0014 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3865 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3865 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3865_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3865_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0015 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("19130523-0862-5631-bc2e-097614b38b6d"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0015 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3866 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3866 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3866_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3866_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0016 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b366e321-df42-500b-8ada-99854f6406ff"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0016 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3867 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3867 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3867_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3867_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0017 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("541af22b-280b-5276-bfcb-3e60a157d62c"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Timeline*, ABI::Windows::UI::Xaml::Media::Animation::ITimeline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Timeline>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0017 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3868 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3868 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3868_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3868_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0018 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("43b475a1-3811-5992-be44-ab41a825d355"))
IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVectorView<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0018 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3869 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3869 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3869_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3869_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0019 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("92d24fb8-af54-5180-9888-5756566a13ff"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.ColorKeyFrame>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::ColorKeyFrame*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0019 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3870 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3870 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3870_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3870_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0020 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d7cbde22-86bf-572f-8473-079d15076c3e"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::DoubleKeyFrame*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0020 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3871 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3871 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3871_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3871_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0021 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5f733d3f-72a6-5303-9727-2b03eae7dd4c"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::ObjectKeyFrame*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0021 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3872 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3872 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3872_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3872_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0022 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b17e26de-9cd7-5456-bee0-49882a87f945"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*, ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.PointKeyFrame>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::PointKeyFrame*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3873 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3873 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3873_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3873_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0023 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2005c7f9-c7d7-521b-a81c-2c9dad77a9e8"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Timeline*, ABI::Windows::UI::Xaml::Media::Animation::ITimeline*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.Timeline>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::Timeline*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0023 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3874 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3874 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3874_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3874_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e798571f-7e3e-5e1a-aa55-cbc93b83f821"))
IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::UI::Xaml::Media::Animation::Transition*, ABI::Windows::UI::Xaml::Media::Animation::ITransition*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.Media.Animation.Transition>"; }
};
typedef IVector<ABI::Windows::UI::Xaml::Media::Animation::Transition*> __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_FWD_DEFINED__
#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct TimeSpan;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0024 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3875 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3875 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3875_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3875_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0025 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#define DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("604d0c4c-91de-5c2a-935f-362f13eaf800"))
IReference<struct ABI::Windows::Foundation::TimeSpan> : IReference_impl<struct ABI::Windows::Foundation::TimeSpan> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>"; }
};
typedef IReference<struct ABI::Windows::Foundation::TimeSpan> __FIReference_1_Windows__CFoundation__CTimeSpan_t;
#define ____FIReference_1_Windows__CFoundation__CTimeSpan_FWD_DEFINED__
#define __FIReference_1_Windows__CFoundation__CTimeSpan ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CTimeSpan_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE */

interface IInspectable;


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0025 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3876 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3876 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3876_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3876_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0026 */
/* [local] */ 

#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.EventHandler`1<Object>"; }
};
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define ____FIEventHandler_1_IInspectable_FWD_DEFINED__
#define __FIEventHandler_1_IInspectable ABI::Windows::Foundation::__FIEventHandler_1_IInspectable_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIEventHandler_1_IInspectable_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
struct Color;
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0026 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3877 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3877 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3877_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3877_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0027 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CUI__CColor_USE
#define DEF___FIReference_1_Windows__CUI__CColor_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ab8e5d11-b0c1-5a21-95ae-f16bf3a37624"))
IReference<struct ABI::Windows::UI::Color> : IReference_impl<struct ABI::Windows::UI::Color> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.UI.Color>"; }
};
typedef IReference<struct ABI::Windows::UI::Color> __FIReference_1_Windows__CUI__CColor_t;
#define ____FIReference_1_Windows__CUI__CColor_FWD_DEFINED__
#define __FIReference_1_Windows__CUI__CColor ABI::Windows::Foundation::__FIReference_1_Windows__CUI__CColor_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CUI__CColor_USE */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0027 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3878 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3878 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3878_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3878_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0028 */
/* [local] */ 

#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Double>"; }
};
typedef IReference<double> __FIReference_1_double_t;
#define ____FIReference_1_double_FWD_DEFINED__
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_double_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct Point;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0028 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3879 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3879 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3879_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3879_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0029 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CFoundation__CPoint_USE
#define DEF___FIReference_1_Windows__CFoundation__CPoint_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("84f14c22-a00a-5272-8d3d-82112e66df00"))
IReference<struct ABI::Windows::Foundation::Point> : IReference_impl<struct ABI::Windows::Foundation::Point> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.Foundation.Point>"; }
};
typedef IReference<struct ABI::Windows::Foundation::Point> __FIReference_1_Windows__CFoundation__CPoint_t;
#define ____FIReference_1_Windows__CFoundation__CPoint_FWD_DEFINED__
#define __FIReference_1_Windows__CFoundation__CPoint ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CPoint_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CFoundation__CPoint_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Eui_h__)
#include <Windows.UI.h>
#endif // !defined(__windows2Eui_h__)
#if !defined(__windows2Eui2Examl_h__)
#include <Windows.UI.Xaml.h>
#endif // !defined(__windows2Eui2Examl_h__)
#if !defined(__windows2Eui2Examl2Econtrols_h__)
#include <Windows.UI.Xaml.Controls.h>
#endif // !defined(__windows2Eui2Examl2Econtrols_h__)
#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#include <Windows.UI.Xaml.Controls.Primitives.h>
#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Controls {
class ListViewBase;
} /*Controls*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation;


#endif /* end if !defined(__cplusplus) */


#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyObject;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class DependencyProperty;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CDuration __x_ABI_CWindows_CUI_CXaml_CDuration;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
class UIElement;
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif

#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
#if !defined(__cplusplus)

typedef enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType;


#endif /* end if !defined(__cplusplus) */


#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime;

#endif
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior;

#endif



































































































































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class KeyTimeHelper;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class RepeatBehaviorHelper;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class TransitionCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ColorKeyFrameCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DoubleKeyFrameCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ObjectKeyFrameCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointKeyFrameCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class TimelineCollection;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EasingFunctionBase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class KeySpline;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class NavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class AddDeleteThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class BackEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class BeginStoryboard;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class BounceEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class CircleEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ColorAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ColorAnimationUsingKeyFrames;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ContentThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class CubicEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DiscreteColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DiscreteDoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DiscreteObjectKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DiscretePointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DoubleAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DoubleAnimationUsingKeyFrames;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DragItemThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DragOverThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DrillInThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DrillOutThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DropTargetItemThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EasingColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EasingDoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EasingPointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EdgeUIThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ElasticEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EntranceThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ExponentialEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class FadeInThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class FadeOutThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class LinearColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class LinearDoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class LinearPointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ObjectAnimationUsingKeyFrames;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PaneThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointAnimationUsingKeyFrames;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointerDownThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PointerUpThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PopInThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PopOutThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PopupThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class PowerEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class QuadraticEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class QuarticEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class QuinticEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ReorderThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class RepositionThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class RepositionThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SineEase;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SplineColorKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SplineDoubleKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SplinePointKeyFrame;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SplitCloseThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SplitOpenThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class Storyboard;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SwipeBackThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SwipeHintThemeAnimation;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class CommonNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class ContinuumNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class DrillInNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class EntranceNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class NavigationThemeTransition;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SlideNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace UI {
namespace Xaml {
namespace Media {
namespace Animation {
class SuppressNavigationTransitionInfo;
} /*Animation*/
} /*Media*/
} /*Xaml*/
} /*UI*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0029 */
/* [local] */ 


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct Point Point;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            
            typedef struct Color Color;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum AnimationDirection AnimationDirection;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Controls {
                    namespace Primitives {
                        
                        typedef enum EdgeTransitionLocation EdgeTransitionLocation;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                
                typedef struct Duration Duration;
                
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef enum ClockState ClockState;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef enum EasingMode EasingMode;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef enum FillBehavior FillBehavior;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef enum RepeatBehaviorType RepeatBehaviorType;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef struct KeyTime KeyTime;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        typedef struct RepeatBehavior RepeatBehavior;
                        
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif






































































































































extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3880 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3880 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3880_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3880_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0030 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0030 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0030_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36a6440d-aa86-5bce-8df2-5de99206f151")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0031 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0031 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3881 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3881 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3881_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3881_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0032 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0032 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0032_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1859dd08-582d-51dc-82a1-466111caf944")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0033 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0033 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3882 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3882 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3882_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3882_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0034 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0034 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0034_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ca007bbd-84a1-512f-977f-9bd728e1e73f")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0035 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0035 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3883 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3883 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3883_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3883_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0036 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0036 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0036_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5f1676da-a405-5b7a-baf1-968de4391fb7")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0037 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0037 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3884 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3884 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3884_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3884_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0038 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0038 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0038_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("69c69834-8951-54a7-a2ca-922bacf9fc70")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0039 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0039 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3885 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3885 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3885_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3885_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0040 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0040 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0040_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9084a8e1-8f4d-5de3-b1c6-e5f05724caed")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0041 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0041 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3886 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3886 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3886_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3886_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0042 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0042 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0042_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e55a65ad-e742-5f78-876b-64d1681fc9e2")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0043 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0043 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3887 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3887 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3887_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3887_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0044 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0044 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0044_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b8de4dc9-8c69-55f3-af58-040f1319649c")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0045 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0045 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3888 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3888 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3888_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3888_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0046 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0046 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0046_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b0c22c25-ae1a-5326-bf81-394246cc3076")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0047 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0047 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3889 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3889 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3889_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3889_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0048 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0048 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0048_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a122a346-e6d5-5c54-857d-038e60f5d9c1")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0049 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0049 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3890 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3890 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3890_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3890_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0050 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#define DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0050 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0050_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0f149913-d622-5dde-b6e3-7835c2ab54b7")
    __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0051 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0051 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3891 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3891 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3891_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3891_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0052 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#define DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0052 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0052_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("feb51398-4fdb-5112-8a9b-6a8786ca01ce")
    __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0053 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0053 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3892 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3892 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3892_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3892_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0054 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0054 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0054_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8d66a3ca-480c-5a76-98a2-9036c03ed7bd")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0055 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0055 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3893 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3893 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3893_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3893_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0056 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0056 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0056_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c12407b6-145f-5420-9e16-d0a20bf13176")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0057 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0057 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3894 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3894 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3894_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3894_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0058 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0058 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0058_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19130523-0862-5631-bc2e-097614b38b6d")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0059 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0059 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3895 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3895 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3895_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3895_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0060 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0060 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0060_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b366e321-df42-500b-8ada-99854f6406ff")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0061 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0061 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3896 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3896 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3896_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3896_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0062 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0062 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0062_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("541af22b-280b-5276-bfcb-3e60a157d62c")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0063 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0063 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0063_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3897 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3897 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3897_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3897_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0064 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#define DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0064 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0064_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("43b475a1-3811-5992-be44-ab41a825d355")
    __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0065 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0065 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0065_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3898 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3898 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3898_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3898_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0066 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0066 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0066_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("92d24fb8-af54-5180-9888-5756566a13ff")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0067 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0067 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0067_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3899 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3899 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3899_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3899_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0068 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0068 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0068_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("d7cbde22-86bf-572f-8473-079d15076c3e")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0069 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0069 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0069_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3900 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3900 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3900_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3900_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0070 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0070 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0070_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5f733d3f-72a6-5303-9727-2b03eae7dd4c")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0071 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0071 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0071_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3901 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3901 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3901_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3901_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0072 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0072 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0072_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b17e26de-9cd7-5456-bee0-49882a87f945")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0073 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0073 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0073_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3902 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3902 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3902_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3902_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0074 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0074 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0074_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2005c7f9-c7d7-521b-a81c-2c9dad77a9e8")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::ITimeline **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimelineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0075 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0075 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0075_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3903 */




/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3903 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3903_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_3903_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0076 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#define DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0076 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0076_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e798571f-7e3e-5e1a-aa55-cbc93b83f821")
    __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITransition *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::UI::Xaml::Media::Animation::ITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::UI::Xaml::Media::Animation::ITransition **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

    interface __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition
    {
        CONST_VTBL struct __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0077 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTransition */
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState
    {
        ClockState_Active	= 0,
        ClockState_Filling	= 1,
        ClockState_Stopped	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode
    {
        EasingMode_EaseOut	= 0,
        EasingMode_EaseIn	= 1,
        EasingMode_EaseInOut	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior
    {
        FillBehavior_HoldEnd	= 0,
        FillBehavior_Stop	= 1
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)

#if !defined(__cplusplus)
/* [v1_enum] */ 
enum __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType
    {
        RepeatBehaviorType_Count	= 0,
        RepeatBehaviorType_Duration	= 1,
        RepeatBehaviorType_Forever	= 2
    } ;
#endif /* end if !defined(__cplusplus) */

#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime
    {
    __x_ABI_CWindows_CFoundation_CTimeSpan TimeSpan;
    } ;
#endif
#if !defined(__cplusplus)
struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior
    {
    DOUBLE Count;
    __x_ABI_CWindows_CFoundation_CTimeSpan Duration;
    __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehaviorType Type;
    } ;
#endif
#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IKeyTimeHelper[] = L"Windows.UI.Xaml.Media.Animation.IKeyTimeHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0077 */
/* [local] */ 

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        /* [v1_enum] */ 
                        enum ClockState
                            {
                                ClockState_Active	= 0,
                                ClockState_Filling	= 1,
                                ClockState_Stopped	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        /* [v1_enum] */ 
                        enum EasingMode
                            {
                                EasingMode_EaseOut	= 0,
                                EasingMode_EaseIn	= 1,
                                EasingMode_EaseInOut	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        /* [v1_enum] */ 
                        enum FillBehavior
                            {
                                FillBehavior_HoldEnd	= 0,
                                FillBehavior_Stop	= 1
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        /* [v1_enum] */ 
                        enum RepeatBehaviorType
                            {
                                RepeatBehaviorType_Count	= 0,
                                RepeatBehaviorType_Duration	= 1,
                                RepeatBehaviorType_Forever	= 2
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        struct KeyTime
                            {
                            ABI::Windows::Foundation::TimeSpan TimeSpan;
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif

#ifdef __cplusplus
} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace UI {
            namespace Xaml {
                namespace Media {
                    namespace Animation {
                        
                        struct RepeatBehavior
                            {
                            DOUBLE Count;
                            ABI::Windows::Foundation::TimeSpan Duration;
                            RepeatBehaviorType Type;
                            } ;
                    } /* end namespace */
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0077_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IKeyTimeHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("3643E480-4823-466A-ABE5-5E79C8ED77ED")
                            IKeyTimeHelper : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IKeyTimeHelper = __uuidof(IKeyTimeHelper);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0078 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IKeyTimeHelperStatics[] = L"Windows.UI.Xaml.Media.Animation.IKeyTimeHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0078 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0078_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IKeyTimeHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7FA2612C-22A9-45E9-9AF7-C7416EFFF7A5")
                            IKeyTimeHelperStatics : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE FromTimeSpan( 
                                    /* [in] */ ABI::Windows::Foundation::TimeSpan timeSpan,
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::KeyTime *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IKeyTimeHelperStatics = __uuidof(IKeyTimeHelperStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *FromTimeSpan )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan timeSpan,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_FromTimeSpan(This,timeSpan,returnValue)	\
    ( (This)->lpVtbl -> FromTimeSpan(This,timeSpan,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0079 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IRepeatBehaviorHelper[] = L"Windows.UI.Xaml.Media.Animation.IRepeatBehaviorHelper";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0079 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0079_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IRepeatBehaviorHelper */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("6863AB72-4997-47F9-87AD-37EFB75993EA")
                            IRepeatBehaviorHelper : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRepeatBehaviorHelper = __uuidof(IRepeatBehaviorHelper);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0080 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IRepeatBehaviorHelperStatics[] = L"Windows.UI.Xaml.Media.Animation.IRepeatBehaviorHelperStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0080 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0080_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IRepeatBehaviorHelperStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7A795033-79F3-4DD9-B267-9CF50FB51F84")
                            IRepeatBehaviorHelperStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Forever( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE FromCount( 
                                    /* [in] */ DOUBLE count,
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE FromDuration( 
                                    /* [in] */ ABI::Windows::Foundation::TimeSpan duration,
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetHasCount( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior target,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetHasDuration( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior target,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Equals( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior target,
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior value,
                                    /* [out][retval] */ __RPC__out boolean *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRepeatBehaviorHelperStatics = __uuidof(IRepeatBehaviorHelperStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Forever )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior *value);
        
        HRESULT ( STDMETHODCALLTYPE *FromCount )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ DOUBLE count,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *FromDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan duration,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetHasCount )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *GetHasDuration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *Equals )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior target,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior value,
            /* [out][retval] */ __RPC__out boolean *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_get_Forever(This,value)	\
    ( (This)->lpVtbl -> get_Forever(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FromCount(This,count,returnValue)	\
    ( (This)->lpVtbl -> FromCount(This,count,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_FromDuration(This,duration,returnValue)	\
    ( (This)->lpVtbl -> FromDuration(This,duration,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_GetHasCount(This,target,value)	\
    ( (This)->lpVtbl -> GetHasCount(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_GetHasDuration(This,target,value)	\
    ( (This)->lpVtbl -> GetHasDuration(This,target,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_Equals(This,target,value,returnValue)	\
    ( (This)->lpVtbl -> Equals(This,target,value,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0081 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IColorKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0081 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0081_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B51D82D9-0910-4589-A284-B0C9205858E9")
                            IColorKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Color *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                    /* [in] */ ABI::Windows::UI::Color value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTime( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::KeyTime *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeyTime( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::KeyTime value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorKeyFrame = __uuidof(IColorKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CColor *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CColor value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_get_KeyTime(This,value)	\
    ( (This)->lpVtbl -> get_KeyTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_put_KeyTime(This,value)	\
    ( (This)->lpVtbl -> put_KeyTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0082 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IColorKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0082 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0082_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C043AE99-210C-430F-9DA5-DF1082692055")
                            IColorKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValueProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTimeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorKeyFrameStatics = __uuidof(IColorKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_get_ValueProperty(This,value)	\
    ( (This)->lpVtbl -> get_ValueProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_get_KeyTimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeyTimeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0083 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorKeyFrameFactory[] = L"Windows.UI.Xaml.Media.Animation.IColorKeyFrameFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0083 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0083_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrameFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("769BD88A-9CFB-4A7D-96C4-A1E7DE6FDB4B")
                            IColorKeyFrameFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IColorKeyFrame **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorKeyFrameFactory = __uuidof(IColorKeyFrameFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0084 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IDoubleKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0084 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0084_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("674456FD-E81E-4F4E-B4AD-0ACFED9ECD68")
                            IDoubleKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTime( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::KeyTime *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeyTime( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::KeyTime value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleKeyFrame = __uuidof(IDoubleKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_get_KeyTime(This,value)	\
    ( (This)->lpVtbl -> get_KeyTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_put_KeyTime(This,value)	\
    ( (This)->lpVtbl -> put_KeyTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0085 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IDoubleKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0085 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0085_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("324641B0-7D37-427A-ADEB-43F38BB61A4D")
                            IDoubleKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValueProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTimeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleKeyFrameStatics = __uuidof(IDoubleKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_get_ValueProperty(This,value)	\
    ( (This)->lpVtbl -> get_ValueProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_get_KeyTimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeyTimeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0086 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleKeyFrameFactory[] = L"Windows.UI.Xaml.Media.Animation.IDoubleKeyFrameFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0086_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrameFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("AC97DEC3-7538-40B9-B152-696F7FBF4722")
                            IDoubleKeyFrameFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IDoubleKeyFrame **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleKeyFrameFactory = __uuidof(IDoubleKeyFrameFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0087 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingFunctionBase[] = L"Windows.UI.Xaml.Media.Animation.IEasingFunctionBase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0087_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C108383F-2C02-4151-8ECD-68DDAA3F0D9B")
                            IEasingFunctionBase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingMode( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::EasingMode *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingMode( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::EasingMode value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Ease( 
                                    /* [in] */ DOUBLE normalizedTime,
                                    /* [out][retval] */ __RPC__out DOUBLE *returnValue) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingFunctionBase = __uuidof(IEasingFunctionBase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingMode )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CEasingMode value);
        
        HRESULT ( STDMETHODCALLTYPE *Ease )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * This,
            /* [in] */ DOUBLE normalizedTime,
            /* [out][retval] */ __RPC__out DOUBLE *returnValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_get_EasingMode(This,value)	\
    ( (This)->lpVtbl -> get_EasingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_put_EasingMode(This,value)	\
    ( (This)->lpVtbl -> put_EasingMode(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_Ease(This,normalizedTime,returnValue)	\
    ( (This)->lpVtbl -> Ease(This,normalizedTime,returnValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0088 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingFunctionBaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IEasingFunctionBaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0088_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("2A5031AA-2C50-4A1D-BB04-D75E07B71548")
                            IEasingFunctionBaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingModeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingFunctionBaseStatics = __uuidof(IEasingFunctionBaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingModeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_get_EasingModeProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingModeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0089 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingFunctionBaseFactory[] = L"Windows.UI.Xaml.Media.Animation.IEasingFunctionBaseFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0089 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0089_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBaseFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1830FE6A-F01B-43E0-B61F-B452A1C66FD2")
                            IEasingFunctionBaseFactory : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IEasingFunctionBaseFactory = __uuidof(IEasingFunctionBaseFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0090 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IKeySpline[] = L"Windows.UI.Xaml.Media.Animation.IKeySpline";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0090 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0090_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IKeySpline */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("77A163BB-D5CA-4A32-BA0B-7DFF988E58A0")
                            IKeySpline : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ControlPoint1( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ControlPoint1( 
                                    /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ControlPoint2( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ControlPoint2( 
                                    /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IKeySpline = __uuidof(IKeySpline);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ControlPoint1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ControlPoint1 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ControlPoint2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ControlPoint2 )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySplineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_get_ControlPoint1(This,value)	\
    ( (This)->lpVtbl -> get_ControlPoint1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_put_ControlPoint1(This,value)	\
    ( (This)->lpVtbl -> put_ControlPoint1(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_get_ControlPoint2(This,value)	\
    ( (This)->lpVtbl -> get_ControlPoint2(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_put_ControlPoint2(This,value)	\
    ( (This)->lpVtbl -> put_ControlPoint2(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0091 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_INavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0091_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A9B05091-AE4A-4372-8625-21B7A8B98CA4")
                            INavigationTransitionInfo : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_INavigationTransitionInfo = __uuidof(INavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0092 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_INavigationTransitionInfoOverrides[] = L"Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0092_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfoOverrides */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("D9517E6A-A9D0-4BF7-9DB0-4633A69DAFF2")
                            INavigationTransitionInfoOverrides : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE GetNavigationStateCore( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetNavigationStateCore( 
                                    /* [in] */ __RPC__in HSTRING navigationState) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_INavigationTransitionInfoOverrides = __uuidof(INavigationTransitionInfoOverrides);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetNavigationStateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetNavigationStateCore )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides * This,
            /* [in] */ __RPC__in HSTRING navigationState);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_GetNavigationStateCore(This,returnValue)	\
    ( (This)->lpVtbl -> GetNavigationStateCore(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_SetNavigationStateCore(This,navigationState)	\
    ( (This)->lpVtbl -> SetNavigationStateCore(This,navigationState) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0093 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_INavigationTransitionInfoFactory[] = L"Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0093_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfoFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("EDF4F8D5-AF63-4FAB-9D4A-87927F82DD6B")
                            INavigationTransitionInfoFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfo **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_INavigationTransitionInfoFactory = __uuidof(INavigationTransitionInfoFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0094 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IObjectKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0094_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("9852A851-8593-48EE-A6A4-D5D4720F029A")
                            IObjectKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                    /* [out][retval] */ __RPC__deref_out_opt IInspectable **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                    /* [in] */ __RPC__in_opt IInspectable *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTime( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::KeyTime *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeyTime( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::KeyTime value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IObjectKeyFrame = __uuidof(IObjectKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt IInspectable **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [in] */ __RPC__in_opt IInspectable *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_get_KeyTime(This,value)	\
    ( (This)->lpVtbl -> get_KeyTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_put_KeyTime(This,value)	\
    ( (This)->lpVtbl -> put_KeyTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0095 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IObjectKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IObjectKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0095_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("2CD6AB00-5319-4286-8EED-4E755EA0CF9C")
                            IObjectKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValueProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTimeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IObjectKeyFrameStatics = __uuidof(IObjectKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_get_ValueProperty(This,value)	\
    ( (This)->lpVtbl -> get_ValueProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_get_KeyTimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeyTimeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0096 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IObjectKeyFrameFactory[] = L"Windows.UI.Xaml.Media.Animation.IObjectKeyFrameFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0096_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrameFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1626143E-3E6D-44D8-9B9A-04AEA70F8492")
                            IObjectKeyFrameFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IObjectKeyFrame **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IObjectKeyFrameFactory = __uuidof(IObjectKeyFrameFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0097 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IPointKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0097_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("FCC88D01-7F82-4DAE-8026-7B7E086878B3")
                            IPointKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::Point *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                    /* [in] */ ABI::Windows::Foundation::Point value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTime( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::KeyTime *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeyTime( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::KeyTime value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointKeyFrame = __uuidof(IPointKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CPoint *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CPoint value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeyTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CKeyTime value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_get_KeyTime(This,value)	\
    ( (This)->lpVtbl -> get_KeyTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_put_KeyTime(This,value)	\
    ( (This)->lpVtbl -> put_KeyTime(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0098 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IPointKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0098_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("95CF1B27-7965-4BEC-B9FB-FBE94B65518E")
                            IPointKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ValueProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyTimeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointKeyFrameStatics = __uuidof(IPointKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyTimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_get_ValueProperty(This,value)	\
    ( (This)->lpVtbl -> get_ValueProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_get_KeyTimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeyTimeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0099 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointKeyFrameFactory[] = L"Windows.UI.Xaml.Media.Animation.IPointKeyFrameFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0099_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrameFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("CB214BDF-426A-4392-8355-C2AE52852623")
                            IPointKeyFrameFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IPointKeyFrame **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointKeyFrameFactory = __uuidof(IPointKeyFrameFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0100 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ITimeline[] = L"Windows.UI.Xaml.Media.Animation.ITimeline";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0100_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ITimeline */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("0BC465DC-BE4D-4D0D-9549-2208B715F40D")
                            ITimeline : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AutoReverse( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AutoReverse( 
                                    /* [in] */ boolean value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BeginTime( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_BeginTime( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Duration( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Duration *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Duration( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Duration value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SpeedRatio( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SpeedRatio( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillBehavior( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::FillBehavior *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FillBehavior( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::FillBehavior value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RepeatBehavior( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RepeatBehavior( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Media::Animation::RepeatBehavior value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE add_Completed( 
                                    /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
                                    /* [out][retval] */ __RPC__out EventRegistrationToken *token) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE remove_Completed( 
                                    /* [in] */ EventRegistrationToken token) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITimeline = __uuidof(ITimeline);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoReverse )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AutoReverse )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BeginTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_BeginTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Duration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CDuration *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Duration )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CDuration value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SpeedRatio )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SpeedRatio )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillBehavior )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FillBehavior )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CFillBehavior value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RepeatBehavior )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RepeatBehavior )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior value);
        
        HRESULT ( STDMETHODCALLTYPE *add_Completed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ __RPC__in_opt __FIEventHandler_1_IInspectable *value,
            /* [out][retval] */ __RPC__out EventRegistrationToken *token);
        
        HRESULT ( STDMETHODCALLTYPE *remove_Completed )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline * This,
            /* [in] */ EventRegistrationToken token);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_AutoReverse(This,value)	\
    ( (This)->lpVtbl -> get_AutoReverse(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_AutoReverse(This,value)	\
    ( (This)->lpVtbl -> put_AutoReverse(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_BeginTime(This,value)	\
    ( (This)->lpVtbl -> get_BeginTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_BeginTime(This,value)	\
    ( (This)->lpVtbl -> put_BeginTime(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_Duration(This,value)	\
    ( (This)->lpVtbl -> get_Duration(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_Duration(This,value)	\
    ( (This)->lpVtbl -> put_Duration(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_SpeedRatio(This,value)	\
    ( (This)->lpVtbl -> get_SpeedRatio(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_SpeedRatio(This,value)	\
    ( (This)->lpVtbl -> put_SpeedRatio(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_FillBehavior(This,value)	\
    ( (This)->lpVtbl -> get_FillBehavior(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_FillBehavior(This,value)	\
    ( (This)->lpVtbl -> put_FillBehavior(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_get_RepeatBehavior(This,value)	\
    ( (This)->lpVtbl -> get_RepeatBehavior(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_put_RepeatBehavior(This,value)	\
    ( (This)->lpVtbl -> put_RepeatBehavior(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_add_Completed(This,value,token)	\
    ( (This)->lpVtbl -> add_Completed(This,value,token) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_remove_Completed(This,token)	\
    ( (This)->lpVtbl -> remove_Completed(This,token) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0101 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ITimelineStatics[] = L"Windows.UI.Xaml.Media.Animation.ITimelineStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0101_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ITimelineStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A902ED4E-EF10-4D6F-9A40-93CB8895F4E5")
                            ITimelineStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AllowDependentAnimations( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_AllowDependentAnimations( 
                                    /* [in] */ boolean value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AutoReverseProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BeginTimeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DurationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SpeedRatioProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FillBehaviorProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RepeatBehaviorProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITimelineStatics = __uuidof(ITimelineStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowDependentAnimations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_AllowDependentAnimations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AutoReverseProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BeginTimeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DurationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SpeedRatioProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FillBehaviorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RepeatBehaviorProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_AllowDependentAnimations(This,value)	\
    ( (This)->lpVtbl -> get_AllowDependentAnimations(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_put_AllowDependentAnimations(This,value)	\
    ( (This)->lpVtbl -> put_AllowDependentAnimations(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_AutoReverseProperty(This,value)	\
    ( (This)->lpVtbl -> get_AutoReverseProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_BeginTimeProperty(This,value)	\
    ( (This)->lpVtbl -> get_BeginTimeProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_DurationProperty(This,value)	\
    ( (This)->lpVtbl -> get_DurationProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_SpeedRatioProperty(This,value)	\
    ( (This)->lpVtbl -> get_SpeedRatioProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_FillBehaviorProperty(This,value)	\
    ( (This)->lpVtbl -> get_FillBehaviorProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_get_RepeatBehaviorProperty(This,value)	\
    ( (This)->lpVtbl -> get_RepeatBehaviorProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0102 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ITimelineFactory[] = L"Windows.UI.Xaml.Media.Animation.ITimelineFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0102_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ITimelineFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1D56BB07-BDA4-478B-8ADA-EB04D580CD5E")
                            ITimelineFactory : public IInspectable
                            {
                            public:
                                virtual HRESULT STDMETHODCALLTYPE CreateInstance( 
                                    /* [in] */ __RPC__in_opt IInspectable *outer,
                                    /* [out] */ __RPC__deref_out_opt IInspectable **inner,
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline **instance) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ITimelineFactory = __uuidof(ITimelineFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory * This,
            /* [in] */ __RPC__in_opt IInspectable *outer,
            /* [out] */ __RPC__deref_out_opt IInspectable **inner,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline **instance);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_CreateInstance(This,outer,inner,instance)	\
    ( (This)->lpVtbl -> CreateInstance(This,outer,inner,instance) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimelineFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0103 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ITransition[] = L"Windows.UI.Xaml.Media.Animation.ITransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0103_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ITransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("3C677C7C-01D0-4DCE-B333-976F93312B08")
                            ITransition : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITransition = __uuidof(ITransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0104 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ITransitionFactory[] = L"Windows.UI.Xaml.Media.Animation.ITransitionFactory";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0104_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ITransitionFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("DC9AB2CF-3BC9-44AA-B3FC-883A83233A2C")
                            ITransitionFactory : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ITransitionFactory = __uuidof(ITransitionFactory);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITransitionFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0105 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IAddDeleteThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IAddDeleteThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0105_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IAddDeleteThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("ADEC852E-4424-4DAB-99C1-3A04E36A3C48")
                            IAddDeleteThemeTransition : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IAddDeleteThemeTransition = __uuidof(IAddDeleteThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0106 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBackEase[] = L"Windows.UI.Xaml.Media.Animation.IBackEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0106_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBackEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E47796E7-F805-4A8F-81C9-38E6472CAA94")
                            IBackEase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Amplitude( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Amplitude( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBackEase = __uuidof(IBackEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Amplitude )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Amplitude )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_get_Amplitude(This,value)	\
    ( (This)->lpVtbl -> get_Amplitude(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_put_Amplitude(This,value)	\
    ( (This)->lpVtbl -> put_Amplitude(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0107 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBackEaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IBackEaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0107_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBackEaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("3C70A2FF-A0A0-4786-926C-22321F8F25B7")
                            IBackEaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AmplitudeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBackEaseStatics = __uuidof(IBackEaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AmplitudeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_get_AmplitudeProperty(This,value)	\
    ( (This)->lpVtbl -> get_AmplitudeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0108 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBeginStoryboard[] = L"Windows.UI.Xaml.Media.Animation.IBeginStoryboard";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0108_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBeginStoryboard */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("64189FCD-49EC-4E52-A6F6-55324C921053")
                            IBeginStoryboard : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Storyboard( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Storyboard( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IStoryboard *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBeginStoryboard = __uuidof(IBeginStoryboard);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Storyboard )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_get_Storyboard(This,value)	\
    ( (This)->lpVtbl -> get_Storyboard(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_put_Storyboard(This,value)	\
    ( (This)->lpVtbl -> put_Storyboard(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0109 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBeginStoryboardStatics[] = L"Windows.UI.Xaml.Media.Animation.IBeginStoryboardStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0109_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBeginStoryboardStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("12CFF18C-AA91-4C4A-B82F-DF34FC57F94B")
                            IBeginStoryboardStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_StoryboardProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBeginStoryboardStatics = __uuidof(IBeginStoryboardStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_StoryboardProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_get_StoryboardProperty(This,value)	\
    ( (This)->lpVtbl -> get_StoryboardProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0110 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBounceEase[] = L"Windows.UI.Xaml.Media.Animation.IBounceEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0110_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBounceEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("2BF1464E-FC71-47ED-85A1-3BA9577718B4")
                            IBounceEase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Bounces( 
                                    /* [out][retval] */ __RPC__out INT32 *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Bounces( 
                                    /* [in] */ INT32 value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Bounciness( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Bounciness( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBounceEase = __uuidof(IBounceEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounces )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounces )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Bounciness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Bounciness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_get_Bounces(This,value)	\
    ( (This)->lpVtbl -> get_Bounces(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_put_Bounces(This,value)	\
    ( (This)->lpVtbl -> put_Bounces(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_get_Bounciness(This,value)	\
    ( (This)->lpVtbl -> get_Bounciness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_put_Bounciness(This,value)	\
    ( (This)->lpVtbl -> put_Bounciness(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0111 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IBounceEaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IBounceEaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0111_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IBounceEaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C0701DA2-4F73-41C9-B2CB-2EA3105107FF")
                            IBounceEaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BouncesProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_BouncinessProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IBounceEaseStatics = __uuidof(IBounceEaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BouncesProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_BouncinessProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_get_BouncesProperty(This,value)	\
    ( (This)->lpVtbl -> get_BouncesProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_get_BouncinessProperty(This,value)	\
    ( (This)->lpVtbl -> get_BouncinessProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0112 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ICircleEase[] = L"Windows.UI.Xaml.Media.Animation.ICircleEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0112_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ICircleEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("53A3BDB2-9177-4E6E-A043-5082D889AB1F")
                            ICircleEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ICircleEase = __uuidof(ICircleEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICircleEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0113 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorAnimation[] = L"Windows.UI.Xaml.Media.Animation.IColorAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0113_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B8AE8A15-0F63-4694-9467-BDAFAC1253EA")
                            IColorAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_From( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_From( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_To( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_To( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_By( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_By( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorAnimation = __uuidof(IColorAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CUI__CColor **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CUI__CColor *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_get_From(This,value)	\
    ( (This)->lpVtbl -> get_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_put_From(This,value)	\
    ( (This)->lpVtbl -> put_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_get_To(This,value)	\
    ( (This)->lpVtbl -> get_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_put_To(This,value)	\
    ( (This)->lpVtbl -> put_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_get_By(This,value)	\
    ( (This)->lpVtbl -> get_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_put_By(This,value)	\
    ( (This)->lpVtbl -> put_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0114 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IColorAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0114_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("55EAF6E2-87E3-4F48-958F-855B2F9EA9EC")
                            IColorAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ByProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorAnimationStatics = __uuidof(IColorAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ByProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_get_FromProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_get_ToProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_get_ByProperty(This,value)	\
    ( (This)->lpVtbl -> get_ByProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0115 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.IColorAnimationUsingKeyFrames";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0115_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorAnimationUsingKeyFrames */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F5C82640-13C3-42AA-9AE2-7E6B51C92F95")
                            IColorAnimationUsingKeyFrames : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyFrames( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorAnimationUsingKeyFrames = __uuidof(IColorAnimationUsingKeyFrames);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyFrames )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CColorKeyFrame **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_get_KeyFrames(This,value)	\
    ( (This)->lpVtbl -> get_KeyFrames(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0116 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IColorAnimationUsingKeyFramesStatics[] = L"Windows.UI.Xaml.Media.Animation.IColorAnimationUsingKeyFramesStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0116_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IColorAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B4723CDC-96E9-48F9-8D92-9B648B2F1CC6")
                            IColorAnimationUsingKeyFramesStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IColorAnimationUsingKeyFramesStatics = __uuidof(IColorAnimationUsingKeyFramesStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0117 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IContentThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IContentThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0117_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IContentThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F66FC5C3-5915-437D-8E3B-ADF8E7F0AB57")
                            IContentThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_HorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_VerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IContentThemeTransition = __uuidof(IContentThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_HorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_VerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_get_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_put_HorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_HorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_get_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_put_VerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_VerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0118 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IContentThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.IContentThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0118_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IContentThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("0E8EE385-9A42-4459-AFA9-337DC41E1587")
                            IContentThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_VerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IContentThemeTransitionStatics = __uuidof(IContentThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_VerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_get_HorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_HorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_get_VerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_VerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0119 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ICubicEase[] = L"Windows.UI.Xaml.Media.Animation.ICubicEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0119_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ICubicEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1B94FC76-DAD7-4354-B1A2-7969FBF6A70D")
                            ICubicEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ICubicEase = __uuidof(ICubicEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICubicEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0120 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDiscreteColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IDiscreteColorKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0120_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDiscreteColorKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("230C08F4-E062-4CB1-8E2A-14093D73ED8C")
                            IDiscreteColorKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDiscreteColorKeyFrame = __uuidof(IDiscreteColorKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0121 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDiscreteDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IDiscreteDoubleKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0121_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDiscreteDoubleKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F5F51F3A-AD11-49CE-8E1C-08FDF1447446")
                            IDiscreteDoubleKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDiscreteDoubleKeyFrame = __uuidof(IDiscreteDoubleKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0122 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDiscreteObjectKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IDiscreteObjectKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0122_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDiscreteObjectKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C7DCDE89-F12D-4A9C-8199-E7A9ECE3A473")
                            IDiscreteObjectKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDiscreteObjectKeyFrame = __uuidof(IDiscreteObjectKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0123 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDiscretePointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IDiscretePointKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0123_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDiscretePointKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E0A9070D-4C42-4A90-983A-75F5A83A2FBE")
                            IDiscretePointKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDiscretePointKeyFrame = __uuidof(IDiscretePointKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0124 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDoubleAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0124_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7E9F3D59-0F07-4BC9-977D-03763FF8154F")
                            IDoubleAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_From( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_From( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_double *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_To( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_To( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_double *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_By( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_By( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_double *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleAnimation = __uuidof(IDoubleAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_get_From(This,value)	\
    ( (This)->lpVtbl -> get_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_put_From(This,value)	\
    ( (This)->lpVtbl -> put_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_get_To(This,value)	\
    ( (This)->lpVtbl -> get_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_put_To(This,value)	\
    ( (This)->lpVtbl -> put_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_get_By(This,value)	\
    ( (This)->lpVtbl -> get_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_put_By(This,value)	\
    ( (This)->lpVtbl -> put_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0125 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDoubleAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0125_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E27A935D-F111-43B7-B824-832B58D7786B")
                            IDoubleAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ByProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleAnimationStatics = __uuidof(IDoubleAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ByProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_get_FromProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_get_ToProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_get_ByProperty(This,value)	\
    ( (This)->lpVtbl -> get_ByProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0126 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFrames";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0126_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleAnimationUsingKeyFrames */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4FEE628F-BFEE-4F75-83C2-A93B39488473")
                            IDoubleAnimationUsingKeyFrames : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyFrames( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleAnimationUsingKeyFrames = __uuidof(IDoubleAnimationUsingKeyFrames);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyFrames )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CDoubleKeyFrame **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_get_KeyFrames(This,value)	\
    ( (This)->lpVtbl -> get_KeyFrames(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0127 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDoubleAnimationUsingKeyFramesStatics[] = L"Windows.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFramesStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0127_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDoubleAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("109BF2F6-C60F-49AA-ABF6-F696D492116B")
                            IDoubleAnimationUsingKeyFramesStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDoubleAnimationUsingKeyFramesStatics = __uuidof(IDoubleAnimationUsingKeyFramesStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0128 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDragItemThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDragItemThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0128_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDragItemThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("0C7D5DB5-7ED6-4949-B4E6-A78C9F4F978D")
                            IDragItemThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDragItemThemeAnimation = __uuidof(IDragItemThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0129 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDragItemThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDragItemThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0129_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDragItemThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("6218B9F5-013A-4FB1-86FC-92BC4E8D0241")
                            IDragItemThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDragItemThemeAnimationStatics = __uuidof(IDragItemThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0130 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDragOverThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDragOverThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0130_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDragOverThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("72F762F7-7E51-4A6B-B937-DC4B4C1C5458")
                            IDragOverThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Direction( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Direction( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDragOverThemeAnimation = __uuidof(IDragOverThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Direction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Direction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_get_ToOffset(This,value)	\
    ( (This)->lpVtbl -> get_ToOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_put_ToOffset(This,value)	\
    ( (This)->lpVtbl -> put_ToOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_get_Direction(This,value)	\
    ( (This)->lpVtbl -> get_Direction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_put_Direction(This,value)	\
    ( (This)->lpVtbl -> put_Direction(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0131 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDragOverThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDragOverThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0131_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDragOverThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("146FFE57-3C9D-41D9-A5FF-8D7239516810")
                            IDragOverThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DirectionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDragOverThemeAnimationStatics = __uuidof(IDragOverThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_get_ToOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_get_DirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_DirectionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0132 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDrillInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDrillInThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0132_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDrillInThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B090B824-F1D2-41B8-87BA-78034126594C")
                            IDrillInThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EntranceTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EntranceTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExitTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExitTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDrillInThemeAnimation = __uuidof(IDrillInThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EntranceTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EntranceTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExitTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExitTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_get_EntranceTargetName(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_put_EntranceTargetName(This,value)	\
    ( (This)->lpVtbl -> put_EntranceTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_get_EntranceTarget(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_put_EntranceTarget(This,value)	\
    ( (This)->lpVtbl -> put_EntranceTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_get_ExitTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_put_ExitTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ExitTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_get_ExitTarget(This,value)	\
    ( (This)->lpVtbl -> get_ExitTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_put_ExitTarget(This,value)	\
    ( (This)->lpVtbl -> put_ExitTarget(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0133 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDrillInThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDrillInThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0133_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDrillInThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C61FE488-A17A-4B11-B53B-A4F1A07D4BA9")
                            IDrillInThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDrillInThemeAnimationStatics = __uuidof(IDrillInThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_get_EntranceTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_get_EntranceTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_get_ExitTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_get_ExitTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0134 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDrillOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDrillOutThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0134_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDrillOutThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("D890CCDF-06D3-4F7E-8E4A-4FB76E256139")
                            IDrillOutThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EntranceTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EntranceTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExitTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExitTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDrillOutThemeAnimation = __uuidof(IDrillOutThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EntranceTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EntranceTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExitTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExitTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_get_EntranceTargetName(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_put_EntranceTargetName(This,value)	\
    ( (This)->lpVtbl -> put_EntranceTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_get_EntranceTarget(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_put_EntranceTarget(This,value)	\
    ( (This)->lpVtbl -> put_EntranceTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_get_ExitTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_put_ExitTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ExitTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_get_ExitTarget(This,value)	\
    ( (This)->lpVtbl -> get_ExitTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_put_ExitTarget(This,value)	\
    ( (This)->lpVtbl -> put_ExitTarget(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0135 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDrillOutThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDrillOutThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0135_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDrillOutThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("BEB5DB9B-2617-4888-80DD-72FA7BB6FAC3")
                            IDrillOutThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EntranceTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDrillOutThemeAnimationStatics = __uuidof(IDrillOutThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EntranceTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_get_EntranceTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_get_EntranceTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_EntranceTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_get_ExitTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_get_ExitTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitTargetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0136 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDropTargetItemThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IDropTargetItemThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0136_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDropTargetItemThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1881C968-1824-462B-87E8-C357212B977B")
                            IDropTargetItemThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDropTargetItemThemeAnimation = __uuidof(IDropTargetItemThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0137 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDropTargetItemThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IDropTargetItemThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0137_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDropTargetItemThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("AE80F486-2E56-4513-BF18-D77470164AE5")
                            IDropTargetItemThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IDropTargetItemThemeAnimationStatics = __uuidof(IDropTargetItemThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0138 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IEasingColorKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0138_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingColorKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C733D630-F4B9-4934-9BDD-27AC5ED1CFD8")
                            IEasingColorKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingColorKeyFrame = __uuidof(IEasingColorKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0139 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingColorKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IEasingColorKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0139_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingColorKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("6F3837FC-8E3D-4522-9B0F-003DB8609851")
                            IEasingColorKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingColorKeyFrameStatics = __uuidof(IEasingColorKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0140 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IEasingDoubleKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0140_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingDoubleKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("965ADB8D-9A54-4108-B4FF-B5A5212CB338")
                            IEasingDoubleKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingDoubleKeyFrame = __uuidof(IEasingDoubleKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0141 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingDoubleKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IEasingDoubleKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0141_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingDoubleKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("C8D3D845-DBAE-4E5B-8B84-D9537398E5B1")
                            IEasingDoubleKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingDoubleKeyFrameStatics = __uuidof(IEasingDoubleKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0142 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingPointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.IEasingPointKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0142_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingPointKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B3C91380-6868-4225-A70B-3981CC0B2947")
                            IEasingPointKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingPointKeyFrame = __uuidof(IEasingPointKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0143 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEasingPointKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.IEasingPointKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0143_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEasingPointKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E22DBFC4-080C-402C-A6B5-F48D0A98116B")
                            IEasingPointKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEasingPointKeyFrameStatics = __uuidof(IEasingPointKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0144 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEdgeUIThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IEdgeUIThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0144_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEdgeUIThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("5C86C19B-49D7-19EC-CF19-83A73C6DE75E")
                            IEdgeUIThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Edge( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::EdgeTransitionLocation *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Edge( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::EdgeTransitionLocation value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEdgeUIThemeTransition = __uuidof(IEdgeUIThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Edge )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Edge )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_get_Edge(This,value)	\
    ( (This)->lpVtbl -> get_Edge(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_put_Edge(This,value)	\
    ( (This)->lpVtbl -> put_Edge(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0145 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEdgeUIThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.IEdgeUIThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0145_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEdgeUIThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("16A2B13B-4705-302B-27C6-2AAC92F645AC")
                            IEdgeUIThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EdgeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEdgeUIThemeTransitionStatics = __uuidof(IEdgeUIThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EdgeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_get_EdgeProperty(This,value)	\
    ( (This)->lpVtbl -> get_EdgeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0146 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IElasticEase[] = L"Windows.UI.Xaml.Media.Animation.IElasticEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0146_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IElasticEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("EF5BA58C-B0B6-4A6C-9CA8-FB4233F12459")
                            IElasticEase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Oscillations( 
                                    /* [out][retval] */ __RPC__out INT32 *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Oscillations( 
                                    /* [in] */ INT32 value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Springiness( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Springiness( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IElasticEase = __uuidof(IElasticEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Oscillations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [out][retval] */ __RPC__out INT32 *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Oscillations )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [in] */ INT32 value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Springiness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Springiness )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_get_Oscillations(This,value)	\
    ( (This)->lpVtbl -> get_Oscillations(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_put_Oscillations(This,value)	\
    ( (This)->lpVtbl -> put_Oscillations(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_get_Springiness(This,value)	\
    ( (This)->lpVtbl -> get_Springiness(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_put_Springiness(This,value)	\
    ( (This)->lpVtbl -> put_Springiness(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0147 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IElasticEaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IElasticEaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0147_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IElasticEaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A9F566EC-FE9C-4B2B-8E52-BB785D562185")
                            IElasticEaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OscillationsProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SpringinessProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IElasticEaseStatics = __uuidof(IElasticEaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OscillationsProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SpringinessProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_get_OscillationsProperty(This,value)	\
    ( (This)->lpVtbl -> get_OscillationsProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_get_SpringinessProperty(This,value)	\
    ( (This)->lpVtbl -> get_SpringinessProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0148 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEntranceThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IEntranceThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0148_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEntranceThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("07698C09-A8E3-419A-A01D-7410A0AE8EC8")
                            IEntranceThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStaggeringEnabled( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsStaggeringEnabled( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEntranceThemeTransition = __uuidof(IEntranceThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStaggeringEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStaggeringEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_get_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_put_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_get_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_put_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_get_IsStaggeringEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsStaggeringEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_put_IsStaggeringEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsStaggeringEnabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0149 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEntranceThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.IEntranceThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0149_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEntranceThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("37CC0577-FF98-4AED-B86E-5EC23702F877")
                            IEntranceThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStaggeringEnabledProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEntranceThemeTransitionStatics = __uuidof(IEntranceThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStaggeringEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_get_FromHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_get_FromVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_get_IsStaggeringEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsStaggeringEnabledProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0150 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IExponentialEase[] = L"Windows.UI.Xaml.Media.Animation.IExponentialEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0150_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IExponentialEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7CB9E41D-F0BB-4BCA-9DA5-9BA3A11734C4")
                            IExponentialEase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Exponent( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Exponent( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IExponentialEase = __uuidof(IExponentialEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Exponent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Exponent )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_get_Exponent(This,value)	\
    ( (This)->lpVtbl -> get_Exponent(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_put_Exponent(This,value)	\
    ( (This)->lpVtbl -> put_Exponent(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0151 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IExponentialEaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IExponentialEaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0151_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IExponentialEaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F37EE7E3-A761-4352-9AD6-70794567581A")
                            IExponentialEaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExponentProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IExponentialEaseStatics = __uuidof(IExponentialEaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExponentProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_get_ExponentProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExponentProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0152 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IFadeInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IFadeInThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0152_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IFadeInThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("6D4BC8F5-A918-4477-8078-554C68812AB8")
                            IFadeInThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFadeInThemeAnimation = __uuidof(IFadeInThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0153 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IFadeInThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IFadeInThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0153_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IFadeInThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7F0117E1-BEA9-4923-B23A-0DDF4D7B8737")
                            IFadeInThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFadeInThemeAnimationStatics = __uuidof(IFadeInThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0154 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IFadeOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IFadeOutThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0154_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IFadeOutThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("89276BA9-FFD4-45B6-9B9A-CED48951E712")
                            IFadeOutThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFadeOutThemeAnimation = __uuidof(IFadeOutThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0155 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IFadeOutThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IFadeOutThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0155_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IFadeOutThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("FE17A81A-4168-4F68-A28C-E5DD98CF680F")
                            IFadeOutThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IFadeOutThemeAnimationStatics = __uuidof(IFadeOutThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0156 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ILinearColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ILinearColorKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0156_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ILinearColorKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("66FDB6EF-AC81-4611-B1D2-61F545983F03")
                            ILinearColorKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILinearColorKeyFrame = __uuidof(ILinearColorKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0157 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ILinearDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ILinearDoubleKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0157_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ILinearDoubleKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("8EFDF265-9A7B-431D-8F0C-14C56B5EA4D9")
                            ILinearDoubleKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILinearDoubleKeyFrame = __uuidof(ILinearDoubleKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0158 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ILinearPointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ILinearPointKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0158_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ILinearPointKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E7C9B8EF-AF24-49EE-84F1-A86600A4E319")
                            ILinearPointKeyFrame : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ILinearPointKeyFrame = __uuidof(ILinearPointKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0159 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IObjectAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0159_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IObjectAnimationUsingKeyFrames */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("334A2D92-B74A-4C64-B9A6-58BCFA314F22")
                            IObjectAnimationUsingKeyFrames : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyFrames( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IObjectAnimationUsingKeyFrames = __uuidof(IObjectAnimationUsingKeyFrames);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyFrames )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CObjectKeyFrame **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_get_KeyFrames(This,value)	\
    ( (This)->lpVtbl -> get_KeyFrames(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0160 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IObjectAnimationUsingKeyFramesStatics[] = L"Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFramesStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0160_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IObjectAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("EB736182-6AF1-49A3-97B6-783ED97400FE")
                            IObjectAnimationUsingKeyFramesStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IObjectAnimationUsingKeyFramesStatics = __uuidof(IObjectAnimationUsingKeyFramesStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0161 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPaneThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IPaneThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0161_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPaneThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4708EB8E-4BFC-EE46-D4F9-708DEF3FBB2B")
                            IPaneThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Edge( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::EdgeTransitionLocation *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Edge( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::EdgeTransitionLocation value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPaneThemeTransition = __uuidof(IPaneThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Edge )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Edge )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_get_Edge(This,value)	\
    ( (This)->lpVtbl -> get_Edge(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_put_Edge(This,value)	\
    ( (This)->lpVtbl -> put_Edge(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0162 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPaneThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.IPaneThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0162_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPaneThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("316B382F-4BE4-1797-B45C-CD900BBE0CAA")
                            IPaneThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EdgeProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPaneThemeTransitionStatics = __uuidof(IPaneThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EdgeProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_get_EdgeProperty(This,value)	\
    ( (This)->lpVtbl -> get_EdgeProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0163 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointAnimation[] = L"Windows.UI.Xaml.Media.Animation.IPointAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0163_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("30F04312-7726-4F88-B8E2-2FA54518963B")
                            IPointAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_From( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_From( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_To( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_To( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_By( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_By( 
                                    /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunction( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EasingFunction( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IEasingFunctionBase *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointAnimation = __uuidof(IPointAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_To )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CPoint **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_By )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CPoint *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EasingFunction )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_get_From(This,value)	\
    ( (This)->lpVtbl -> get_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_put_From(This,value)	\
    ( (This)->lpVtbl -> put_From(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_get_To(This,value)	\
    ( (This)->lpVtbl -> get_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_put_To(This,value)	\
    ( (This)->lpVtbl -> put_To(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_get_By(This,value)	\
    ( (This)->lpVtbl -> get_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_put_By(This,value)	\
    ( (This)->lpVtbl -> put_By(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_get_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_put_EasingFunction(This,value)	\
    ( (This)->lpVtbl -> put_EasingFunction(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0164 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IPointAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0164_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("2F99B356-E737-408B-A0FD-327826D32255")
                            IPointAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ByProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EasingFunctionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointAnimationStatics = __uuidof(IPointAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ByProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EasingFunctionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_get_FromProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_get_ToProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_get_ByProperty(This,value)	\
    ( (This)->lpVtbl -> get_ByProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_get_EasingFunctionProperty(This,value)	\
    ( (This)->lpVtbl -> get_EasingFunctionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0165 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.IPointAnimationUsingKeyFrames";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0165_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointAnimationUsingKeyFrames */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("9B944F72-446A-41D0-A129-41A620F4595D")
                            IPointAnimationUsingKeyFrames : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeyFrames( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimation( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_EnableDependentAnimation( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointAnimationUsingKeyFrames = __uuidof(IPointAnimationUsingKeyFrames);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeyFrames )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CPointKeyFrame **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDependentAnimation )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_get_KeyFrames(This,value)	\
    ( (This)->lpVtbl -> get_KeyFrames(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_get_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimation(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_put_EnableDependentAnimation(This,value)	\
    ( (This)->lpVtbl -> put_EnableDependentAnimation(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0166 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointAnimationUsingKeyFramesStatics[] = L"Windows.UI.Xaml.Media.Animation.IPointAnimationUsingKeyFramesStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0166_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointAnimationUsingKeyFramesStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("5F454C87-2390-46EA-BAA7-762F4BC30D04")
                            IPointAnimationUsingKeyFramesStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_EnableDependentAnimationProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointAnimationUsingKeyFramesStatics = __uuidof(IPointAnimationUsingKeyFramesStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDependentAnimationProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_get_EnableDependentAnimationProperty(This,value)	\
    ( (This)->lpVtbl -> get_EnableDependentAnimationProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0167 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointerDownThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IPointerDownThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0167_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointerDownThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("B58E714E-C49D-4788-A233-0AE85D99DD5A")
                            IPointerDownThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointerDownThemeAnimation = __uuidof(IPointerDownThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0168 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointerDownThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IPointerDownThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0168_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointerDownThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("63A7CB7B-6D46-4494-B94A-E72F3B492A61")
                            IPointerDownThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointerDownThemeAnimationStatics = __uuidof(IPointerDownThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0169 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointerUpThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IPointerUpThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0169_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointerUpThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E9E9D07D-6340-4828-AD12-690694B9910B")
                            IPointerUpThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointerUpThemeAnimation = __uuidof(IPointerUpThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0170 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPointerUpThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IPointerUpThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0170_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPointerUpThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7C618F9C-7992-4139-8BFC-0883B9727A7E")
                            IPointerUpThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPointerUpThemeAnimationStatics = __uuidof(IPointerUpThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0171 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IPopInThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0171_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopInThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("196938C1-1C07-4C28-8847-F9F055B32855")
                            IPopInThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopInThemeAnimation = __uuidof(IPopInThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_get_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_put_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_get_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_put_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromVerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0172 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopInThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IPopInThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0172 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0172_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopInThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("EFAA99D3-218A-4701-977F-F1BFAE8BA649")
                            IPopInThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopInThemeAnimationStatics = __uuidof(IPopInThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_get_FromHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_get_FromVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0173 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IPopOutThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0173_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopOutThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4786AB49-0E48-4E81-A2E5-CC5AA19E48D3")
                            IPopOutThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopOutThemeAnimation = __uuidof(IPopOutThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0174 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopOutThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IPopOutThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0174_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopOutThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1D492C09-03C1-4490-99DC-909FEAB357FB")
                            IPopOutThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopOutThemeAnimationStatics = __uuidof(IPopOutThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0175 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopupThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IPopupThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0175_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopupThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("47843552-4283-545E-C791-268DCA22CE4B")
                            IPopupThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopupThemeTransition = __uuidof(IPopupThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_get_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_put_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_get_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_put_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromVerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0176 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPopupThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.IPopupThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0176_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPopupThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E5A1640E-490D-1505-9F6B-8FAFC044DEC5")
                            IPopupThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPopupThemeTransitionStatics = __uuidof(IPopupThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_get_FromHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_get_FromVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0177 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPowerEase[] = L"Windows.UI.Xaml.Media.Animation.IPowerEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0177_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPowerEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("69C80579-EEDF-405B-8680-D9606880C937")
                            IPowerEase : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Power( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Power( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPowerEase = __uuidof(IPowerEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Power )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Power )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_get_Power(This,value)	\
    ( (This)->lpVtbl -> get_Power(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_put_Power(This,value)	\
    ( (This)->lpVtbl -> put_Power(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0178 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IPowerEaseStatics[] = L"Windows.UI.Xaml.Media.Animation.IPowerEaseStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0178_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IPowerEaseStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A5955103-91A2-460C-9C41-D28F6A939BDA")
                            IPowerEaseStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_PowerProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IPowerEaseStatics = __uuidof(IPowerEaseStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_PowerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_get_PowerProperty(This,value)	\
    ( (This)->lpVtbl -> get_PowerProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0179 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IQuadraticEase[] = L"Windows.UI.Xaml.Media.Animation.IQuadraticEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0179_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IQuadraticEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E1510E91-EF6D-44F0-803D-68D16DE0DDFC")
                            IQuadraticEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IQuadraticEase = __uuidof(IQuadraticEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0180 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IQuarticEase[] = L"Windows.UI.Xaml.Media.Animation.IQuarticEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0180_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IQuarticEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E8698814-FE42-4A05-B5B8-081F41157815")
                            IQuarticEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IQuarticEase = __uuidof(IQuarticEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuarticEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0181 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IQuinticEase[] = L"Windows.UI.Xaml.Media.Animation.IQuinticEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0181_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IQuinticEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("92EE793B-3C49-4108-AA11-AB786603DA21")
                            IQuinticEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IQuinticEase = __uuidof(IQuinticEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIQuinticEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0182 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IReorderThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IReorderThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0182_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IReorderThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F2065C6C-D052-4AD1-8362-B71B36DF7497")
                            IReorderThemeTransition : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IReorderThemeTransition = __uuidof(IReorderThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0183 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IRepositionThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.IRepositionThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0183_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IRepositionThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("ECDA24E8-8945-4949-A1BF-62109965A7E9")
                            IRepositionThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRepositionThemeAnimation = __uuidof(IRepositionThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_get_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_put_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_get_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_put_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromVerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0184 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IRepositionThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.IRepositionThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0184_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IRepositionThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4D92B1B1-860B-4BF9-A59D-1EB1CCBE8FE0")
                            IRepositionThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IRepositionThemeAnimationStatics = __uuidof(IRepositionThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_get_FromHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_get_FromVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0185 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IRepositionThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.IRepositionThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0185_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IRepositionThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("88329B82-98F3-455A-AC53-2E7083B6E22C")
                            IRepositionThemeTransition : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IRepositionThemeTransition = __uuidof(IRepositionThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0186 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISineEase[] = L"Windows.UI.Xaml.Media.Animation.ISineEase";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISineEase */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A9382962-230B-49DA-9E0D-664987892343")
                            ISineEase : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISineEase = __uuidof(ISineEase);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISineEase_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0187 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplineColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ISplineColorKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0187_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplineColorKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1A4A5941-1FE0-473A-8EFE-4316D8C86229")
                            ISplineColorKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySpline( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeySpline( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplineColorKeyFrame = __uuidof(ISplineColorKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_get_KeySpline(This,value)	\
    ( (This)->lpVtbl -> get_KeySpline(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_put_KeySpline(This,value)	\
    ( (This)->lpVtbl -> put_KeySpline(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0188 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplineColorKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.ISplineColorKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0188_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplineColorKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("61D1D997-8589-4F2F-8FBB-7D03EDC98DD3")
                            ISplineColorKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySplineProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplineColorKeyFrameStatics = __uuidof(ISplineColorKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySplineProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_get_KeySplineProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeySplineProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0189 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplineDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ISplineDoubleKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0189 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0189_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplineDoubleKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("00D72D38-6B2B-4843-838E-C8B115EEC801")
                            ISplineDoubleKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySpline( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeySpline( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplineDoubleKeyFrame = __uuidof(ISplineDoubleKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_get_KeySpline(This,value)	\
    ( (This)->lpVtbl -> get_KeySpline(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_put_KeySpline(This,value)	\
    ( (This)->lpVtbl -> put_KeySpline(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0190 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplineDoubleKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.ISplineDoubleKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0190 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0190_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0190_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplineDoubleKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("060A8FFC-975F-4E4E-9EC7-13C5AEE02062")
                            ISplineDoubleKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySplineProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplineDoubleKeyFrameStatics = __uuidof(ISplineDoubleKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySplineProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_get_KeySplineProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeySplineProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0191 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplinePointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ISplinePointKeyFrame";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0191 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0191_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0191_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplinePointKeyFrame */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("0F19F306-7036-494F-BC3C-780DF0CC524A")
                            ISplinePointKeyFrame : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySpline( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_KeySpline( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::IKeySpline *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplinePointKeyFrame = __uuidof(ISplinePointKeyFrame);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_KeySpline )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIKeySpline *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_get_KeySpline(This,value)	\
    ( (This)->lpVtbl -> get_KeySpline(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_put_KeySpline(This,value)	\
    ( (This)->lpVtbl -> put_KeySpline(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0192 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplinePointKeyFrameStatics[] = L"Windows.UI.Xaml.Media.Animation.ISplinePointKeyFrameStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0192 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0192_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0192_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplinePointKeyFrameStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("E97A32C2-0A7A-4766-95CB-0D692611CB4C")
                            ISplinePointKeyFrameStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_KeySplineProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplinePointKeyFrameStatics = __uuidof(ISplinePointKeyFrameStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_KeySplineProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_get_KeySplineProperty(This,value)	\
    ( (This)->lpVtbl -> get_KeySplineProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0193 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplitCloseThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.ISplitCloseThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0193 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0193_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0193_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplitCloseThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4F799518-FF39-4E90-BB74-2ABD56027402")
                            ISplitCloseThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedLength( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedLength( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedLength( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedLength( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffsetFromCenter( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OffsetFromCenter( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationDirection( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTranslationDirection( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTranslationOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplitCloseThemeAnimation = __uuidof(ISplitCloseThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetFromCenter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OffsetFromCenter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTranslationDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTranslationOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_OpenedTargetName(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_OpenedTargetName(This,value)	\
    ( (This)->lpVtbl -> put_OpenedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_OpenedTarget(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_OpenedTarget(This,value)	\
    ( (This)->lpVtbl -> put_OpenedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ClosedTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ClosedTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ClosedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ClosedTarget(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ClosedTarget(This,value)	\
    ( (This)->lpVtbl -> put_ClosedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ContentTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ContentTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ContentTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ContentTarget(This,value)	\
    ( (This)->lpVtbl -> get_ContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ContentTarget(This,value)	\
    ( (This)->lpVtbl -> put_ContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_OpenedLength(This,value)	\
    ( (This)->lpVtbl -> get_OpenedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_OpenedLength(This,value)	\
    ( (This)->lpVtbl -> put_OpenedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ClosedLength(This,value)	\
    ( (This)->lpVtbl -> get_ClosedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ClosedLength(This,value)	\
    ( (This)->lpVtbl -> put_ClosedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_OffsetFromCenter(This,value)	\
    ( (This)->lpVtbl -> get_OffsetFromCenter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_OffsetFromCenter(This,value)	\
    ( (This)->lpVtbl -> put_OffsetFromCenter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ContentTranslationDirection(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ContentTranslationDirection(This,value)	\
    ( (This)->lpVtbl -> put_ContentTranslationDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_get_ContentTranslationOffset(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_put_ContentTranslationOffset(This,value)	\
    ( (This)->lpVtbl -> put_ContentTranslationOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0194 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplitCloseThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.ISplitCloseThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0194 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0194_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0194_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplitCloseThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("7AA94DE9-CC9B-4E90-A11A-0050A2216A9E")
                            ISplitCloseThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedLengthProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedLengthProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffsetFromCenterProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationDirectionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplitCloseThemeAnimationStatics = __uuidof(ISplitCloseThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetFromCenterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationDirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_OpenedTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_OpenedTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ClosedTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ClosedTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ContentTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ContentTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_OpenedLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedLengthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ClosedLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedLengthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_OffsetFromCenterProperty(This,value)	\
    ( (This)->lpVtbl -> get_OffsetFromCenterProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ContentTranslationDirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationDirectionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_get_ContentTranslationOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0195 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplitOpenThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.ISplitOpenThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0195 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0195_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0195_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplitOpenThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("785FD7AA-5456-4639-8FD2-26BAE6A5FFE4")
                            ISplitOpenThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTarget( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyObject **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedLength( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OpenedLength( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedLength( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ClosedLength( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffsetFromCenter( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_OffsetFromCenter( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationDirection( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTranslationDirection( 
                                    /* [in] */ ABI::Windows::UI::Xaml::Controls::Primitives::AnimationDirection value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentTranslationOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplitOpenThemeAnimation = __uuidof(ISplitOpenThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OpenedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ClosedLength )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetFromCenter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_OffsetFromCenter )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTranslationDirection )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ __x_ABI_CWindows_CUI_CXaml_CControls_CPrimitives_CAnimationDirection value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentTranslationOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_OpenedTargetName(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_OpenedTargetName(This,value)	\
    ( (This)->lpVtbl -> put_OpenedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_OpenedTarget(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_OpenedTarget(This,value)	\
    ( (This)->lpVtbl -> put_OpenedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ClosedTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ClosedTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ClosedTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ClosedTarget(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ClosedTarget(This,value)	\
    ( (This)->lpVtbl -> put_ClosedTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ContentTargetName(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ContentTargetName(This,value)	\
    ( (This)->lpVtbl -> put_ContentTargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ContentTarget(This,value)	\
    ( (This)->lpVtbl -> get_ContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ContentTarget(This,value)	\
    ( (This)->lpVtbl -> put_ContentTarget(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_OpenedLength(This,value)	\
    ( (This)->lpVtbl -> get_OpenedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_OpenedLength(This,value)	\
    ( (This)->lpVtbl -> put_OpenedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ClosedLength(This,value)	\
    ( (This)->lpVtbl -> get_ClosedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ClosedLength(This,value)	\
    ( (This)->lpVtbl -> put_ClosedLength(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_OffsetFromCenter(This,value)	\
    ( (This)->lpVtbl -> get_OffsetFromCenter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_OffsetFromCenter(This,value)	\
    ( (This)->lpVtbl -> put_OffsetFromCenter(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ContentTranslationDirection(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ContentTranslationDirection(This,value)	\
    ( (This)->lpVtbl -> put_ContentTranslationDirection(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_get_ContentTranslationOffset(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_put_ContentTranslationOffset(This,value)	\
    ( (This)->lpVtbl -> put_ContentTranslationOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0196 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISplitOpenThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.ISplitOpenThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0196 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0196_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0196_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISplitOpenThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("8D4CFA89-3A91-458D-B0FB-4CAD625CBF8D")
                            ISplitOpenThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTargetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OpenedLengthProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ClosedLengthProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_OffsetFromCenterProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationDirectionProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentTranslationOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISplitOpenThemeAnimationStatics = __uuidof(ISplitOpenThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OpenedLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ClosedLengthProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_OffsetFromCenterProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationDirectionProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTranslationOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_OpenedTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_OpenedTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ClosedTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ClosedTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ContentTargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ContentTargetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTargetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_OpenedLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_OpenedLengthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ClosedLengthProperty(This,value)	\
    ( (This)->lpVtbl -> get_ClosedLengthProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_OffsetFromCenterProperty(This,value)	\
    ( (This)->lpVtbl -> get_OffsetFromCenterProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ContentTranslationDirectionProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationDirectionProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_get_ContentTranslationOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ContentTranslationOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0197 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IStoryboard[] = L"Windows.UI.Xaml.Media.Animation.IStoryboard";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0197 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0197_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0197_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IStoryboard */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("D45C1E6E-3594-460E-981A-32271BD3AA06")
                            IStoryboard : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Children( 
                                    /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Seek( 
                                    /* [in] */ ABI::Windows::Foundation::TimeSpan offset) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Begin( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Pause( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE Resume( void) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetCurrentState( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::UI::Xaml::Media::Animation::ClockState *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetCurrentTime( 
                                    /* [out][retval] */ __RPC__out ABI::Windows::Foundation::TimeSpan *returnValue) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SeekAlignedToLastTick( 
                                    /* [in] */ ABI::Windows::Foundation::TimeSpan offset) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SkipToFill( void) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IStoryboard = __uuidof(IStoryboard);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Children )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CUI__CXaml__CMedia__CAnimation__CTimeline **value);
        
        HRESULT ( STDMETHODCALLTYPE *Seek )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan offset);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *Begin )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *Pause )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *Resume )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentState )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CClockState *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *GetCurrentTime )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [out][retval] */ __RPC__out __x_ABI_CWindows_CFoundation_CTimeSpan *returnValue);
        
        HRESULT ( STDMETHODCALLTYPE *SeekAlignedToLastTick )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This,
            /* [in] */ __x_ABI_CWindows_CFoundation_CTimeSpan offset);
        
        HRESULT ( STDMETHODCALLTYPE *SkipToFill )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard * This);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_get_Children(This,value)	\
    ( (This)->lpVtbl -> get_Children(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Seek(This,offset)	\
    ( (This)->lpVtbl -> Seek(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Begin(This)	\
    ( (This)->lpVtbl -> Begin(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Pause(This)	\
    ( (This)->lpVtbl -> Pause(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_Resume(This)	\
    ( (This)->lpVtbl -> Resume(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_GetCurrentState(This,returnValue)	\
    ( (This)->lpVtbl -> GetCurrentState(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_GetCurrentTime(This,returnValue)	\
    ( (This)->lpVtbl -> GetCurrentTime(This,returnValue) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_SeekAlignedToLastTick(This,offset)	\
    ( (This)->lpVtbl -> SeekAlignedToLastTick(This,offset) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_SkipToFill(This)	\
    ( (This)->lpVtbl -> SkipToFill(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboard_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0198 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IStoryboardStatics[] = L"Windows.UI.Xaml.Media.Animation.IStoryboardStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0198 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0198_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0198_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IStoryboardStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("D82F07D8-73D5-4379-BD48-7E05184A8BAD")
                            IStoryboardStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetPropertyProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetTargetProperty( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *element,
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *path) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetTargetProperty( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *element,
                                    /* [in] */ __RPC__in HSTRING path) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetTargetName( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *element,
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *name) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetTargetName( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *element,
                                    /* [in] */ __RPC__in HSTRING name) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetTarget( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::ITimeline *timeline,
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IDependencyObject *target) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IStoryboardStatics = __uuidof(IStoryboardStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetPropertyProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *element,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *path);
        
        HRESULT ( STDMETHODCALLTYPE *SetTargetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *element,
            /* [in] */ __RPC__in HSTRING path);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *element,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *name);
        
        HRESULT ( STDMETHODCALLTYPE *SetTargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *element,
            /* [in] */ __RPC__in HSTRING name);
        
        HRESULT ( STDMETHODCALLTYPE *SetTarget )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CITimeline *timeline,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyObject *target);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_get_TargetPropertyProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetPropertyProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_GetTargetProperty(This,element,path)	\
    ( (This)->lpVtbl -> GetTargetProperty(This,element,path) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_SetTargetProperty(This,element,path)	\
    ( (This)->lpVtbl -> SetTargetProperty(This,element,path) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_GetTargetName(This,element,name)	\
    ( (This)->lpVtbl -> GetTargetName(This,element,name) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_SetTargetName(This,element,name)	\
    ( (This)->lpVtbl -> SetTargetName(This,element,name) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_SetTarget(This,timeline,target)	\
    ( (This)->lpVtbl -> SetTarget(This,timeline,target) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0199 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISwipeBackThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.ISwipeBackThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0199 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0199_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISwipeBackThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("A38A4214-0BCA-4D2D-95F7-CEBA57FBAF60")
                            ISwipeBackThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FromVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISwipeBackThemeAnimation = __uuidof(ISwipeBackThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FromVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_get_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_put_FromHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_get_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_put_FromVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_FromVerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0200 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISwipeBackThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.ISwipeBackThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0200 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0200_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISwipeBackThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("693F31BF-4DA6-468A-8CE0-996C9AAD42E0")
                            ISwipeBackThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FromVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISwipeBackThemeAnimationStatics = __uuidof(ISwipeBackThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FromVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_get_FromHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_get_FromVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_FromVerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0201 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISwipeHintThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.ISwipeHintThemeAnimation";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0201 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0201_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISwipeHintThemeAnimation */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("CDD067C0-580E-4E40-BE98-F202D3D84365")
                            ISwipeHintThemeAnimation : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetName( 
                                    /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_TargetName( 
                                    /* [in] */ __RPC__in HSTRING value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToHorizontalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToHorizontalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToVerticalOffset( 
                                    /* [out][retval] */ __RPC__out DOUBLE *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ToVerticalOffset( 
                                    /* [in] */ DOUBLE value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISwipeHintThemeAnimation = __uuidof(ISwipeHintThemeAnimation);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_TargetName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToHorizontalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [out][retval] */ __RPC__out DOUBLE *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ToVerticalOffset )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation * This,
            /* [in] */ DOUBLE value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_get_TargetName(This,value)	\
    ( (This)->lpVtbl -> get_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_put_TargetName(This,value)	\
    ( (This)->lpVtbl -> put_TargetName(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_get_ToHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> get_ToHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_put_ToHorizontalOffset(This,value)	\
    ( (This)->lpVtbl -> put_ToHorizontalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_get_ToVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> get_ToVerticalOffset(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_put_ToVerticalOffset(This,value)	\
    ( (This)->lpVtbl -> put_ToVerticalOffset(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0202 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISwipeHintThemeAnimationStatics[] = L"Windows.UI.Xaml.Media.Animation.ISwipeHintThemeAnimationStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0202 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0202_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISwipeHintThemeAnimationStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("23D61A57-9115-4D63-B04A-B89F1C744DC0")
                            ISwipeHintThemeAnimationStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TargetNameProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToHorizontalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ToVerticalOffsetProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ISwipeHintThemeAnimationStatics = __uuidof(ISwipeHintThemeAnimationStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TargetNameProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToHorizontalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ToVerticalOffsetProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_get_TargetNameProperty(This,value)	\
    ( (This)->lpVtbl -> get_TargetNameProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_get_ToHorizontalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToHorizontalOffsetProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_get_ToVerticalOffsetProperty(This,value)	\
    ( (This)->lpVtbl -> get_ToVerticalOffsetProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0203 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ICommonNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0203 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0203_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ICommonNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("50345692-A555-4624-A361-0A91C1706473")
                            ICommonNavigationTransitionInfo : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStaggeringEnabled( 
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IsStaggeringEnabled( 
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ICommonNavigationTransitionInfo = __uuidof(ICommonNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStaggeringEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [out][retval] */ __RPC__out boolean *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsStaggeringEnabled )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo * This,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_get_IsStaggeringEnabled(This,value)	\
    ( (This)->lpVtbl -> get_IsStaggeringEnabled(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_put_IsStaggeringEnabled(This,value)	\
    ( (This)->lpVtbl -> put_IsStaggeringEnabled(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0204 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ICommonNavigationTransitionInfoStatics[] = L"Windows.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfoStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0204 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0204_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ICommonNavigationTransitionInfoStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("1E3EFE33-50BE-4443-883C-E5627201C2E5")
                            ICommonNavigationTransitionInfoStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStaggeringEnabledProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsStaggerElementProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetIsStaggerElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetIsStaggerElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_ICommonNavigationTransitionInfoStatics = __uuidof(ICommonNavigationTransitionInfoStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStaggeringEnabledProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsStaggerElementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsStaggerElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsStaggerElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_get_IsStaggeringEnabledProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsStaggeringEnabledProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_get_IsStaggerElementProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsStaggerElementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_GetIsStaggerElement(This,element,value)	\
    ( (This)->lpVtbl -> GetIsStaggerElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_SetIsStaggerElement(This,element,value)	\
    ( (This)->lpVtbl -> SetIsStaggerElement(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0205 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IContinuumNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0205 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0205_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IContinuumNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("4BE1DBAD-8BA6-4004-8438-8A9017978543")
                            IContinuumNavigationTransitionInfo : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitElement( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IUIElement **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ExitElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IContinuumNavigationTransitionInfo = __uuidof(IContinuumNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExitElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_get_ExitElement(This,value)	\
    ( (This)->lpVtbl -> get_ExitElement(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_put_ExitElement(This,value)	\
    ( (This)->lpVtbl -> put_ExitElement(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0206 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IContinuumNavigationTransitionInfoStatics[] = L"Windows.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfoStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0206 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0206_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IContinuumNavigationTransitionInfoStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("3E25DD53-B18F-4BF1-B3BC-92F516F29903")
                            IContinuumNavigationTransitionInfoStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitElementProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsEntranceElementProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetIsEntranceElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetIsEntranceElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [in] */ boolean value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsExitElementProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetIsExitElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetIsExitElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [in] */ boolean value) = 0;
                                
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ExitElementContainerProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetExitElementContainer( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewBase *element,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetExitElementContainer( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Controls::IListViewBase *element,
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IContinuumNavigationTransitionInfoStatics = __uuidof(IContinuumNavigationTransitionInfoStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitElementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsEntranceElementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsEntranceElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsEntranceElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsExitElementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsExitElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsExitElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ boolean value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExitElementContainerProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetExitElementContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase *element,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetExitElementContainer )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CControls_CIListViewBase *element,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_get_ExitElementProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitElementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_get_IsEntranceElementProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsEntranceElementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetIsEntranceElement(This,element,value)	\
    ( (This)->lpVtbl -> GetIsEntranceElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_SetIsEntranceElement(This,element,value)	\
    ( (This)->lpVtbl -> SetIsEntranceElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_get_IsExitElementProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsExitElementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetIsExitElement(This,element,value)	\
    ( (This)->lpVtbl -> GetIsExitElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_SetIsExitElement(This,element,value)	\
    ( (This)->lpVtbl -> SetIsExitElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_get_ExitElementContainerProperty(This,value)	\
    ( (This)->lpVtbl -> get_ExitElementContainerProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_GetExitElementContainer(This,element,value)	\
    ( (This)->lpVtbl -> GetExitElementContainer(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_SetExitElementContainer(This,element,value)	\
    ( (This)->lpVtbl -> SetExitElementContainer(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0207 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IDrillInNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.IDrillInNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0207 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0207_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IDrillInNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("3B86201A-45D3-463B-939E-C8595F439BCC")
                            IDrillInNavigationTransitionInfo : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IDrillInNavigationTransitionInfo = __uuidof(IDrillInNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0208 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEntranceNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.IEntranceNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0208 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0208_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEntranceNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("720A256B-1C8A-41EE-82EC-8A87C0CF47DA")
                            IEntranceNavigationTransitionInfo : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_IEntranceNavigationTransitionInfo = __uuidof(IEntranceNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0209 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_IEntranceNavigationTransitionInfoStatics[] = L"Windows.UI.Xaml.Media.Animation.IEntranceNavigationTransitionInfoStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0209 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0209_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::IEntranceNavigationTransitionInfoStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("F948C27A-40C9-469F-8F33-BF45C8811F21")
                            IEntranceNavigationTransitionInfoStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IsTargetElementProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE GetIsTargetElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [out][retval] */ __RPC__out boolean *value) = 0;
                                
                                virtual HRESULT STDMETHODCALLTYPE SetIsTargetElement( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::IUIElement *element,
                                    /* [in] */ boolean value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_IEntranceNavigationTransitionInfoStatics = __uuidof(IEntranceNavigationTransitionInfoStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsTargetElementProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        HRESULT ( STDMETHODCALLTYPE *GetIsTargetElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [out][retval] */ __RPC__out boolean *value);
        
        HRESULT ( STDMETHODCALLTYPE *SetIsTargetElement )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CIUIElement *element,
            /* [in] */ boolean value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_get_IsTargetElementProperty(This,value)	\
    ( (This)->lpVtbl -> get_IsTargetElementProperty(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_GetIsTargetElement(This,element,value)	\
    ( (This)->lpVtbl -> GetIsTargetElement(This,element,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_SetIsTargetElement(This,element,value)	\
    ( (This)->lpVtbl -> SetIsTargetElement(This,element,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0210 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_INavigationThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.INavigationThemeTransition";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0210 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0210_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::INavigationThemeTransition */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("8833848C-4EB7-41F2-8799-9EEF0A213B73")
                            INavigationThemeTransition : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultNavigationTransitionInfo( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfo **value) = 0;
                                
                                virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DefaultNavigationTransitionInfo( 
                                    /* [in] */ __RPC__in_opt ABI::Windows::UI::Xaml::Media::Animation::INavigationTransitionInfo *value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_INavigationThemeTransition = __uuidof(INavigationThemeTransition);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultNavigationTransitionInfo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultNavigationTransitionInfo )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_get_DefaultNavigationTransitionInfo(This,value)	\
    ( (This)->lpVtbl -> get_DefaultNavigationTransitionInfo(This,value) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_put_DefaultNavigationTransitionInfo(This,value)	\
    ( (This)->lpVtbl -> put_DefaultNavigationTransitionInfo(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0211 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_INavigationThemeTransitionStatics[] = L"Windows.UI.Xaml.Media.Animation.INavigationThemeTransitionStatics";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0211 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0211_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::INavigationThemeTransitionStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("EA2F06E0-5E60-4F8E-BCAF-431487A294AB")
                            INavigationThemeTransitionStatics : public IInspectable
                            {
                            public:
                                virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DefaultNavigationTransitionInfoProperty( 
                                    /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::UI::Xaml::IDependencyProperty **value) = 0;
                                
                            };

                            extern const __declspec(selectany) IID & IID_INavigationThemeTransitionStatics = __uuidof(INavigationThemeTransitionStatics);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultNavigationTransitionInfoProperty )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CUI_CXaml_CIDependencyProperty **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_get_DefaultNavigationTransitionInfoProperty(This,value)	\
    ( (This)->lpVtbl -> get_DefaultNavigationTransitionInfoProperty(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0212 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISlideNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.ISlideNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0212 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0212_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISlideNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("D6AC9D77-2E03-405F-80ED-E62BEEF3668F")
                            ISlideNavigationTransitionInfo : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISlideNavigationTransitionInfo = __uuidof(ISlideNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0213 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_UI_Xaml_Media_Animation_ISuppressNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.ISuppressNavigationTransitionInfo";
#endif /* !defined(____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0213 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0213_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo */
/* [uuid][object] */ 



/* interface ABI::Windows::UI::Xaml::Media::Animation::ISuppressNavigationTransitionInfo */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace UI {
                namespace Xaml {
                    namespace Media {
                        namespace Animation {
                            
                            MIDL_INTERFACE("244D7B0C-B1B7-4871-9D3E-D56203A3A5B4")
                            ISuppressNavigationTransitionInfo : public IInspectable
                            {
                            public:
                            };

                            extern const __declspec(selectany) IID & IID_ISuppressNavigationTransitionInfo = __uuidof(ISuppressNavigationTransitionInfo);

                            
                        }  /* end namespace */
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        END_INTERFACE
    } __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl;

    interface __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0214 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_KeyTimeHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_KeyTimeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_KeyTimeHelper[] = L"Windows.UI.Xaml.Media.Animation.KeyTimeHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepeatBehaviorHelper_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepeatBehaviorHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_RepeatBehaviorHelper[] = L"Windows.UI.Xaml.Media.Animation.RepeatBehaviorHelper";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_TransitionCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_TransitionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_TransitionCollection[] = L"Windows.UI.Xaml.Media.Animation.TransitionCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorKeyFrameCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorKeyFrameCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ColorKeyFrameCollection[] = L"Windows.UI.Xaml.Media.Animation.ColorKeyFrameCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleKeyFrameCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleKeyFrameCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DoubleKeyFrameCollection[] = L"Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectKeyFrameCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectKeyFrameCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ObjectKeyFrameCollection[] = L"Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointKeyFrameCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointKeyFrameCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointKeyFrameCollection[] = L"Windows.UI.Xaml.Media.Animation.PointKeyFrameCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_TimelineCollection_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_TimelineCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_TimelineCollection[] = L"Windows.UI.Xaml.Media.Animation.TimelineCollection";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ColorKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.DoubleKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingFunctionBase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingFunctionBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EasingFunctionBase[] = L"Windows.UI.Xaml.Media.Animation.EasingFunctionBase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_KeySpline_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_KeySpline_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_KeySpline[] = L"Windows.UI.Xaml.Media.Animation.KeySpline";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_NavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_NavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_NavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.ObjectKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.PointKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Timeline_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Timeline_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_Timeline[] = L"Windows.UI.Xaml.Media.Animation.Timeline";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Transition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Transition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_Transition[] = L"Windows.UI.Xaml.Media.Animation.Transition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_AddDeleteThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_AddDeleteThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_AddDeleteThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.AddDeleteThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BackEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BackEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_BackEase[] = L"Windows.UI.Xaml.Media.Animation.BackEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BeginStoryboard_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BeginStoryboard_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_BeginStoryboard[] = L"Windows.UI.Xaml.Media.Animation.BeginStoryboard";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BounceEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_BounceEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_BounceEase[] = L"Windows.UI.Xaml.Media.Animation.BounceEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CircleEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CircleEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_CircleEase[] = L"Windows.UI.Xaml.Media.Animation.CircleEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ColorAnimation[] = L"Windows.UI.Xaml.Media.Animation.ColorAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorAnimationUsingKeyFrames_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ColorAnimationUsingKeyFrames_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ColorAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ContentThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ContentThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ContentThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.ContentThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CubicEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CubicEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_CubicEase[] = L"Windows.UI.Xaml.Media.Animation.CubicEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteColorKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteColorKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DiscreteColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.DiscreteColorKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteDoubleKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteDoubleKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DiscreteDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteObjectKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscreteObjectKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DiscreteObjectKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscretePointKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DiscretePointKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DiscretePointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.DiscretePointKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DoubleAnimation[] = L"Windows.UI.Xaml.Media.Animation.DoubleAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleAnimationUsingKeyFrames_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DoubleAnimationUsingKeyFrames_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DoubleAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DragItemThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DragItemThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DragItemThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.DragItemThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DragOverThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DragOverThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DragOverThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillInThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillInThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DrillInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.DrillInThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillOutThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillOutThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DrillOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.DrillOutThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DropTargetItemThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DropTargetItemThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DropTargetItemThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingColorKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingColorKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EasingColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.EasingColorKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingDoubleKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingDoubleKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EasingDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.EasingDoubleKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingPointKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EasingPointKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EasingPointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.EasingPointKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EdgeUIThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EdgeUIThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EdgeUIThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ElasticEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ElasticEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ElasticEase[] = L"Windows.UI.Xaml.Media.Animation.ElasticEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EntranceThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EntranceThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EntranceThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.EntranceThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ExponentialEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ExponentialEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ExponentialEase[] = L"Windows.UI.Xaml.Media.Animation.ExponentialEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_FadeInThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_FadeInThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_FadeInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.FadeInThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_FadeOutThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_FadeOutThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_FadeOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.FadeOutThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearColorKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearColorKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_LinearColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.LinearColorKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearDoubleKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearDoubleKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_LinearDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.LinearDoubleKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearPointKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_LinearPointKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_LinearPointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.LinearPointKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectAnimationUsingKeyFrames_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ObjectAnimationUsingKeyFrames_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ObjectAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PaneThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PaneThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PaneThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.PaneThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointAnimation[] = L"Windows.UI.Xaml.Media.Animation.PointAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointAnimationUsingKeyFrames_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointAnimationUsingKeyFrames_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointAnimationUsingKeyFrames[] = L"Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointerDownThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointerDownThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointerDownThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.PointerDownThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointerUpThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PointerUpThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PointerUpThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.PointerUpThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopInThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopInThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PopInThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.PopInThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopOutThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopOutThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PopOutThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.PopOutThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopupThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PopupThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PopupThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.PopupThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PowerEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_PowerEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_PowerEase[] = L"Windows.UI.Xaml.Media.Animation.PowerEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuadraticEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuadraticEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_QuadraticEase[] = L"Windows.UI.Xaml.Media.Animation.QuadraticEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuarticEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuarticEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_QuarticEase[] = L"Windows.UI.Xaml.Media.Animation.QuarticEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuinticEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_QuinticEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_QuinticEase[] = L"Windows.UI.Xaml.Media.Animation.QuinticEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ReorderThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ReorderThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ReorderThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.ReorderThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepositionThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepositionThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_RepositionThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepositionThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_RepositionThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_RepositionThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.RepositionThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SineEase_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SineEase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SineEase[] = L"Windows.UI.Xaml.Media.Animation.SineEase";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplineColorKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplineColorKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SplineColorKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplineDoubleKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplineDoubleKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SplineDoubleKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplinePointKeyFrame_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplinePointKeyFrame_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SplinePointKeyFrame[] = L"Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplitCloseThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplitCloseThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SplitCloseThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplitOpenThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SplitOpenThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SplitOpenThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Storyboard_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_Storyboard_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_Storyboard[] = L"Windows.UI.Xaml.Media.Animation.Storyboard";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SwipeBackThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SwipeBackThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SwipeBackThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SwipeHintThemeAnimation_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SwipeHintThemeAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SwipeHintThemeAnimation[] = L"Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CommonNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_CommonNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_CommonNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ContinuumNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_ContinuumNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_ContinuumNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillInNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_DrillInNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_DrillInNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.DrillInNavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EntranceNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_EntranceNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_EntranceNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_NavigationThemeTransition_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_NavigationThemeTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_NavigationThemeTransition[] = L"Windows.UI.Xaml.Media.Animation.NavigationThemeTransition";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SlideNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SlideNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SlideNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo";
#endif
#ifndef RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SuppressNavigationTransitionInfo_DEFINED
#define RUNTIMECLASS_Windows_UI_Xaml_Media_Animation_SuppressNavigationTransitionInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_UI_Xaml_Media_Animation_SuppressNavigationTransitionInfo[] = L"Windows.UI.Xaml.Media.Animation.SuppressNavigationTransitionInfo";
#endif


/* interface __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0214 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eui2Examl2Emedia2Eanimation_0000_0214_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


