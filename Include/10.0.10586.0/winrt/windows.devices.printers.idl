//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Storage.Streams.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStreamWithContentType;
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Printers
        {
            interface IPrint3DDeviceStatics;

            interface IPrint3DDevice;

            interface IPrintSchema;

            runtimeclass Print3DDevice;

            runtimeclass PrintSchema;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Devices
    {
        namespace Printers
        {
            declare
            {
                interface Windows.Foundation.IAsyncOperation<Windows.Devices.Printers.Print3DDevice*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Devices
    {
        namespace Printers
        {
            [exclusiveto(Windows.Devices.Printers.Print3DDevice)]
            [uuid(FDE3620A-67CD-41B7-A344-5150A1FD75B5)]
            [version(0x0A000000)]
            interface IPrint3DDeviceStatics : IInspectable
            {
                HRESULT FromIdAsync([in] HSTRING deviceId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Devices.Printers.Print3DDevice*>** operation);
                HRESULT GetDeviceSelector([out] [retval] HSTRING* result);
            }

            [exclusiveto(Windows.Devices.Printers.Print3DDevice)]
            [uuid(041C3D19-9713-42A2-9813-7DC3337428D3)]
            [version(0x0A000000)]
            interface IPrint3DDevice : IInspectable
            {
                [propget] HRESULT PrintSchema([out] [retval] Windows.Devices.Printers.PrintSchema** value);
            }

            [exclusiveto(Windows.Devices.Printers.PrintSchema)]
            [uuid(C2B98316-26B8-4BFB-8138-9F962C22A35B)]
            [version(0x0A000000)]
            interface IPrintSchema : IInspectable
            {
                HRESULT GetDefaultPrintTicketAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType*>** operation);
                HRESULT GetCapabilitiesAsync([in] Windows.Storage.Streams.IRandomAccessStreamWithContentType* constrainTicket, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType*>** operation);
                HRESULT MergeAndValidateWithDefaultPrintTicketAsync([in] Windows.Storage.Streams.IRandomAccessStreamWithContentType* deltaTicket, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType*>** operation);
            }

            [marshaling_behavior(agile)]
            [static(Windows.Devices.Printers.IPrint3DDeviceStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass Print3DDevice
            {
                [default] interface Windows.Devices.Printers.IPrint3DDevice;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass PrintSchema
            {
                [default] interface Windows.Devices.Printers.IPrintSchema;
            }
        }
    }
}
