

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0613 */
/* @@MIDL_FILE_HEADING(  ) */



/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __windows2Eweb2Ehttp2Eheaders_h__
#define __windows2Eweb2Ehttp2Eheaders_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__ */


#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentHeaderCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpRequestHeaderCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpResponseHeaderCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCacheDirectiveHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpChallengeHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCredentialsHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpConnectionOptionHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentDispositionHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentRangeHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpCookiePairHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpDateOrDeltaHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpDateOrDeltaHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpExpectationHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpLanguageRangeWithQualityHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMediaTypeWithQualityHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpMethodHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpNameValueHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpProductInfoHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpContentCodingWithQualityHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueStatics;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueFactory;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValue;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_FWD_DEFINED__ */


#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;

#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Web {
            namespace Http {
                namespace Headers {
                    interface IHttpTransferCodingHeaderValueCollection;
                } /* end namespace */
            } /* end namespace */
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

#endif /* __cplusplus */

#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_FWD_DEFINED__ */


/* header files for imported files */
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "Windows.Foundation.h"
#include "Windows.Globalization.h"
#include "Windows.Networking.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0000 */
/* [local] */ 

#ifdef __cplusplus
} /*extern "C"*/ 
#endif
#include <windows.foundation.collections.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpChallengeHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpChallengeHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0000 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0000_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2442 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2442 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2442_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2442_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0001 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6bc05705-2c6f-57e8-bf96-56a761e90e8f"))
IIterator<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0001 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0001_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2443 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2443 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2443_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2443_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0002 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("17847e58-f0cf-52e7-81c0-9d06a081569f"))
IIterable<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpConnectionOptionHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpConnectionOptionHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0002 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0002_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2444 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2444 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2444_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2444_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0003 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e95057be-e8bd-53df-a2f6-865a66a07c6b"))
IIterator<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0003 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0003_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2445 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2445 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2445_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2445_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0004 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1afc512f-dfa2-5528-8aef-6e6a37789b3c"))
IIterable<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentCodingHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpContentCodingHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0004 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0004_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2446 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2446 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2446_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2446_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0005 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e21ad0b2-c893-5360-a4fe-f083b308a9cd"))
IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0005 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0005_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2447 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2447 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2447_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2447_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0006 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0e8960c2-76e5-56c1-9fe6-8cd9018a6786"))
IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentCodingWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpContentCodingWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0006 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0006_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2448 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2448 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2448_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2448_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0007 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3780c808-8b98-5327-84c7-055363fe32ad"))
IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0007 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0007_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2449 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2449 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2449_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2449_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0008 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("916e6271-cef6-53b8-b93f-dc8dca559e50"))
IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpCookiePairHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpCookiePairHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0008 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0008_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2450 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2450 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2450_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2450_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0009 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ed3b6323-b1c3-558b-9917-0826c4a9e8c0"))
IIterator<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0009 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0009_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2451 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2451 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2451_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2451_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0010 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("16773244-5011-5244-bb00-14db4cf71005"))
IIterable<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpExpectationHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpExpectationHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0010 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0010_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2452 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2452 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2452_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2452_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0011 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6b72326a-46b1-5d80-a162-c5f45be02e2b"))
IIterator<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0011 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0011_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2453 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2453 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2453_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2453_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0012 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0a391c2b-13c3-59b8-8662-13affb9d1754"))
IIterable<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpLanguageRangeWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpLanguageRangeWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0012 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0012_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2454 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2454 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2454_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2454_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0013 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("a25503de-4aef-5ef4-9f06-5df4094051be"))
IIterator<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0013 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0013_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2455 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2455 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2455_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2455_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0014 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0c5a4a0d-dbb7-5abf-a5fd-c3b98d9c1487"))
IIterable<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpMediaTypeWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpMediaTypeWithQualityHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0014 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0014_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2456 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2456 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2456_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2456_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0015 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6a2084a3-941a-5528-a2ec-28cf1ff9b1a9"))
IIterator<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0015 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0015_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2457 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2457 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2457_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2457_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0016 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ffc7dfde-58b8-51e9-b33b-65a5d6a4e24c"))
IIterable<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpNameValueHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpNameValueHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0016 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0016_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0016_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2458 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2458 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2458_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2458_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0017 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3bb0c8fa-5f1f-5c70-9950-5d1d1a703dd4"))
IIterator<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0017 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0017_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0017_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2459 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2459 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2459_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2459_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0018 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5838a126-b617-5417-b32e-ded2d27d40a3"))
IIterable<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpProductInfoHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpProductInfoHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0018 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0018_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2460 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2460 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2460_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2460_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0019 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4f785951-b59c-5108-b0cd-1437578af49c"))
IIterator<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0019 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0019_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2461 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2461 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2461_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2461_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0020 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bf97cf99-e614-5765-bad7-161ae3a93ae9"))
IIterable<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpTransferCodingHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
interface IHttpTransferCodingHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0020 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0020_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2462 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2462 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2462_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2462_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0021 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("49e58dec-b5cd-5ba4-a603-365d1588ad4c"))
IIterator<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>"; }
};
typedef IIterator<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0021 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0021_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2463 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2463 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2463_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2463_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0022 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("57402048-38bf-5055-acb6-5c4da765e388"))
IIterable<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>"; }
};
typedef IIterable<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0022 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0022_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2464 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2464 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2464_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2464_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0023 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8b79423f-b4a3-501d-bac2-b88e78e13a21"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0023 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0023_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2465 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2465 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2465_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2465_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0024 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1beae481-9d30-5ac8-942c-49a5f8737adf"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0024 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0024_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2466 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2466 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2466_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2466_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0025 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dcdf2620-b6d0-5835-8bec-d3b946a50f55"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0025 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0025_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2467 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2467 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2467_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2467_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0026 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("eb18569b-a7ab-58bb-8880-dd022f755b51"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0026 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0026_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2468 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2468 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2468_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2468_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0027 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ad89192d-6ef8-56b5-a4dc-e48d0e85d569"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0027 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0027_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2469 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2469 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2469_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2469_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0028 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("71a22f32-a3c0-574b-87b4-127199cc7d5e"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0028 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0028_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2470 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2470 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2470_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2470_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0029 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("551fb7fb-ce42-5ffd-a2e0-2a6ce1698070"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0029 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0029_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2471 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2471 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2471_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2471_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0030 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f1c1e9bd-01a6-5bd3-af7b-c14220a645c0"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0030 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0030_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2472 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2472 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2472_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2472_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0031 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1ef903c8-8eef-5e9e-b938-b9e428a77672"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0031 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0031_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2473 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2473 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2473_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2473_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0032 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("82fef9f0-e283-5279-aa50-f0b3e5726a86"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0032 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0032_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2474 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2474 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2474_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2474_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0033 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("25c1a8d6-229b-5421-b3b3-b7ef078fad7f"))
IVectorView<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0033 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0033_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2475 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2475 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2475_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2475_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0034 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3737fc5e-0b27-52a3-9e40-cbb9844e6ab7"))
IVector<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpChallengeHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpChallengeHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0034 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0034_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2476 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2476 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2476_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2476_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0035 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c312da8d-c82f-51c9-b705-5a26d52fbee6"))
IVector<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpConnectionOptionHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0035 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0035_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2477 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2477 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2477_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2477_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0036 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b94e539f-44b6-54c6-9ad4-e2844b3e0be1"))
IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0036 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0036_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2478 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2478 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2478_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2478_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0037 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33f9653d-0eed-5368-a51e-98385191f86f"))
IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpContentCodingWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0037 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0037_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2479 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2479 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2479_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2479_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0038 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bc196ace-8a56-5fd0-9878-c807edd8645a"))
IVector<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpCookiePairHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpCookiePairHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0038 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0038_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2480 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2480 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2480_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2480_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0039 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("18e138ee-fec7-527d-8693-deebca4f3dcd"))
IVector<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpExpectationHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpExpectationHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0039 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0039_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2481 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2481 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2481_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2481_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0040 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b6df6da2-8d92-5270-9584-d6a9a931586d"))
IVector<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpLanguageRangeWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0040 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0040_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2482 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2482 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2482_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2482_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0041 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c18538f7-c256-5666-8868-2225af3574b6"))
IVector<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpMediaTypeWithQualityHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0041 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0041_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2483 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2483 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2483_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2483_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0042 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2cf800d4-35d0-545c-ab82-f6793be74cba"))
IVector<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpNameValueHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpNameValueHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0042 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0042_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2484 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2484 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2484_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2484_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0043 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("69392060-6c0f-5de6-8ced-f14fc1b83376"))
IVector<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpProductInfoHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpProductInfoHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0043 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0043_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2485 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2485 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2485_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2485_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0044 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("38e72562-e17c-5d68-aad1-8e8a860b8969"))
IVector<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*, ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.Headers.HttpTransferCodingHeaderValue>"; }
};
typedef IVector<ABI::Windows::Web::Http::Headers::HttpTransferCodingHeaderValue*> __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0044 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0044_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2486 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2486 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2486_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2486_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0045 */
/* [local] */ 

#ifndef DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60310303-49c5-52e6-abc6-a9b36eccc716"))
IKeyValuePair<HSTRING,HSTRING> : IKeyValuePair_impl<HSTRING,HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IKeyValuePair`2<String, String>"; }
};
typedef IKeyValuePair<HSTRING,HSTRING> __FIKeyValuePair_2_HSTRING_HSTRING_t;
#define ____FIKeyValuePair_2_HSTRING_HSTRING_FWD_DEFINED__
#define __FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0045 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0045_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2487 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2487 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2487_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2487_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0046 */
/* [local] */ 

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05eb86f1-7140-5517-b88d-cbaebe57e6b1"))
IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; }
};
typedef IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_FWD_DEFINED__
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0046 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0046_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2488 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2488 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2488_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2488_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0047 */
/* [local] */ 

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e9bdaaf0-cbf6-5c72-be90-29cbf3a1319b"))
IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; }
};
typedef IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_FWD_DEFINED__
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0047 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0047_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2489 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2489 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2489_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2489_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0048 */
/* [local] */ 

#ifndef DEF___FIMapView_2_HSTRING_HSTRING_USE
#define DEF___FIMapView_2_HSTRING_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ac7f26f2-feb7-5b2a-8ac4-345bc62caede"))
IMapView<HSTRING,HSTRING> : IMapView_impl<HSTRING,HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMapView`2<String, String>"; }
};
typedef IMapView<HSTRING,HSTRING> __FIMapView_2_HSTRING_HSTRING_t;
#define ____FIMapView_2_HSTRING_HSTRING_FWD_DEFINED__
#define __FIMapView_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMapView_2_HSTRING_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMapView_2_HSTRING_HSTRING_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0048 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0048_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2490 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2490 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2490_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2490_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0049 */
/* [local] */ 

#ifndef DEF___FIMap_2_HSTRING_HSTRING_USE
#define DEF___FIMap_2_HSTRING_HSTRING_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6d1f700-49c2-52ae-8154-826f9908773c"))
IMap<HSTRING,HSTRING> : IMap_impl<HSTRING,HSTRING> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IMap`2<String, String>"; }
};
typedef IMap<HSTRING,HSTRING> __FIMap_2_HSTRING_HSTRING_t;
#define ____FIMap_2_HSTRING_HSTRING_FWD_DEFINED__
#define __FIMap_2_HSTRING_HSTRING ABI::Windows::Foundation::Collections::__FIMap_2_HSTRING_HSTRING_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIMap_2_HSTRING_HSTRING_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Globalization {
class Language;
} /*Globalization*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Globalization {
interface ILanguage;
} /*Globalization*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0049 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0049_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2491 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2491 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2491_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2491_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0050 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("30e99ae6-f414-5243-8db2-aab38ea3f1f1"))
IIterator<ABI::Windows::Globalization::Language*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Globalization.Language>"; }
};
typedef IIterator<ABI::Windows::Globalization::Language*> __FIIterator_1_Windows__CGlobalization__CLanguage_t;
#define ____FIIterator_1_Windows__CGlobalization__CLanguage_FWD_DEFINED__
#define __FIIterator_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CGlobalization__CLanguage_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CGlobalization__CLanguage_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0050 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0050_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2492 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2492 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2492_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2492_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0051 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("48409a10-61b6-5db1-a69d-8abc46ac608a"))
IIterable<ABI::Windows::Globalization::Language*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Globalization.Language>"; }
};
typedef IIterable<ABI::Windows::Globalization::Language*> __FIIterable_1_Windows__CGlobalization__CLanguage_t;
#define ____FIIterable_1_Windows__CGlobalization__CLanguage_FWD_DEFINED__
#define __FIIterable_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CGlobalization__CLanguage_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CGlobalization__CLanguage_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0051 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0051_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0051_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2493 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2493 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2493_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2493_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0052 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("144b0f3d-2d59-5dd2-b012-908ec3e06435"))
IVectorView<ABI::Windows::Globalization::Language*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Globalization.Language>"; }
};
typedef IVectorView<ABI::Windows::Globalization::Language*> __FIVectorView_1_Windows__CGlobalization__CLanguage_t;
#define ____FIVectorView_1_Windows__CGlobalization__CLanguage_FWD_DEFINED__
#define __FIVectorView_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CGlobalization__CLanguage_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CGlobalization__CLanguage_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0052 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0052_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0052_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2494 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2494 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2494_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2494_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0053 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE
#define DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dcf2525a-42c0-501d-9fcb-471fae060396"))
IVector<ABI::Windows::Globalization::Language*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Globalization::Language*, ABI::Windows::Globalization::ILanguage*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Globalization.Language>"; }
};
typedef IVector<ABI::Windows::Globalization::Language*> __FIVector_1_Windows__CGlobalization__CLanguage_t;
#define ____FIVector_1_Windows__CGlobalization__CLanguage_FWD_DEFINED__
#define __FIVector_1_Windows__CGlobalization__CLanguage ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CGlobalization__CLanguage_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CGlobalization__CLanguage_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0053 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0053_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0053_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2495 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2495 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2495_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2495_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0054 */
/* [local] */ 

#ifndef DEF___FIReference_1_UINT64_USE
#define DEF___FIReference_1_UINT64_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6755e376-53bb-568b-a11d-17239868309e"))
IReference<UINT64> : IReference_impl<UINT64> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<UInt64>"; }
};
typedef IReference<UINT64> __FIReference_1_UINT64_t;
#define ____FIReference_1_UINT64_FWD_DEFINED__
#define __FIReference_1_UINT64 ABI::Windows::Foundation::__FIReference_1_UINT64_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_UINT64_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct DateTime;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0054 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0054_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0054_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2496 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2496 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2496_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2496_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0055 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CFoundation__CDateTime_USE
#define DEF___FIReference_1_Windows__CFoundation__CDateTime_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5541d8a7-497c-5aa4-86fc-7713adbf2a2c"))
IReference<struct ABI::Windows::Foundation::DateTime> : IReference_impl<struct ABI::Windows::Foundation::DateTime> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.Foundation.DateTime>"; }
};
typedef IReference<struct ABI::Windows::Foundation::DateTime> __FIReference_1_Windows__CFoundation__CDateTime_t;
#define ____FIReference_1_Windows__CFoundation__CDateTime_FWD_DEFINED__
#define __FIReference_1_Windows__CFoundation__CDateTime ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CDateTime_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CFoundation__CDateTime_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0055 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0055_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0055_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2497 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2497 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2497_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2497_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0056 */
/* [local] */ 

#ifndef DEF___FIReference_1_UINT32_USE
#define DEF___FIReference_1_UINT32_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("513ef3af-e784-5325-a91e-97c2b8111cf3"))
IReference<UINT32> : IReference_impl<UINT32> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<UInt32>"; }
};
typedef IReference<UINT32> __FIReference_1_UINT32_t;
#define ____FIReference_1_UINT32_FWD_DEFINED__
#define __FIReference_1_UINT32 ABI::Windows::Foundation::__FIReference_1_UINT32_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_UINT32_USE */

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
struct TimeSpan;
} /*Foundation*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0056 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0056_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0056_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2498 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2498 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2498_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2498_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0057 */
/* [local] */ 

#ifndef DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#define DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("604d0c4c-91de-5c2a-935f-362f13eaf800"))
IReference<struct ABI::Windows::Foundation::TimeSpan> : IReference_impl<struct ABI::Windows::Foundation::TimeSpan> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Windows.Foundation.TimeSpan>"; }
};
typedef IReference<struct ABI::Windows::Foundation::TimeSpan> __FIReference_1_Windows__CFoundation__CTimeSpan_t;
#define ____FIReference_1_Windows__CFoundation__CTimeSpan_FWD_DEFINED__
#define __FIReference_1_Windows__CFoundation__CTimeSpan ABI::Windows::Foundation::__FIReference_1_Windows__CFoundation__CTimeSpan_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_Windows__CFoundation__CTimeSpan_USE */
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
class HttpMethod;
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
interface IHttpMethod;
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0057 */
/* [local] */ 





extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0057_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0057_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2499 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2499 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2499_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2499_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0058 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d13a880f-d612-50cf-a6f9-dd96f916f491"))
IIterator<ABI::Windows::Web::Http::HttpMethod*> : IIterator_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterator`1<Windows.Web.Http.HttpMethod>"; }
};
typedef IIterator<ABI::Windows::Web::Http::HttpMethod*> __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define ____FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_FWD_DEFINED__
#define __FIIterator_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHttpMethod_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0058 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0058_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0058_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2500 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2500 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2500_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2500_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0059 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c088bb1a-dc61-57e1-b967-78dab3541da5"))
IIterable<ABI::Windows::Web::Http::HttpMethod*> : IIterable_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IIterable`1<Windows.Web.Http.HttpMethod>"; }
};
typedef IIterable<ABI::Windows::Web::Http::HttpMethod*> __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define ____FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_FWD_DEFINED__
#define __FIIterable_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHttpMethod_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0059 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0059_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0059_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2501 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2501 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2501_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2501_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0060 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ef132fb7-d286-5327-b38a-be7d008328fe"))
IVectorView<ABI::Windows::Web::Http::HttpMethod*> : IVectorView_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVectorView`1<Windows.Web.Http.HttpMethod>"; }
};
typedef IVectorView<ABI::Windows::Web::Http::HttpMethod*> __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_FWD_DEFINED__
#define __FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHttpMethod_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0060 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0060_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0060_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2502 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2502 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2502_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2502_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0061 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("228a73a2-a509-5a78-bd7f-db94ba0bef21"))
IVector<ABI::Windows::Web::Http::HttpMethod*> : IVector_impl<ABI::Windows::Foundation::Internal::AggregateType<ABI::Windows::Web::Http::HttpMethod*, ABI::Windows::Web::Http::IHttpMethod*>> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.Collections.IVector`1<Windows.Web.Http.HttpMethod>"; }
};
typedef IVector<ABI::Windows::Web::Http::HttpMethod*> __FIVector_1_Windows__CWeb__CHttp__CHttpMethod_t;
#define ____FIVector_1_Windows__CWeb__CHttp__CHttpMethod_FWD_DEFINED__
#define __FIVector_1_Windows__CWeb__CHttp__CHttpMethod ABI::Windows::Foundation::Collections::__FIVector_1_Windows__CWeb__CHttp__CHttpMethod_t

/* ABI */ } /* Windows */ } /* Foundation */ } /* Collections */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHttpMethod_USE */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0061 */
/* [local] */ 




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0061_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0061_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2503 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2503 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2503_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2503_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0062 */
/* [local] */ 

#ifndef DEF___FIReference_1_double_USE
#define DEF___FIReference_1_double_USE
#if defined(__cplusplus) && !defined(RO_NO_TEMPLATE_NAME)
} /*extern "C"*/ 
namespace ABI { namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2f2d6c29-5473-5f3e-92e7-96572bb990e2"))
IReference<double> : IReference_impl<double> {
static const wchar_t* z_get_rc_name_impl() {
return L"Windows.Foundation.IReference`1<Double>"; }
};
typedef IReference<double> __FIReference_1_double_t;
#define ____FIReference_1_double_FWD_DEFINED__
#define __FIReference_1_double ABI::Windows::Foundation::__FIReference_1_double_t

/* ABI */ } /* Windows */ } /* Foundation */ }
extern "C" {
#endif //__cplusplus
#endif /* DEF___FIReference_1_double_USE */
#if defined(__cplusplus)
}
#endif // defined(__cplusplus)
#include <Windows.Foundation.h>
#if !defined(__windows2Eglobalization_h__)
#include <Windows.Globalization.h>
#endif // !defined(__windows2Eglobalization_h__)
#if !defined(__windows2Enetworking_h__)
#include <Windows.Networking.h>
#endif // !defined(__windows2Enetworking_h__)
#if !defined(__windows2Estorage2Estreams_h__)
#include <Windows.Storage.Streams.h>
#endif // !defined(__windows2Estorage2Estreams_h__)
#if !defined(__windows2Eweb2Ehttp_h__)
#include <Windows.Web.Http.h>
#endif // !defined(__windows2Eweb2Ehttp_h__)
#if defined(__cplusplus)
extern "C" {
#endif // defined(__cplusplus)
#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#endif

#if !defined(__cplusplus)
typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Foundation {
class Uri;
} /*Foundation*/
} /*Windows*/
}
#endif

#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Networking {
class HostName;
} /*Networking*/
} /*Windows*/
}
#endif

























































#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentHeaderCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpRequestHeaderCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpResponseHeaderCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentDispositionHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentCodingHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpLanguageHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentRangeHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpMediaTypeHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpMediaTypeWithQualityHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpContentCodingWithQualityHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpLanguageRangeWithQualityHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpCredentialsHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpCacheDirectiveHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpConnectionOptionHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpCookiePairHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpExpectationHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpTransferCodingHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpProductInfoHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpMethodHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpChallengeHeaderValueCollection;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpDateOrDeltaHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif
#ifdef __cplusplus
namespace ABI {
namespace Windows {
namespace Web {
namespace Http {
namespace Headers {
class HttpProductHeaderValue;
} /*Headers*/
} /*Http*/
} /*Web*/
} /*Windows*/
}
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0062 */
/* [local] */ 


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct DateTime DateTime;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif


#ifdef __cplusplus

} /* end extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            
            typedef struct TimeSpan TimeSpan;
            
        } /* end namespace */
    } /* end namespace */
} /* end namespace */

extern "C" { 
#endif





























































extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0062_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0062_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2504 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2504 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2504_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2504_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0063 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0063 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0063_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0063_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6bc05705-2c6f-57e8-bf96-56a761e90e8f")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0064 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0064 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0064_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0064_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2505 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2505 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2505_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2505_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0065 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0065 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0065_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0065_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("17847e58-f0cf-52e7-81c0-9d06a081569f")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0066 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0066 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0066_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0066_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2506 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2506 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2506_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2506_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0067 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0067 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0067_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0067_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e95057be-e8bd-53df-a2f6-865a66a07c6b")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0068 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0068 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0068_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0068_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2507 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2507 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2507_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2507_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0069 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0069 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0069_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0069_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1afc512f-dfa2-5528-8aef-6e6a37789b3c")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0070 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0070 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0070_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0070_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2508 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2508 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2508_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2508_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0071 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0071 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0071_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0071_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("e21ad0b2-c893-5360-a4fe-f083b308a9cd")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0072 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0072 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0072_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0072_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2509 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2509 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2509_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2509_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0073 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0073 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0073_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0073_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0e8960c2-76e5-56c1-9fe6-8cd9018a6786")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0074 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0074 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0074_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0074_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2510 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2510 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2510_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2510_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0075 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0075 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0075_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0075_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3780c808-8b98-5327-84c7-055363fe32ad")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0076 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0076 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0076_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0076_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2511 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2511 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2511_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2511_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0077 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0077 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0077_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0077_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("916e6271-cef6-53b8-b93f-dc8dca559e50")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0078 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0078 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0078_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0078_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2512 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2512 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2512_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2512_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0079 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0079 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0079_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ed3b6323-b1c3-558b-9917-0826c4a9e8c0")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0080 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0080 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0080_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0080_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2513 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2513 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2513_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2513_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0081 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0081 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0081_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("16773244-5011-5244-bb00-14db4cf71005")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0082 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0082 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0082_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0082_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2514 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2514 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2514_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2514_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0083 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0083 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0083_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6b72326a-46b1-5d80-a162-c5f45be02e2b")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0084 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0084 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0084_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2515 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2515 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2515_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2515_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0085 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0085 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0085_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0085_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0a391c2b-13c3-59b8-8662-13affb9d1754")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0086 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0086 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0086_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0086_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2516 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2516 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2516_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2516_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0087 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0087 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0087_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0087_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("a25503de-4aef-5ef4-9f06-5df4094051be")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0088 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0088 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0088_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0088_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2517 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2517 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2517_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2517_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0089 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0089 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0089_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0089_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0c5a4a0d-dbb7-5abf-a5fd-c3b98d9c1487")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0090 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0090 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0090_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0090_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2518 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2518 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2518_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2518_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0091 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0091 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0091_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0091_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6a2084a3-941a-5528-a2ec-28cf1ff9b1a9")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0092 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0092 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0092_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0092_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2519 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2519 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2519_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2519_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0093 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0093 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0093_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0093_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ffc7dfde-58b8-51e9-b33b-65a5d6a4e24c")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0094 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0094 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0094_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0094_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2520 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2520 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2520_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2520_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0095 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0095 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0095_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0095_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3bb0c8fa-5f1f-5c70-9950-5d1d1a703dd4")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0096 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0096 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0096_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0096_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2521 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2521 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2521_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2521_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0097 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0097 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0097_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0097_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5838a126-b617-5417-b32e-ded2d27d40a3")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0098 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0098 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0098_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0098_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2522 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2522 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2522_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2522_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0099 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0099 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0099_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0099_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4f785951-b59c-5108-b0cd-1437578af49c")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0100 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0100 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0100_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0100_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2523 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2523 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2523_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2523_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0101 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0101 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0101_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0101_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bf97cf99-e614-5765-bad7-161ae3a93ae9")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0102 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0102 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0102_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0102_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2524 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2524 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2524_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2524_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0103 */
/* [local] */ 

#ifndef DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#define DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0103 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0103_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0103_v0_0_s_ifspec;

#ifndef ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49e58dec-b5cd-5ba4-a603-365d1588ad4c")
    __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue : public IInspectable
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **current) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_HasCurrent( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ __RPC__out boolean *hasCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **current);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out boolean *hasCurrent);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

    interface __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
    {
        CONST_VTBL struct __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0104 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0104 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0104_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0104_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2525 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2525 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2525_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2525_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0105 */
/* [local] */ 

#ifndef DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#define DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0105 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0105_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0105_v0_0_s_ifspec;

#ifndef ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("57402048-38bf-5055-acb6-5c4da765e388")
    __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE First( 
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue **first) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *First )( 
            __RPC__in __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue **first);
        
        END_INTERFACE
    } __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

    interface __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
    {
        CONST_VTBL struct __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0106 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIIterable_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0106 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0106_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0106_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2526 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2526 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2526_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2526_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0107 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0107 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0107_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0107_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8b79423f-b4a3-501d-bac2-b88e78e13a21")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0108 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0108 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0108_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0108_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2527 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2527 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2527_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2527_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0109 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0109 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0109_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0109_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1beae481-9d30-5ac8-942c-49a5f8737adf")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0110 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0110 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0110_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0110_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2528 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2528 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2528_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2528_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0111 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0111 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0111_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0111_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("dcdf2620-b6d0-5835-8bec-d3b946a50f55")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0112 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0112 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0112_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0112_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2529 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2529 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2529_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2529_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0113 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0113 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0113_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0113_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("eb18569b-a7ab-58bb-8880-dd022f755b51")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0114 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0114 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0114_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0114_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2530 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2530 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2530_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2530_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0115 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0115 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0115_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0115_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ad89192d-6ef8-56b5-a4dc-e48d0e85d569")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0116 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0116 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0116_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0116_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2531 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2531 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2531_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2531_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0117 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0117 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0117_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0117_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71a22f32-a3c0-574b-87b4-127199cc7d5e")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0118 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0118 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0118_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0118_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2532 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2532 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2532_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2532_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0119 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0119 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0119_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0119_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("551fb7fb-ce42-5ffd-a2e0-2a6ce1698070")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0120 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0120 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0120_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0120_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2533 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2533 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2533_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2533_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0121 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0121 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0121_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0121_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("f1c1e9bd-01a6-5bd3-af7b-c14220a645c0")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0122 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0122 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0122_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0122_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2534 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2534 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2534_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2534_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0123 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0123 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0123_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0123_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1ef903c8-8eef-5e9e-b938-b9e428a77672")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0124 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0124 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0124_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0124_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2535 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2535 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2535_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2535_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0125 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0125 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0125_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0125_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82fef9f0-e283-5279-aa50-f0b3e5726a86")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0126 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0126 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0126_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0126_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2536 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2536 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2536_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2536_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0127 */
/* [local] */ 

#ifndef DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#define DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0127 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0127_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0127_v0_0_s_ifspec;

#ifndef ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("25c1a8d6-229b-5421-b3b3-b7ef078fad7f")
    __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        END_INTERFACE
    } __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

    interface __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
    {
        CONST_VTBL struct __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0128 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0128 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0128_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0128_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2537 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2537 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2537_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2537_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0129 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0129 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0129_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0129_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3737fc5e-0b27-52a3-9e40-cbb9844e6ab7")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0130 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpChallengeHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0130 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0130_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0130_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2538 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2538 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2538_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2538_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0131 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0131 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0131_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0131_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c312da8d-c82f-51c9-b705-5a26d52fbee6")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0132 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpConnectionOptionHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0132 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0132_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0132_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2539 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2539 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2539_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2539_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0133 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0133 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0133_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0133_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b94e539f-44b6-54c6-9ad4-e2844b3e0be1")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0134 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0134 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0134_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0134_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2540 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2540 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2540_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2540_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0135 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0135 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0135_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0135_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33f9653d-0eed-5368-a51e-98385191f86f")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0136 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpContentCodingWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0136 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0136_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0136_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2541 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2541 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2541_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2541_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0137 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0137 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0137_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0137_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("bc196ace-8a56-5fd0-9878-c807edd8645a")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0138 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpCookiePairHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0138 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0138_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0138_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2542 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2542 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2542_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2542_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0139 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0139 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0139_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0139_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18e138ee-fec7-527d-8693-deebca4f3dcd")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0140 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpExpectationHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0140 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0140_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0140_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2543 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2543 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2543_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2543_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0141 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0141 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0141_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0141_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("b6df6da2-8d92-5270-9584-d6a9a931586d")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0142 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpLanguageRangeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0142 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0142_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0142_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2544 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2544 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2544_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2544_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0143 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0143 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0143_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0143_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c18538f7-c256-5666-8868-2225af3574b6")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0144 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpMediaTypeWithQualityHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0144 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0144_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0144_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2545 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2545 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2545_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2545_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0145 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0145 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0145_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0145_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2cf800d4-35d0-545c-ab82-f6793be74cba")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0146 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0146 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0146_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0146_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2546 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2546 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2546_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2546_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0147 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0147 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0147_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0147_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("69392060-6c0f-5de6-8ced-f14fc1b83376")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0148 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpProductInfoHeaderValue */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0148 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0148_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0148_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2547 */




/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2547 */




extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2547_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_2547_v0_0_s_ifspec;

/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0149 */
/* [local] */ 

#ifndef DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#define DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
#if !defined(__cplusplus) || defined(RO_NO_TEMPLATE_NAME)


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0149 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0149_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0149_v0_0_s_ifspec;

#ifndef ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#define ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 



/* interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("38e72562-e17c-5d68-aad1-8e8a860b8969")
    __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue : public IInspectable
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAt( 
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **item) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
            /* [retval][out] */ __RPC__out unsigned int *size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetView( 
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue **view) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertAt( 
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ unsigned int index) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Append( 
            /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue *item) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveAtEnd( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMany( 
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReplaceAll( 
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *GetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [retval][out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **item);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__out unsigned int *size);
        
        HRESULT ( STDMETHODCALLTYPE *GetView )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue **view);
        
        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue *item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);
        
        HRESULT ( STDMETHODCALLTYPE *SetAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *InsertAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int index,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int index);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue *item);
        
        HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *Clear )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **items,
            /* [retval][out] */ __RPC__out unsigned int *actual);
        
        HRESULT ( STDMETHODCALLTYPE *ReplaceAll )( 
            __RPC__in __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue * This,
            /* [in] */ unsigned int count,
            /* [size_is][in] */ __RPC__in_ecount_full(count) __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **value);
        
        END_INTERFACE
    } __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl;

    interface __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue
    {
        CONST_VTBL struct __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0150 */
/* [local] */ 

#endif /* pinterface */
#endif /* DEF___FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpTransferCodingHeaderValue */
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpContentHeaderCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0150 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0150_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0150_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentHeaderCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("40612A44-47AE-4B7E-9124-69628B64AA18")
                        IHttpContentHeaderCollection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentDisposition( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentDisposition( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentEncoding( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentLanguage( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentLength( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentLength( 
                                /* [in] */ __RPC__in_opt __FIReference_1_UINT64 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentLocation( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentLocation( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentMD5( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Storage::Streams::IBuffer **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentMD5( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Storage::Streams::IBuffer *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentRange( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentRange( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentType( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ContentType( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Expires( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Expires( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastModified( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_LastModified( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Append( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentHeaderCollection = __uuidof(IHttpContentHeaderCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentDisposition )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentDisposition )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentEncoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentLanguage )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentLength )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentLength )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_UINT64 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentLocation )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentLocation )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentMD5 )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentMD5 )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CStorage_CStreams_CIBuffer *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentRange )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentRange )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ContentType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expires )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expires )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastModified )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_LastModified )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value);
        
        HRESULT ( STDMETHODCALLTYPE *TryAppendWithoutValidation )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentDisposition(This,value)	\
    ( (This)->lpVtbl -> get_ContentDisposition(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentDisposition(This,value)	\
    ( (This)->lpVtbl -> put_ContentDisposition(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentEncoding(This,value)	\
    ( (This)->lpVtbl -> get_ContentEncoding(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLanguage(This,value)	\
    ( (This)->lpVtbl -> get_ContentLanguage(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLength(This,value)	\
    ( (This)->lpVtbl -> get_ContentLength(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentLength(This,value)	\
    ( (This)->lpVtbl -> put_ContentLength(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentLocation(This,value)	\
    ( (This)->lpVtbl -> get_ContentLocation(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentLocation(This,value)	\
    ( (This)->lpVtbl -> put_ContentLocation(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentMD5(This,value)	\
    ( (This)->lpVtbl -> get_ContentMD5(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentMD5(This,value)	\
    ( (This)->lpVtbl -> put_ContentMD5(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentRange(This,value)	\
    ( (This)->lpVtbl -> get_ContentRange(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentRange(This,value)	\
    ( (This)->lpVtbl -> put_ContentRange(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_ContentType(This,value)	\
    ( (This)->lpVtbl -> get_ContentType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_ContentType(This,value)	\
    ( (This)->lpVtbl -> put_ContentType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_Expires(This,value)	\
    ( (This)->lpVtbl -> get_Expires(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_Expires(This,value)	\
    ( (This)->lpVtbl -> put_Expires(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_get_LastModified(This,value)	\
    ( (This)->lpVtbl -> get_LastModified(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_put_LastModified(This,value)	\
    ( (This)->lpVtbl -> put_LastModified(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_Append(This,name,value)	\
    ( (This)->lpVtbl -> Append(This,name,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_TryAppendWithoutValidation(This,name,value,succeeded)	\
    ( (This)->lpVtbl -> TryAppendWithoutValidation(This,name,value,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0151 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpRequestHeaderCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0151 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0151_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0151_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpRequestHeaderCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("AF40329B-B544-469B-86B9-AC3D466FEA36")
                        IHttpRequestHeaderCollection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Accept( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptEncoding( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_AcceptLanguage( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Authorization( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Authorization( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheControl( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Connection( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Cookie( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Date( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Date( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Expect( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_From( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_From( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Host( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Networking::IHostName **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Host( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Networking::IHostName *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IfModifiedSince( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IfModifiedSince( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IfUnmodifiedSince( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_IfUnmodifiedSince( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxForwards( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT32 **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxForwards( 
                                /* [in] */ __RPC__in_opt __FIReference_1_UINT32 *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProxyAuthorization( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_ProxyAuthorization( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Referer( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Referer( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TransferEncoding( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UserAgent( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueCollection **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Append( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpRequestHeaderCollection = __uuidof(IHttpRequestHeaderCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Accept )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptEncoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptLanguage )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Authorization )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Authorization )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheControl )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Connection )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Cookie )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Date )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Date )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expect )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_From )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_From )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Host )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CNetworking_CIHostName **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Host )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CNetworking_CIHostName *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IfModifiedSince )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IfModifiedSince )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IfUnmodifiedSince )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_IfUnmodifiedSince )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxForwards )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT32 **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxForwards )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_UINT32 *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyAuthorization )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyAuthorization )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Referer )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Referer )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransferEncoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserAgent )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection **value);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value);
        
        HRESULT ( STDMETHODCALLTYPE *TryAppendWithoutValidation )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Accept(This,value)	\
    ( (This)->lpVtbl -> get_Accept(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_AcceptEncoding(This,value)	\
    ( (This)->lpVtbl -> get_AcceptEncoding(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_AcceptLanguage(This,value)	\
    ( (This)->lpVtbl -> get_AcceptLanguage(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Authorization(This,value)	\
    ( (This)->lpVtbl -> get_Authorization(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Authorization(This,value)	\
    ( (This)->lpVtbl -> put_Authorization(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_CacheControl(This,value)	\
    ( (This)->lpVtbl -> get_CacheControl(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Connection(This,value)	\
    ( (This)->lpVtbl -> get_Connection(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Cookie(This,value)	\
    ( (This)->lpVtbl -> get_Cookie(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Date(This,value)	\
    ( (This)->lpVtbl -> get_Date(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Date(This,value)	\
    ( (This)->lpVtbl -> put_Date(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Expect(This,value)	\
    ( (This)->lpVtbl -> get_Expect(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_From(This,value)	\
    ( (This)->lpVtbl -> get_From(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_From(This,value)	\
    ( (This)->lpVtbl -> put_From(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Host(This,value)	\
    ( (This)->lpVtbl -> get_Host(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Host(This,value)	\
    ( (This)->lpVtbl -> put_Host(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_IfModifiedSince(This,value)	\
    ( (This)->lpVtbl -> get_IfModifiedSince(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_IfModifiedSince(This,value)	\
    ( (This)->lpVtbl -> put_IfModifiedSince(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_IfUnmodifiedSince(This,value)	\
    ( (This)->lpVtbl -> get_IfUnmodifiedSince(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_IfUnmodifiedSince(This,value)	\
    ( (This)->lpVtbl -> put_IfUnmodifiedSince(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_MaxForwards(This,value)	\
    ( (This)->lpVtbl -> get_MaxForwards(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_MaxForwards(This,value)	\
    ( (This)->lpVtbl -> put_MaxForwards(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_ProxyAuthorization(This,value)	\
    ( (This)->lpVtbl -> get_ProxyAuthorization(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_ProxyAuthorization(This,value)	\
    ( (This)->lpVtbl -> put_ProxyAuthorization(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_Referer(This,value)	\
    ( (This)->lpVtbl -> get_Referer(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_put_Referer(This,value)	\
    ( (This)->lpVtbl -> put_Referer(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_TransferEncoding(This,value)	\
    ( (This)->lpVtbl -> get_TransferEncoding(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_get_UserAgent(This,value)	\
    ( (This)->lpVtbl -> get_UserAgent(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_Append(This,name,value)	\
    ( (This)->lpVtbl -> Append(This,name,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_TryAppendWithoutValidation(This,name,value,succeeded)	\
    ( (This)->lpVtbl -> TryAppendWithoutValidation(This,name,value,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0152 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.IHttpResponseHeaderCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0152 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0152_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0152_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpResponseHeaderCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7A990969-FA3F-41ED-AAC6-BF957975C16B")
                        IHttpResponseHeaderCollection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Age( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Age( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Allow( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMethodHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CacheControl( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Connection( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Date( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Date( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Location( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Foundation::IUriRuntimeClass **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Location( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Foundation::IUriRuntimeClass *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ProxyAuthenticate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_RetryAfter( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_RetryAfter( 
                                /* [in] */ __RPC__in_opt ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_TransferEncoding( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_WwwAuthenticate( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection **value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE Append( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryAppendWithoutValidation( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpResponseHeaderCollection = __uuidof(IHttpResponseHeaderCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Age )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Age )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Allow )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CacheControl )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Connection )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Date )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Date )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CDateTime *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Location )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CIUriRuntimeClass *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyAuthenticate )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_RetryAfter )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_RetryAfter )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransferEncoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_WwwAuthenticate )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection **value);
        
        HRESULT ( STDMETHODCALLTYPE *Append )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value);
        
        HRESULT ( STDMETHODCALLTYPE *TryAppendWithoutValidation )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Age(This,value)	\
    ( (This)->lpVtbl -> get_Age(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Age(This,value)	\
    ( (This)->lpVtbl -> put_Age(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Allow(This,value)	\
    ( (This)->lpVtbl -> get_Allow(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_CacheControl(This,value)	\
    ( (This)->lpVtbl -> get_CacheControl(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Connection(This,value)	\
    ( (This)->lpVtbl -> get_Connection(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Date(This,value)	\
    ( (This)->lpVtbl -> get_Date(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Date(This,value)	\
    ( (This)->lpVtbl -> put_Date(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_Location(This,value)	\
    ( (This)->lpVtbl -> get_Location(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_Location(This,value)	\
    ( (This)->lpVtbl -> put_Location(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_ProxyAuthenticate(This,value)	\
    ( (This)->lpVtbl -> get_ProxyAuthenticate(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_RetryAfter(This,value)	\
    ( (This)->lpVtbl -> get_RetryAfter(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_put_RetryAfter(This,value)	\
    ( (This)->lpVtbl -> put_RetryAfter(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_TransferEncoding(This,value)	\
    ( (This)->lpVtbl -> get_TransferEncoding(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_get_WwwAuthenticate(This,value)	\
    ( (This)->lpVtbl -> get_WwwAuthenticate(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_Append(This,name,value)	\
    ( (This)->lpVtbl -> Append(This,name,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_TryAppendWithoutValidation(This,name,value,succeeded)	\
    ( (This)->lpVtbl -> TryAppendWithoutValidation(This,name,value,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0153 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0153 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0153_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0153_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCacheDirectiveHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("9A586B89-D5D0-4FBE-BD9D-B5B3636811B4")
                        IHttpCacheDirectiveHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxAge( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxAge( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MaxStale( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MaxStale( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MinFresh( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MinFresh( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_SharedMaxAge( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_SharedMaxAge( 
                                /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCacheDirectiveHeaderValueCollection = __uuidof(IHttpCacheDirectiveHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxAge )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxAge )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxStale )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxStale )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MinFresh )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MinFresh )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_SharedMaxAge )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_SharedMaxAge )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in_opt __FIReference_1_Windows__CFoundation__CTimeSpan *value);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MaxAge(This,value)	\
    ( (This)->lpVtbl -> get_MaxAge(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MaxAge(This,value)	\
    ( (This)->lpVtbl -> put_MaxAge(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MaxStale(This,value)	\
    ( (This)->lpVtbl -> get_MaxStale(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MaxStale(This,value)	\
    ( (This)->lpVtbl -> put_MaxStale(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_MinFresh(This,value)	\
    ( (This)->lpVtbl -> get_MinFresh(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_MinFresh(This,value)	\
    ( (This)->lpVtbl -> put_MinFresh(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_get_SharedMaxAge(This,value)	\
    ( (This)->lpVtbl -> get_SharedMaxAge(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_put_SharedMaxAge(This,value)	\
    ( (This)->lpVtbl -> put_SharedMaxAge(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0154 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0154 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0154_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0154_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("F3D38A72-FC01-4D01-A008-FCB7C459D635")
                        IHttpChallengeHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **challengeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **challengeHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpChallengeHeaderValueStatics = __uuidof(IHttpChallengeHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **challengeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **challengeHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_Parse(This,input,challengeHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,challengeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_TryParse(This,input,challengeHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,challengeHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0155 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0155 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0155_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0155_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("C452C451-D99C-40AA-9399-90EEB98FC613")
                        IHttpChallengeHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromScheme( 
                                /* [in] */ __RPC__in HSTRING scheme,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **challengeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromSchemeWithToken( 
                                /* [in] */ __RPC__in HSTRING scheme,
                                /* [in] */ __RPC__in HSTRING token,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue **challengeHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpChallengeHeaderValueFactory = __uuidof(IHttpChallengeHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromScheme )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING scheme,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **challengeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromSchemeWithToken )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING scheme,
            /* [in] */ __RPC__in HSTRING token,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue **challengeHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_CreateFromScheme(This,scheme,challengeHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromScheme(This,scheme,challengeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_CreateFromSchemeWithToken(This,scheme,token,challengeHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromSchemeWithToken(This,scheme,token,challengeHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0156 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0156 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0156_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0156_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("393361AF-0F7D-4820-9FDD-A2B956EEAEAB")
                        IHttpChallengeHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Scheme( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Token( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpChallengeHeaderValue = __uuidof(IHttpChallengeHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scheme )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Token )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Scheme(This,value)	\
    ( (This)->lpVtbl -> get_Scheme(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_get_Token(This,value)	\
    ( (This)->lpVtbl -> get_Token(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0157 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0157 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0157_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0157_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpChallengeHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("CA9E5F81-AEE0-4353-A10B-E625BABD64C2")
                        IHttpChallengeHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpChallengeHeaderValueCollection = __uuidof(IHttpChallengeHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0158 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0158 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0158_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0158_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("A69B2BE6-CE8C-4443-A35A-1B727B131036")
                        IHttpCredentialsHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **credentialsHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **credentialsHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCredentialsHeaderValueStatics = __uuidof(IHttpCredentialsHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **credentialsHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **credentialsHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_Parse(This,input,credentialsHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,credentialsHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_TryParse(This,input,credentialsHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,credentialsHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0159 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0159 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0159_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0159_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("F21D9E91-4D1C-4182-BFD1-34470A62F950")
                        IHttpCredentialsHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromScheme( 
                                /* [in] */ __RPC__in HSTRING scheme,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **credentialsHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromSchemeWithToken( 
                                /* [in] */ __RPC__in HSTRING scheme,
                                /* [in] */ __RPC__in HSTRING token,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue **credentialsHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCredentialsHeaderValueFactory = __uuidof(IHttpCredentialsHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromScheme )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING scheme,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **credentialsHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromSchemeWithToken )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING scheme,
            /* [in] */ __RPC__in HSTRING token,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue **credentialsHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_CreateFromScheme(This,scheme,credentialsHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromScheme(This,scheme,credentialsHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_CreateFromSchemeWithToken(This,scheme,token,credentialsHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromSchemeWithToken(This,scheme,token,credentialsHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0160 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCredentialsHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0160 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0160_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0160_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCredentialsHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("C34CC3CB-542E-4177-A6C7-B674CE193FBF")
                        IHttpCredentialsHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Scheme( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Token( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCredentialsHeaderValue = __uuidof(IHttpCredentialsHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scheme )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Token )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Scheme(This,value)	\
    ( (This)->lpVtbl -> get_Scheme(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_get_Token(This,value)	\
    ( (This)->lpVtbl -> get_Token(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0161 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0161 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0161_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0161_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("AAA75D37-A946-4B1F-85AF-48B68B3C50BD")
                        IHttpConnectionOptionHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **connectionOptionHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **connectionOptionHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpConnectionOptionHeaderValueStatics = __uuidof(IHttpConnectionOptionHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **connectionOptionHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **connectionOptionHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_Parse(This,input,connectionOptionHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,connectionOptionHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_TryParse(This,input,connectionOptionHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,connectionOptionHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0162 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0162 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0162_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0162_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("D93CCC1E-0B7D-4C3F-A58D-A2A1BDEABC0A")
                        IHttpConnectionOptionHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Create( 
                                /* [in] */ __RPC__in HSTRING token,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue **connectionOptionHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpConnectionOptionHeaderValueFactory = __uuidof(IHttpConnectionOptionHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING token,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue **connectionOptionHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_Create(This,token,connectionOptionHeaderValue)	\
    ( (This)->lpVtbl -> Create(This,token,connectionOptionHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0163 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0163 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0163_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0163_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("CB4AF27A-4E90-45EB-8DCD-FD1408F4C44F")
                        IHttpConnectionOptionHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Token( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpConnectionOptionHeaderValue = __uuidof(IHttpConnectionOptionHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Token )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_get_Token(This,value)	\
    ( (This)->lpVtbl -> get_Token(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0164 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0164 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0164_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0164_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpConnectionOptionHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("E4F56C1D-5142-4E00-8E0F-019509337629")
                        IHttpConnectionOptionHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpConnectionOptionHeaderValueCollection = __uuidof(IHttpConnectionOptionHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0165 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0165 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0165_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0165_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("94D8602E-F9BF-42F7-AA46-ED272A41E212")
                        IHttpContentCodingHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **contentCodingHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **contentCodingHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingHeaderValueStatics = __uuidof(IHttpContentCodingHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **contentCodingHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **contentCodingHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_Parse(This,input,contentCodingHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,contentCodingHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_TryParse(This,input,contentCodingHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,contentCodingHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0166 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0166 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0166_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0166_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("C53D2BD7-332B-4350-8510-2E67A2289A5A")
                        IHttpContentCodingHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Create( 
                                /* [in] */ __RPC__in HSTRING contentCoding,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue **contentCodingHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingHeaderValueFactory = __uuidof(IHttpContentCodingHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING contentCoding,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue **contentCodingHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_Create(This,contentCoding,contentCodingHeaderValue)	\
    ( (This)->lpVtbl -> Create(This,contentCoding,contentCodingHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0167 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0167 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0167_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0167_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("BCF7F92A-9376-4D85-BCCC-9F4F9ACAB434")
                        IHttpContentCodingHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentCoding( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingHeaderValue = __uuidof(IHttpContentCodingHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentCoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_get_ContentCoding(This,value)	\
    ( (This)->lpVtbl -> get_ContentCoding(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0168 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0168 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0168_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0168_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7D221721-A6DB-436E-8E83-91596192819C")
                        IHttpContentCodingHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingHeaderValueCollection = __uuidof(IHttpContentCodingHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0169 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0169 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0169_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0169_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("29C56067-5A37-46E4-B074-C5177D69CA66")
                        IHttpContentDispositionHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue **contentDispositionHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue **contentDispositionHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentDispositionHeaderValueStatics = __uuidof(IHttpContentDispositionHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue **contentDispositionHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue **contentDispositionHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_Parse(This,input,contentDispositionHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,contentDispositionHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_TryParse(This,input,contentDispositionHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,contentDispositionHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0170 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0170 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0170_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0170_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("9915BBC4-456C-4E81-8295-B2AB3CBCF545")
                        IHttpContentDispositionHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Create( 
                                /* [in] */ __RPC__in HSTRING dispositionType,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue **contentDispositionHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentDispositionHeaderValueFactory = __uuidof(IHttpContentDispositionHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING dispositionType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue **contentDispositionHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_Create(This,dispositionType,contentDispositionHeaderValue)	\
    ( (This)->lpVtbl -> Create(This,dispositionType,contentDispositionHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0171 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0171 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0171_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0171_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentDispositionHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("F2A2EEDC-2629-4B49-9908-96A168E9365E")
                        IHttpContentDispositionHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_DispositionType( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_DispositionType( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FileName( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FileNameStar( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_FileNameStar( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Size( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Size( 
                                /* [in] */ __RPC__in_opt __FIReference_1_UINT64 *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentDispositionHeaderValue = __uuidof(IHttpContentDispositionHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_DispositionType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_DispositionType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FileName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameStar )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_FileNameStar )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Size )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue * This,
            /* [in] */ __RPC__in_opt __FIReference_1_UINT64 *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_DispositionType(This,value)	\
    ( (This)->lpVtbl -> get_DispositionType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_DispositionType(This,value)	\
    ( (This)->lpVtbl -> put_DispositionType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_FileName(This,value)	\
    ( (This)->lpVtbl -> get_FileName(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_FileName(This,value)	\
    ( (This)->lpVtbl -> put_FileName(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_FileNameStar(This,value)	\
    ( (This)->lpVtbl -> get_FileNameStar(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_FileNameStar(This,value)	\
    ( (This)->lpVtbl -> put_FileNameStar(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_Name(This,value)	\
    ( (This)->lpVtbl -> put_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_get_Size(This,value)	\
    ( (This)->lpVtbl -> get_Size(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_put_Size(This,value)	\
    ( (This)->lpVtbl -> put_Size(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0172 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0172 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0172_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0172_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("80A346CA-174C-4FAE-821C-134CD294AA38")
                        IHttpContentRangeHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **contentRangeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **contentRangeHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentRangeHeaderValueStatics = __uuidof(IHttpContentRangeHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **contentRangeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **contentRangeHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_Parse(This,input,contentRangeHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,contentRangeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_TryParse(This,input,contentRangeHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,contentRangeHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0173 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0173 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0173_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0173_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("3F5BD691-A03C-4456-9A6F-EF27ECD03CAE")
                        IHttpContentRangeHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromLength( 
                                /* [in] */ UINT64 length,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **contentRangeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromRange( 
                                /* [in] */ UINT64 from,
                                /* [in] */ UINT64 to,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **contentRangeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromRangeWithLength( 
                                /* [in] */ UINT64 from,
                                /* [in] */ UINT64 to,
                                /* [in] */ UINT64 length,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue **contentRangeHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentRangeHeaderValueFactory = __uuidof(IHttpContentRangeHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromLength )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [in] */ UINT64 length,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **contentRangeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromRange )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [in] */ UINT64 from,
            /* [in] */ UINT64 to,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **contentRangeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromRangeWithLength )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory * This,
            /* [in] */ UINT64 from,
            /* [in] */ UINT64 to,
            /* [in] */ UINT64 length,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue **contentRangeHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromLength(This,length,contentRangeHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromLength(This,length,contentRangeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromRange(This,from,to,contentRangeHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromRange(This,from,to,contentRangeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_CreateFromRangeWithLength(This,from,to,length,contentRangeHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromRangeWithLength(This,from,to,length,contentRangeHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0174 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentRangeHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0174 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0174_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0174_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentRangeHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("04D967D3-A4F6-495C-9530-8579FCBA8AA9")
                        IHttpContentRangeHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FirstBytePosition( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LastBytePosition( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Unit( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Unit( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentRangeHeaderValue = __uuidof(IHttpContentRangeHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstBytePosition )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastBytePosition )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_UINT64 **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Unit )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Unit )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_FirstBytePosition(This,value)	\
    ( (This)->lpVtbl -> get_FirstBytePosition(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_LastBytePosition(This,value)	\
    ( (This)->lpVtbl -> get_LastBytePosition(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_Length(This,value)	\
    ( (This)->lpVtbl -> get_Length(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_get_Unit(This,value)	\
    ( (This)->lpVtbl -> get_Unit(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_put_Unit(This,value)	\
    ( (This)->lpVtbl -> put_Unit(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0175 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0175 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0175_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0175_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("6E866D48-06AF-4462-8158-99388D5DCA81")
                        IHttpCookiePairHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **cookiePairHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **cookiePairHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCookiePairHeaderValueStatics = __uuidof(IHttpCookiePairHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **cookiePairHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **cookiePairHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_Parse(This,input,cookiePairHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,cookiePairHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_TryParse(This,input,cookiePairHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,cookiePairHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0176 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0176 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0176_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0176_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("635E326F-146F-4F56-AA21-2CB7D6D58B1E")
                        IHttpCookiePairHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromName( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **cookiePairHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue **cookiePairHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCookiePairHeaderValueFactory = __uuidof(IHttpCookiePairHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **cookiePairHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromNameWithValue )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue **cookiePairHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_CreateFromName(This,name,cookiePairHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromName(This,name,cookiePairHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_CreateFromNameWithValue(This,name,value,cookiePairHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromNameWithValue(This,name,value,cookiePairHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0177 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0177 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0177_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0177_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("CBD46217-4B29-412B-BD90-B3D814AB8E1B")
                        IHttpCookiePairHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCookiePairHeaderValue = __uuidof(IHttpCookiePairHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0178 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0178 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0178_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0178_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpCookiePairHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("F3F44350-581E-4ECC-9F59-E507D04F06E6")
                        IHttpCookiePairHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpCookiePairHeaderValueCollection = __uuidof(IHttpCookiePairHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0179 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0179 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0179_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0179_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7C2659A8-6672-4E90-9A9A-F39766F7F576")
                        IHttpDateOrDeltaHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue **dateOrDeltaHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue **dateOrDeltaHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpDateOrDeltaHeaderValueStatics = __uuidof(IHttpDateOrDeltaHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue **dateOrDeltaHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue **dateOrDeltaHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_Parse(This,input,dateOrDeltaHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,dateOrDeltaHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_TryParse(This,input,dateOrDeltaHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,dateOrDeltaHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0180 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0180 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0180_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0180_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpDateOrDeltaHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("EAFCAA6A-C4DC-49E2-A27D-043ADF5867A3")
                        IHttpDateOrDeltaHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Date( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Delta( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpDateOrDeltaHeaderValue = __uuidof(IHttpDateOrDeltaHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Date )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CDateTime **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Delta )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_Windows__CFoundation__CTimeSpan **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_get_Date(This,value)	\
    ( (This)->lpVtbl -> get_Date(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_get_Delta(This,value)	\
    ( (This)->lpVtbl -> get_Delta(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0181 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0181 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0181_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0181_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("3019ABE2-CFE5-473B-A57F-FBA5B14EB257")
                        IHttpExpectationHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **expectationHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **expectationHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpExpectationHeaderValueStatics = __uuidof(IHttpExpectationHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **expectationHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **expectationHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_Parse(This,input,expectationHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,expectationHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_TryParse(This,input,expectationHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,expectationHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0182 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0182 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0182_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0182_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("4EA275CB-D53E-4868-8856-1E21A5030DC0")
                        IHttpExpectationHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromName( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **expectationHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue **expectationHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpExpectationHeaderValueFactory = __uuidof(IHttpExpectationHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **expectationHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromNameWithValue )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue **expectationHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_CreateFromName(This,name,expectationHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromName(This,name,expectationHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_CreateFromNameWithValue(This,name,value,expectationHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromNameWithValue(This,name,value,expectationHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0183 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0183 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0183_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0183_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("4CE585CD-3A99-43AF-A2E6-EC232FEA9658")
                        IHttpExpectationHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpExpectationHeaderValue = __uuidof(IHttpExpectationHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0184 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0184 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0184_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0184_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpExpectationHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("E78521B3-A0E2-4AC4-9E66-79706CB9FD58")
                        IHttpExpectationHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpExpectationHeaderValueCollection = __uuidof(IHttpExpectationHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0185 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0185 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0185_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0185_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpLanguageHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("9EBD7CA3-8219-44F6-9902-8C56DFD3340C")
                        IHttpLanguageHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpLanguageHeaderValueCollection = __uuidof(IHttpLanguageHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0186 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0186 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0186_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0186_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("2541E146-F308-46F5-B695-42F54024EC68")
                        IHttpLanguageRangeWithQualityHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpLanguageRangeWithQualityHeaderValueStatics = __uuidof(IHttpLanguageRangeWithQualityHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_Parse(This,input,languageRangeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,languageRangeWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_TryParse(This,input,languageRangeWithQualityHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,languageRangeWithQualityHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0187 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0187 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0187_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0187_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7BB83970-780F-4C83-9FE4-DC3087F6BD55")
                        IHttpLanguageRangeWithQualityHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromLanguageRange( 
                                /* [in] */ __RPC__in HSTRING languageRange,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromLanguageRangeWithQuality( 
                                /* [in] */ __RPC__in HSTRING languageRange,
                                /* [in] */ DOUBLE quality,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpLanguageRangeWithQualityHeaderValueFactory = __uuidof(IHttpLanguageRangeWithQualityHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromLanguageRange )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING languageRange,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromLanguageRangeWithQuality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING languageRange,
            /* [in] */ DOUBLE quality,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue **languageRangeWithQualityHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_CreateFromLanguageRange(This,languageRange,languageRangeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromLanguageRange(This,languageRange,languageRangeWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_CreateFromLanguageRangeWithQuality(This,languageRange,quality,languageRangeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromLanguageRangeWithQuality(This,languageRange,quality,languageRangeWithQualityHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0188 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0188 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0188_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0188_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7256E102-0080-4DB4-A083-7DE7B2E5BA4C")
                        IHttpLanguageRangeWithQualityHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_LanguageRange( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *languageRange) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Quality( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpLanguageRangeWithQualityHeaderValue = __uuidof(IHttpLanguageRangeWithQualityHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageRange )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *languageRange);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Quality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_get_LanguageRange(This,languageRange)	\
    ( (This)->lpVtbl -> get_LanguageRange(This,languageRange) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_get_Quality(This,value)	\
    ( (This)->lpVtbl -> get_Quality(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0189 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0189 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0189_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0189_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpLanguageRangeWithQualityHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("885D5ABD-4B4F-480A-89CE-8AEDCEE6E3A0")
                        IHttpLanguageRangeWithQualityHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpLanguageRangeWithQualityHeaderValueCollection = __uuidof(IHttpLanguageRangeWithQualityHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0190 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0190 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0190_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0190_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("E04D83DF-1D41-4D8C-A2DE-6FD2ED87399B")
                        IHttpMediaTypeHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue **mediaTypeHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue **mediaTypeHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeHeaderValueStatics = __uuidof(IHttpMediaTypeHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue **mediaTypeHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue **mediaTypeHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_Parse(This,input,mediaTypeHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,mediaTypeHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_TryParse(This,input,mediaTypeHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,mediaTypeHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0191 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0191 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0191_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0191_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("BED747A8-CD17-42DD-9367-AB9C5B56DD7D")
                        IHttpMediaTypeHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Create( 
                                /* [in] */ __RPC__in HSTRING mediaType,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue **mediaTypeHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeHeaderValueFactory = __uuidof(IHttpMediaTypeHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING mediaType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue **mediaTypeHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_Create(This,mediaType,mediaTypeHeaderValue)	\
    ( (This)->lpVtbl -> Create(This,mediaType,mediaTypeHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0192 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0192 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0192_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0192_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("16B28533-E728-4FCB-BDB0-08A431A14844")
                        IHttpMediaTypeHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharSet( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharSet( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MediaType( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MediaType( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeHeaderValue = __uuidof(IHttpMediaTypeHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharSet )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharSet )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MediaType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MediaType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_CharSet(This,value)	\
    ( (This)->lpVtbl -> get_CharSet(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_put_CharSet(This,value)	\
    ( (This)->lpVtbl -> put_CharSet(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_MediaType(This,value)	\
    ( (This)->lpVtbl -> get_MediaType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_put_MediaType(This,value)	\
    ( (This)->lpVtbl -> put_MediaType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0193 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0193 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0193_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0193_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("5B070CD9-B560-4FC8-9835-7E6C0A657B24")
                        IHttpMediaTypeWithQualityHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeWithQualityHeaderValueStatics = __uuidof(IHttpMediaTypeWithQualityHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_Parse(This,input,mediaTypeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,mediaTypeWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_TryParse(This,input,mediaTypeWithQualityHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,mediaTypeWithQualityHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0194 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0194 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0194_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0194_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("4C6D20F4-9457-44E6-A323-D122B958780B")
                        IHttpMediaTypeWithQualityHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromMediaType( 
                                /* [in] */ __RPC__in HSTRING mediaType,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromMediaTypeWithQuality( 
                                /* [in] */ __RPC__in HSTRING mediaType,
                                /* [in] */ DOUBLE quality,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeWithQualityHeaderValueFactory = __uuidof(IHttpMediaTypeWithQualityHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromMediaType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING mediaType,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromMediaTypeWithQuality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING mediaType,
            /* [in] */ DOUBLE quality,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue **mediaTypeWithQualityHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_CreateFromMediaType(This,mediaType,mediaTypeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromMediaType(This,mediaType,mediaTypeWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_CreateFromMediaTypeWithQuality(This,mediaType,quality,mediaTypeWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromMediaTypeWithQuality(This,mediaType,quality,mediaTypeWithQualityHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0195 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0195 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0195_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0195_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("188D5E32-76BE-44A0-B1CD-2074BDED2DDE")
                        IHttpMediaTypeWithQualityHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_CharSet( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_CharSet( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_MediaType( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_MediaType( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Quality( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Quality( 
                                /* [in] */ __RPC__in_opt __FIReference_1_double *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeWithQualityHeaderValue = __uuidof(IHttpMediaTypeWithQualityHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_CharSet )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_CharSet )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_MediaType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_MediaType )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Quality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Quality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue * This,
            /* [in] */ __RPC__in_opt __FIReference_1_double *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_CharSet(This,value)	\
    ( (This)->lpVtbl -> get_CharSet(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_CharSet(This,value)	\
    ( (This)->lpVtbl -> put_CharSet(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_MediaType(This,value)	\
    ( (This)->lpVtbl -> get_MediaType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_MediaType(This,value)	\
    ( (This)->lpVtbl -> put_MediaType(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_get_Quality(This,value)	\
    ( (This)->lpVtbl -> get_Quality(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_put_Quality(This,value)	\
    ( (This)->lpVtbl -> put_Quality(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0196 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0196 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0196_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0196_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMediaTypeWithQualityHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("3C0C6B73-1342-4587-A056-18D02FF67165")
                        IHttpMediaTypeWithQualityHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMediaTypeWithQualityHeaderValueCollection = __uuidof(IHttpMediaTypeWithQualityHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0197 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0197 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0197_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0197_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpMethodHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("43BC3FF4-6119-4ADF-938C-34BFFFCF92ED")
                        IHttpMethodHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpMethodHeaderValueCollection = __uuidof(IHttpMethodHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0198 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0198 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0198_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0198_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("FFD4030F-1130-4152-8659-256909A9D115")
                        IHttpNameValueHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **nameValueHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **nameValueHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpNameValueHeaderValueStatics = __uuidof(IHttpNameValueHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **nameValueHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **nameValueHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_Parse(This,input,nameValueHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,nameValueHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_TryParse(This,input,nameValueHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,nameValueHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0199 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0199 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0199_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0199_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("770E2267-CBF8-4736-A925-93FBE10C7CA8")
                        IHttpNameValueHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromName( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **nameValueHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithValue( 
                                /* [in] */ __RPC__in HSTRING name,
                                /* [in] */ __RPC__in HSTRING value,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue **nameValueHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpNameValueHeaderValueFactory = __uuidof(IHttpNameValueHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **nameValueHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromNameWithValue )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING name,
            /* [in] */ __RPC__in HSTRING value,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue **nameValueHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_CreateFromName(This,name,nameValueHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromName(This,name,nameValueHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_CreateFromNameWithValue(This,name,value,nameValueHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromNameWithValue(This,name,value,nameValueHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0200 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.IHttpNameValueHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0200 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0200_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0200_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpNameValueHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("D8BA7463-5B9A-4D1B-93F9-AA5B44ECFDDF")
                        IHttpNameValueHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
                                /* [in] */ __RPC__in HSTRING value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpNameValueHeaderValue = __uuidof(IHttpNameValueHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue * This,
            /* [in] */ __RPC__in HSTRING value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_put_Value(This,value)	\
    ( (This)->lpVtbl -> put_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0201 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0201 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0201_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0201_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("90C33E29-BEFC-4337-BE62-49F097975F53")
                        IHttpProductHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue **productHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue **productHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductHeaderValueStatics = __uuidof(IHttpProductHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue **productHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue **productHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_Parse(This,input,productHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,productHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_TryParse(This,input,productHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,productHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0202 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0202 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0202_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0202_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("611AA4F5-82BC-42FB-977B-DC00536E5E86")
                        IHttpProductHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromName( 
                                /* [in] */ __RPC__in HSTRING productName,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue **productHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithVersion( 
                                /* [in] */ __RPC__in HSTRING productName,
                                /* [in] */ __RPC__in HSTRING productVersion,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue **productHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductHeaderValueFactory = __uuidof(IHttpProductHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING productName,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue **productHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromNameWithVersion )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING productName,
            /* [in] */ __RPC__in HSTRING productVersion,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue **productHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_CreateFromName(This,productName,productHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromName(This,productName,productHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_CreateFromNameWithVersion(This,productName,productVersion,productHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromNameWithVersion(This,productName,productVersion,productHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0203 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0203 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0203_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0203_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("F4FEEE03-EBD4-4160-B9FF-807C5183B6E6")
                        IHttpProductHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductHeaderValue = __uuidof(IHttpProductHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_get_Name(This,value)	\
    ( (This)->lpVtbl -> get_Name(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_get_Version(This,value)	\
    ( (This)->lpVtbl -> get_Version(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0204 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0204 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0204_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0204_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("DB7FD857-327A-4E73-81E5-7059A302B042")
                        IHttpProductInfoHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **productInfoHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **productInfoHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductInfoHeaderValueStatics = __uuidof(IHttpProductInfoHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **productInfoHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **productInfoHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_Parse(This,input,productInfoHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,productInfoHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_TryParse(This,input,productInfoHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,productInfoHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0205 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0205 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0205_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0205_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("24220FBE-EABE-4464-B460-EC010B7C41E2")
                        IHttpProductInfoHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromComment( 
                                /* [in] */ __RPC__in HSTRING productComment,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **productInfoHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromNameWithVersion( 
                                /* [in] */ __RPC__in HSTRING productName,
                                /* [in] */ __RPC__in HSTRING productVersion,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue **productInfoHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductInfoHeaderValueFactory = __uuidof(IHttpProductInfoHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromComment )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING productComment,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **productInfoHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromNameWithVersion )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING productName,
            /* [in] */ __RPC__in HSTRING productVersion,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue **productInfoHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_CreateFromComment(This,productComment,productInfoHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromComment(This,productComment,productInfoHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_CreateFromNameWithVersion(This,productName,productVersion,productInfoHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromNameWithVersion(This,productName,productVersion,productInfoHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0206 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0206 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0206_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0206_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("1B1A8732-4C35-486A-966F-646489198E4D")
                        IHttpProductInfoHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Product( 
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpProductHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Comment( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductInfoHeaderValue = __uuidof(IHttpProductInfoHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Product )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Comment )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_get_Product(This,value)	\
    ( (This)->lpVtbl -> get_Product(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_get_Comment(This,value)	\
    ( (This)->lpVtbl -> get_Comment(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0207 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0207 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0207_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0207_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpProductInfoHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("877DF74A-D69B-44F8-AD4F-453AF9C42ED0")
                        IHttpProductInfoHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpProductInfoHeaderValueCollection = __uuidof(IHttpProductInfoHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0208 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0208 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0208_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0208_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("E8C9357C-8F89-4801-8E75-4C9ABFC3DE71")
                        IHttpContentCodingWithQualityHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingWithQualityHeaderValueStatics = __uuidof(IHttpContentCodingWithQualityHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_Parse(This,input,contentCodingWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,contentCodingWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_TryParse(This,input,contentCodingWithQualityHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,contentCodingWithQualityHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0209 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0209 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0209_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0209_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("C45EEE1A-C553-46FC-ADE2-D75C1D53DF7B")
                        IHttpContentCodingWithQualityHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE CreateFromValue( 
                                /* [in] */ __RPC__in HSTRING contentCoding,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE CreateFromValueWithQuality( 
                                /* [in] */ __RPC__in HSTRING contentCoding,
                                /* [in] */ DOUBLE quality,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingWithQualityHeaderValueFactory = __uuidof(IHttpContentCodingWithQualityHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromValue )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING contentCoding,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *CreateFromValueWithQuality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING contentCoding,
            /* [in] */ DOUBLE quality,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue **contentCodingWithQualityHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_CreateFromValue(This,contentCoding,contentCodingWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromValue(This,contentCoding,contentCodingWithQualityHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_CreateFromValueWithQuality(This,contentCoding,quality,contentCodingWithQualityHeaderValue)	\
    ( (This)->lpVtbl -> CreateFromValueWithQuality(This,contentCoding,quality,contentCodingWithQualityHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0210 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0210 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0210_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0210_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("94531CD5-8B13-4D73-8651-F76B38F88495")
                        IHttpContentCodingWithQualityHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ContentCoding( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Quality( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingWithQualityHeaderValue = __uuidof(IHttpContentCodingWithQualityHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ContentCoding )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Quality )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIReference_1_double **value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_get_ContentCoding(This,value)	\
    ( (This)->lpVtbl -> get_ContentCoding(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_get_Quality(This,value)	\
    ( (This)->lpVtbl -> get_Quality(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0211 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0211 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0211_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0211_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpContentCodingWithQualityHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("7C0D753E-E899-4378-B5C8-412D820711CC")
                        IHttpContentCodingWithQualityHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpContentCodingWithQualityHeaderValueCollection = __uuidof(IHttpContentCodingWithQualityHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0212 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueStatics[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0212 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0212_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0212_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueStatics */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("6AB8892A-1A98-4D32-A906-7470A9875CE5")
                        IHttpTransferCodingHeaderValueStatics : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Parse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **transferCodingHeaderValue) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParse( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **transferCodingHeaderValue,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpTransferCodingHeaderValueStatics = __uuidof(IHttpTransferCodingHeaderValueStatics);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Parse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **transferCodingHeaderValue);
        
        HRESULT ( STDMETHODCALLTYPE *TryParse )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **transferCodingHeaderValue,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStaticsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_Parse(This,input,transferCodingHeaderValue)	\
    ( (This)->lpVtbl -> Parse(This,input,transferCodingHeaderValue) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_TryParse(This,input,transferCodingHeaderValue,succeeded)	\
    ( (This)->lpVtbl -> TryParse(This,input,transferCodingHeaderValue,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0213 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueFactory[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0213 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0213_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0213_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueFactory */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("BB62DFFC-E361-4F08-8E4F-C9E723DE703B")
                        IHttpTransferCodingHeaderValueFactory : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE Create( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__deref_out_opt ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue **transferCodingHeaderValue) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpTransferCodingHeaderValueFactory = __uuidof(IHttpTransferCodingHeaderValueFactory);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *Create )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__deref_out_opt __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue **transferCodingHeaderValue);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_Create(This,input,transferCodingHeaderValue)	\
    ( (This)->lpVtbl -> Create(This,input,transferCodingHeaderValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0214 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0214 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0214_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0214_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValue */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("436F32F9-3DED-42BD-B38A-5496A2511CE6")
                        IHttpTransferCodingHeaderValue : public IInspectable
                        {
                        public:
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
                                /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value) = 0;
                            
                            virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
                                /* [out][retval] */ __RPC__deref_out_opt HSTRING *value) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpTransferCodingHeaderValue = __uuidof(IHttpTransferCodingHeaderValue);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt __FIVector_1_Windows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValue **value);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue * This,
            /* [out][retval] */ __RPC__deref_out_opt HSTRING *value);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_get_Parameters(This,value)	\
    ( (This)->lpVtbl -> get_Parameters(This,value) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0215 */
/* [local] */ 

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__)
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_Web_Http_Headers_IHttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection";
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__) */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0215 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0215_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0215_v0_0_s_ifspec;

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__

/* interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection */
/* [uuid][object] */ 



/* interface ABI::Windows::Web::Http::Headers::IHttpTransferCodingHeaderValueCollection */
/* [uuid][object] */ 


EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    } /* end extern "C" */
    namespace ABI {
        namespace Windows {
            namespace Web {
                namespace Http {
                    namespace Headers {
                        
                        MIDL_INTERFACE("202C8C34-2C03-49B8-9665-73E27CB2FC79")
                        IHttpTransferCodingHeaderValueCollection : public IInspectable
                        {
                        public:
                            virtual HRESULT STDMETHODCALLTYPE ParseAdd( 
                                /* [in] */ __RPC__in HSTRING input) = 0;
                            
                            virtual HRESULT STDMETHODCALLTYPE TryParseAdd( 
                                /* [in] */ __RPC__in HSTRING input,
                                /* [out][retval] */ __RPC__out boolean *succeeded) = 0;
                            
                        };

                        extern const __declspec(selectany) IID & IID_IHttpTransferCodingHeaderValueCollection = __uuidof(IHttpTransferCodingHeaderValueCollection);

                        
                    }  /* end namespace */
                }  /* end namespace */
            }  /* end namespace */
        }  /* end namespace */
    }  /* end namespace */
    extern "C" { 
    
#else 	/* C style interface */

    typedef struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetIids )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
        
        HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);
        
        HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);
        
        HRESULT ( STDMETHODCALLTYPE *ParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input);
        
        HRESULT ( STDMETHODCALLTYPE *TryParseAdd )( 
            __RPC__in __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection * This,
            /* [in] */ __RPC__in HSTRING input,
            /* [out][retval] */ __RPC__out boolean *succeeded);
        
        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_ParseAdd(This,input)	\
    ( (This)->lpVtbl -> ParseAdd(This,input) ) 

#define __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_TryParseAdd(This,input,succeeded)	\
    ( (This)->lpVtbl -> TryParseAdd(This,input,succeeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ____x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection_INTERFACE_DEFINED__ */


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0216 */
/* [local] */ 

#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentHeaderCollection[] = L"Windows.Web.Http.Headers.HttpContentHeaderCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpRequestHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpRequestHeaderCollection[] = L"Windows.Web.Http.Headers.HttpRequestHeaderCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpResponseHeaderCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpResponseHeaderCollection[] = L"Windows.Web.Http.Headers.HttpResponseHeaderCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentDispositionHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentDispositionHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentRangeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentRangeHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentRangeHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCredentialsHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCredentialsHeaderValue[] = L"Windows.Web.Http.Headers.HttpCredentialsHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCacheDirectiveHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMethodHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpMethodHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValueCollection[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpDateOrDeltaHeaderValue[] = L"Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpNameValueHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpNameValueHeaderValue[] = L"Windows.Web.Http.Headers.HttpNameValueHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpChallengeHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpChallengeHeaderValue[] = L"Windows.Web.Http.Headers.HttpChallengeHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpConnectionOptionHeaderValue[] = L"Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpCookiePairHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpCookiePairHeaderValue[] = L"Windows.Web.Http.Headers.HttpCookiePairHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpExpectationHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpExpectationHeaderValue[] = L"Windows.Web.Http.Headers.HttpExpectationHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpLanguageRangeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpMediaTypeWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpProductInfoHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpProductInfoHeaderValue[] = L"Windows.Web.Http.Headers.HttpProductInfoHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpContentCodingWithQualityHeaderValue[] = L"Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue";
#endif
#ifndef RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
#define RUNTIMECLASS_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Windows_Web_Http_Headers_HttpTransferCodingHeaderValue[] = L"Windows.Web.Http.Headers.HttpTransferCodingHeaderValue";
#endif


/* interface __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0216 */
/* [local] */ 



extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0216_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_windows2Eweb2Ehttp2Eheaders_0000_0216_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  HSTRING_UserSize(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

unsigned long             __RPC_USER  HSTRING_UserSize64(     __RPC__in unsigned long *, unsigned long            , __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserMarshal64(  __RPC__in unsigned long *, __RPC__inout_xcount(0) unsigned char *, __RPC__in HSTRING * ); 
unsigned char * __RPC_USER  HSTRING_UserUnmarshal64(__RPC__in unsigned long *, __RPC__in_xcount(0) unsigned char *, __RPC__out HSTRING * ); 
void                      __RPC_USER  HSTRING_UserFree64(     __RPC__in unsigned long *, __RPC__in HSTRING * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


