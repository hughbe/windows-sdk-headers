//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Automation.Peers.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Eui2Examl_h__)")
cpp_quote("#include <Windows.UI.Xaml.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Eautomation2Epeers_h__)")
cpp_quote("#include <Windows.UI.Xaml.Automation.Peers.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Eautomation2Epeers_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                namespace Peers
                {
                    typedef enum AccessibilityView AccessibilityView;

                    typedef enum AutomationLandmarkType AutomationLandmarkType;

                    typedef enum AutomationLiveSetting AutomationLiveSetting;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            runtimeclass UIElement;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                typedef enum AnnotationType AnnotationType;

                typedef enum AutomationTextEditChangeType AutomationTextEditChangeType;

                typedef enum DockPosition DockPosition;

                typedef enum ExpandCollapseState ExpandCollapseState;

                typedef enum RowOrColumnMajor RowOrColumnMajor;

                typedef enum ScrollAmount ScrollAmount;

                typedef enum SupportedTextSelection SupportedTextSelection;

                typedef enum SynchronizedInputType SynchronizedInputType;

                typedef enum ToggleState ToggleState;

                typedef enum WindowInteractionState WindowInteractionState;

                typedef enum WindowVisualState WindowVisualState;

                typedef enum ZoomUnit ZoomUnit;

                typedef enum AutomationActiveEnd AutomationActiveEnd;

                typedef enum AutomationAnimationStyle AutomationAnimationStyle;

                typedef enum AutomationBulletStyle AutomationBulletStyle;

                typedef enum AutomationCaretBidiMode AutomationCaretBidiMode;

                typedef enum AutomationCaretPosition AutomationCaretPosition;

                typedef enum AutomationFlowDirections AutomationFlowDirections;

                typedef enum AutomationOutlineStyles AutomationOutlineStyles;

                typedef enum AutomationStyleId AutomationStyleId;

                typedef enum AutomationTextDecorationLineStyle AutomationTextDecorationLineStyle;

                interface IAnnotationPatternIdentifiers;

                interface IAnnotationPatternIdentifiersStatics;

                interface IAutomationElementIdentifiers;

                interface IAutomationElementIdentifiersStatics;

                interface IAutomationElementIdentifiersStatics2;

                interface IAutomationElementIdentifiersStatics3;

                interface IAutomationElementIdentifiersStatics4;

                interface IAutomationProperties;

                interface IAutomationPropertiesStatics;

                interface IAutomationPropertiesStatics2;

                interface IAutomationPropertiesStatics3;

                interface IAutomationPropertiesStatics4;

                interface IAutomationProperty;

                interface IDockPatternIdentifiers;

                interface IDockPatternIdentifiersStatics;

                interface IDragPatternIdentifiers;

                interface IDragPatternIdentifiersStatics;

                interface IDropTargetPatternIdentifiers;

                interface IDropTargetPatternIdentifiersStatics;

                interface IExpandCollapsePatternIdentifiers;

                interface IExpandCollapsePatternIdentifiersStatics;

                interface IGridItemPatternIdentifiers;

                interface IGridItemPatternIdentifiersStatics;

                interface IGridPatternIdentifiers;

                interface IGridPatternIdentifiersStatics;

                interface IMultipleViewPatternIdentifiers;

                interface IMultipleViewPatternIdentifiersStatics;

                interface IRangeValuePatternIdentifiers;

                interface IRangeValuePatternIdentifiersStatics;

                interface IScrollPatternIdentifiers;

                interface IScrollPatternIdentifiersStatics;

                interface ISelectionItemPatternIdentifiers;

                interface ISelectionItemPatternIdentifiersStatics;

                interface ISelectionPatternIdentifiers;

                interface ISelectionPatternIdentifiersStatics;

                interface ISpreadsheetItemPatternIdentifiers;

                interface ISpreadsheetItemPatternIdentifiersStatics;

                interface IStylesPatternIdentifiers;

                interface IStylesPatternIdentifiersStatics;

                interface ITableItemPatternIdentifiers;

                interface ITableItemPatternIdentifiersStatics;

                interface ITablePatternIdentifiers;

                interface ITablePatternIdentifiersStatics;

                interface ITogglePatternIdentifiers;

                interface ITogglePatternIdentifiersStatics;

                interface ITransformPattern2Identifiers;

                interface ITransformPattern2IdentifiersStatics;

                interface ITransformPatternIdentifiers;

                interface ITransformPatternIdentifiersStatics;

                interface IValuePatternIdentifiers;

                interface IValuePatternIdentifiersStatics;

                interface IWindowPatternIdentifiers;

                interface IWindowPatternIdentifiersStatics;

                interface IAutomationAnnotation;

                interface IAutomationAnnotationStatics;

                interface IAutomationAnnotationFactory;

                runtimeclass AutomationProperty;

                runtimeclass AnnotationPatternIdentifiers;

                runtimeclass AutomationElementIdentifiers;

                runtimeclass AutomationProperties;

                runtimeclass DockPatternIdentifiers;

                runtimeclass DragPatternIdentifiers;

                runtimeclass DropTargetPatternIdentifiers;

                runtimeclass ExpandCollapsePatternIdentifiers;

                runtimeclass GridItemPatternIdentifiers;

                runtimeclass GridPatternIdentifiers;

                runtimeclass MultipleViewPatternIdentifiers;

                runtimeclass RangeValuePatternIdentifiers;

                runtimeclass ScrollPatternIdentifiers;

                runtimeclass SelectionItemPatternIdentifiers;

                runtimeclass SelectionPatternIdentifiers;

                runtimeclass SpreadsheetItemPatternIdentifiers;

                runtimeclass StylesPatternIdentifiers;

                runtimeclass TableItemPatternIdentifiers;

                runtimeclass TablePatternIdentifiers;

                runtimeclass TogglePatternIdentifiers;

                runtimeclass TransformPattern2Identifiers;

                runtimeclass TransformPatternIdentifiers;

                runtimeclass ValuePatternIdentifiers;

                runtimeclass WindowPatternIdentifiers;

                runtimeclass AutomationAnnotation;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Automation.AutomationAnnotation*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                [version(0x06030000)]
                enum AnnotationType
                {
                    Unknown       = 60000,
                    SpellingError = 60001,
                    GrammarError  = 60002,
                    Comment       = 60003,
                    FormulaError  = 60004,
                    TrackChanges  = 60005,
                    Header        = 60006,
                    Footer        = 60007,
                    Highlighted   = 60008,
                    [version(0x0A000000)]
                    Endnote       = 60009,
                    [version(0x0A000000)]
                    Footnote      = 60010
                };

                [version(0x0A000000)]
                enum AutomationTextEditChangeType
                {
                    None                 = 0,
                    AutoCorrect          = 1,
                    Composition          = 2,
                    CompositionFinalized = 3
                };

                [version(0x06020000)]
                enum DockPosition
                {
                    Top    = 0,
                    Left   = 1,
                    Bottom = 2,
                    Right  = 3,
                    Fill   = 4,
                    None   = 5
                };

                [version(0x06020000)]
                enum ExpandCollapseState
                {
                    Collapsed         = 0,
                    Expanded          = 1,
                    PartiallyExpanded = 2,
                    LeafNode          = 3
                };

                [version(0x06020000)]
                enum RowOrColumnMajor
                {
                    RowMajor      = 0,
                    ColumnMajor   = 1,
                    Indeterminate = 2
                };

                [version(0x06020000)]
                enum ScrollAmount
                {
                    LargeDecrement = 0,
                    SmallDecrement = 1,
                    NoAmount       = 2,
                    LargeIncrement = 3,
                    SmallIncrement = 4
                };

                [version(0x06020000)]
                enum SupportedTextSelection
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [version(0x06030000)]
                enum SynchronizedInputType
                {
                    KeyUp          = 1,
                    KeyDown        = 2,
                    LeftMouseUp    = 4,
                    LeftMouseDown  = 8,
                    RightMouseUp   = 16,
                    RightMouseDown = 32
                };

                [version(0x06020000)]
                enum ToggleState
                {
                    Off           = 0,
                    On            = 1,
                    Indeterminate = 2
                };

                [version(0x06020000)]
                enum WindowInteractionState
                {
                    Running                 = 0,
                    Closing                 = 1,
                    ReadyForUserInteraction = 2,
                    BlockedByModalWindow    = 3,
                    NotResponding           = 4
                };

                [version(0x06020000)]
                enum WindowVisualState
                {
                    Normal    = 0,
                    Maximized = 1,
                    Minimized = 2
                };

                [version(0x06030000)]
                enum ZoomUnit
                {
                    NoAmount       = 0,
                    LargeDecrement = 1,
                    SmallDecrement = 2,
                    LargeIncrement = 3,
                    SmallIncrement = 4
                };

                [version(0x0A000000)]
                enum AutomationActiveEnd
                {
                    None  = 0,
                    Start = 1,
                    End   = 2
                };

                [version(0x0A000000)]
                enum AutomationAnimationStyle
                {
                    None               = 0,
                    LasVegasLights     = 1,
                    BlinkingBackground = 2,
                    SparkleText        = 3,
                    MarchingBlackAnts  = 4,
                    MarchingRedAnts    = 5,
                    Shimmer            = 6,
                    Other              = 7
                };

                [version(0x0A000000)]
                enum AutomationBulletStyle
                {
                    None               = 0,
                    HollowRoundBullet  = 1,
                    FilledRoundBullet  = 2,
                    HollowSquareBullet = 3,
                    FilledSquareBullet = 4,
                    DashBullet         = 5,
                    Other              = 6
                };

                [version(0x0A000000)]
                enum AutomationCaretBidiMode
                {
                    LTR = 0,
                    RTL = 1
                };

                [version(0x0A000000)]
                enum AutomationCaretPosition
                {
                    Unknown         = 0,
                    EndOfLine       = 1,
                    BeginningOfLine = 2
                };

                [version(0x0A000000)]
                enum AutomationFlowDirections
                {
                    Default     = 0,
                    RightToLeft = 1,
                    BottomToTop = 2,
                    Vertical    = 3
                };

                [version(0x0A000000)]
                enum AutomationOutlineStyles
                {
                    None     = 0,
                    Outline  = 1,
                    Shadow   = 2,
                    Engraved = 3,
                    Embossed = 4
                };

                [version(0x0A000000)]
                enum AutomationStyleId
                {
                    Heading1     = 70001,
                    Heading2     = 70002,
                    Heading3     = 70003,
                    Heading4     = 70004,
                    Heading5     = 70005,
                    Heading6     = 70006,
                    Heading7     = 70007,
                    Heading8     = 70008,
                    Heading9     = 70009,
                    Title        = 70010,
                    Subtitle     = 70011,
                    Normal       = 70012,
                    Emphasis     = 70013,
                    Quote        = 70014,
                    BulletedList = 70015
                };

                [version(0x0A000000)]
                enum AutomationTextDecorationLineStyle
                {
                    None            = 0,
                    Single          = 1,
                    WordsOnly       = 2,
                    Double          = 3,
                    Dot             = 4,
                    Dash            = 5,
                    DashDot         = 6,
                    DashDotDot      = 7,
                    Wavy            = 8,
                    ThickSingle     = 9,
                    DoubleWavy      = 10,
                    ThickWavy       = 11,
                    LongDash        = 12,
                    ThickDash       = 13,
                    ThickDashDot    = 14,
                    ThickDashDotDot = 15,
                    ThickDot        = 16,
                    ThickLongDash   = 17,
                    Other           = 18
                };

                [exclusiveto(Windows.UI.Xaml.Automation.AnnotationPatternIdentifiers)]
                [uuid(D475A0C1-48B2-4E40-A6CF-3DC4B638C0DE)]
                [version(0x06020000)]
                interface IAnnotationPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AnnotationPatternIdentifiers)]
                [uuid(E0E3A35D-D167-46DC-95AB-330AF61AEBB5)]
                [version(0x06020000)]
                interface IAnnotationPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT AnnotationTypeIdProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AnnotationTypeNameProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AuthorProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DateTimeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT TargetProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(E68A63CF-4345-4E2D-8A6A-49CCE1FA2DCC)]
                [version(0x06020000)]
                interface IAutomationElementIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(4549399F-8340-4D67-B9BF-8C2AC6A0773A)]
                [version(0x06020000)]
                interface IAutomationElementIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT AcceleratorKeyProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AccessKeyProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AutomationIdProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT BoundingRectangleProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ClassNameProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ClickablePointProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ControlTypeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HasKeyboardFocusProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HelpTextProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsContentElementProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsControlElementProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsEnabledProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsKeyboardFocusableProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsOffscreenProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsPasswordProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsRequiredForFormProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ItemStatusProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ItemTypeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LabeledByProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LocalizedControlTypeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT NameProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LiveSettingProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(B5CBB1E2-D55F-46A9-9EDA-1A4742515DC3)]
                [version(0x06030000)]
                interface IAutomationElementIdentifiersStatics2 : IInspectable
                {
                    [propget] HRESULT ControlledPeersProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(0F5CBEBD-B3EB-4083-ADC7-0C2F39BB3543)]
                [version(0x0A000000)]
                interface IAutomationElementIdentifiersStatics3 : IInspectable
                {
                    [propget] HRESULT PositionInSetProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SizeOfSetProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LevelProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AnnotationsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(5AF51F75-5913-4D78-B330-A6F50B73ED9B)]
                [version(0x0A000001)]
                interface IAutomationElementIdentifiersStatics4 : IInspectable
                {
                    [propget] HRESULT LandmarkTypeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LocalizedLandmarkTypeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperties)]
                [uuid(68D7232C-E622-48E9-AF0B-1FFA33CC5CBA)]
                [version(0x06020000)]
                interface IAutomationProperties : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperties)]
                [uuid(B618FD7B-32D0-4970-9C42-7C039AC7BE78)]
                [version(0x06020000)]
                interface IAutomationPropertiesStatics : IInspectable
                {
                    [propget] HRESULT AcceleratorKeyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAcceleratorKey([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetAcceleratorKey([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT AccessKeyProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAccessKey([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetAccessKey([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT AutomationIdProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAutomationId([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetAutomationId([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT HelpTextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHelpText([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetHelpText([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT IsRequiredForFormProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsRequiredForForm([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] boolean* value);
                    HRESULT SetIsRequiredForForm([in] Windows.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT ItemStatusProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemStatus([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetItemStatus([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT ItemTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemType([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetItemType([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT LabeledByProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLabeledBy([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.UIElement** value);
                    HRESULT SetLabeledBy([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.UIElement* value);
                    [propget] HRESULT NameProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetName([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetName([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT LiveSettingProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLiveSetting([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting* value);
                    HRESULT SetLiveSetting([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperties)]
                [uuid(3976547F-7089-4801-8F1D-AAB78090D1A0)]
                [version(0x06030000)]
                interface IAutomationPropertiesStatics2 : IInspectable
                {
                    [propget] HRESULT AccessibilityViewProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAccessibilityView([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Automation.Peers.AccessibilityView* value);
                    HRESULT SetAccessibilityView([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Automation.Peers.AccessibilityView value);
                    [propget] HRESULT ControlledPeersProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetControlledPeers([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement*>** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperties)]
                [uuid(7B75D735-5CB1-42AD-9B57-5FABA8C1867F)]
                [version(0x0A000000)]
                interface IAutomationPropertiesStatics3 : IInspectable
                {
                    [propget] HRESULT PositionInSetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPositionInSet([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetPositionInSet([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT SizeOfSetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetSizeOfSet([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetSizeOfSet([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT LevelProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLevel([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] INT32* value);
                    HRESULT SetLevel([in] Windows.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT AnnotationsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAnnotations([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Automation.AutomationAnnotation*>** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperties)]
                [uuid(F7D62655-311A-4B7C-A131-524E89CD3CF9)]
                [version(0x0A000001)]
                interface IAutomationPropertiesStatics4 : IInspectable
                {
                    [propget] HRESULT LandmarkTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLandmarkType([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType* value);
                    HRESULT SetLandmarkType([in] Windows.UI.Xaml.DependencyObject* element, [in] Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType value);
                    [propget] HRESULT LocalizedLandmarkTypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLocalizedLandmarkType([in] Windows.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* value);
                    HRESULT SetLocalizedLandmarkType([in] Windows.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationProperty)]
                [uuid(B627195B-3227-4E16-9534-DDECE30DDB46)]
                [version(0x06020000)]
                interface IAutomationProperty : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DockPatternIdentifiers)]
                [uuid(CCD7F4E6-E4F9-47FF-BDE7-378B11F78E09)]
                [version(0x06020000)]
                interface IDockPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DockPatternIdentifiers)]
                [uuid(2B87245C-ED80-4FE5-8EB4-708A39C841E5)]
                [version(0x06020000)]
                interface IDockPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DockPositionProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DragPatternIdentifiers)]
                [uuid(6266E985-4D07-4E80-82EB-8F96690A1A0C)]
                [version(0x06020000)]
                interface IDragPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DragPatternIdentifiers)]
                [uuid(2A05379D-1755-4082-9D90-46F1411D7986)]
                [version(0x06020000)]
                interface IDragPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DropEffectProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DropEffectsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT GrabbedItemsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsGrabbedProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DropTargetPatternIdentifiers)]
                [uuid(11865133-A6FE-4634-BD18-0EF612B7B208)]
                [version(0x06020000)]
                interface IDropTargetPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.DropTargetPatternIdentifiers)]
                [uuid(1B693304-89FB-4B0A-9452-CA2C66AAF9F3)]
                [version(0x06020000)]
                interface IDropTargetPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DropTargetEffectProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DropTargetEffectsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers)]
                [uuid(B006BAC0-751B-4D55-92CB-613EC1BDF5D0)]
                [version(0x06020000)]
                interface IExpandCollapsePatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers)]
                [uuid(D7816FD4-6EE0-4F38-8E14-56EF21ADACFD)]
                [version(0x06020000)]
                interface IExpandCollapsePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ExpandCollapseStateProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.GridItemPatternIdentifiers)]
                [uuid(757744F1-3285-4FB1-803B-2545BD431599)]
                [version(0x06020000)]
                interface IGridItemPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.GridItemPatternIdentifiers)]
                [uuid(217D2402-5E46-4D61-8794-B8EE8E774714)]
                [version(0x06020000)]
                interface IGridItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ContainingGridProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.GridPatternIdentifiers)]
                [uuid(C902980F-96C5-450C-9044-7E52C24F9E94)]
                [version(0x06020000)]
                interface IGridPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.GridPatternIdentifiers)]
                [uuid(7BC452F3-A181-4137-8DE9-1F9B1A8320ED)]
                [version(0x06020000)]
                interface IGridPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnCountProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowCountProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.MultipleViewPatternIdentifiers)]
                [uuid(5D5CD3B8-1E12-488B-B0EA-5E6CB89816E1)]
                [version(0x06020000)]
                interface IMultipleViewPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.MultipleViewPatternIdentifiers)]
                [uuid(A9CFA66F-6B84-4D71-9E48-D764D3BCDA8E)]
                [version(0x06020000)]
                interface IMultipleViewPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CurrentViewProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SupportedViewsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.RangeValuePatternIdentifiers)]
                [uuid(F8760F45-33C9-467D-BC9E-D1515263ACE1)]
                [version(0x06020000)]
                interface IRangeValuePatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.RangeValuePatternIdentifiers)]
                [uuid(CE23450F-1C27-457F-B815-7A5E46863DBB)]
                [version(0x06020000)]
                interface IRangeValuePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LargeChangeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MaximumProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MinimumProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SmallChangeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ScrollPatternIdentifiers)]
                [uuid(366B1003-425C-4951-AE83-D521E73BC696)]
                [version(0x06020000)]
                interface IScrollPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ScrollPatternIdentifiers)]
                [uuid(4BF8E0A1-FB7F-4FA4-83B3-CFAEB103A685)]
                [version(0x06020000)]
                interface IScrollPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT HorizontallyScrollableProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HorizontalScrollPercentProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HorizontalViewSizeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT NoScroll([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticallyScrollableProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT VerticalScrollPercentProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT VerticalViewSizeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SelectionItemPatternIdentifiers)]
                [uuid(2DAFA41A-3EF8-4BB5-A02B-3EE1B2274740)]
                [version(0x06020000)]
                interface ISelectionItemPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SelectionItemPatternIdentifiers)]
                [uuid(A918D163-487E-4E3E-9F86-7B44ACBE27CE)]
                [version(0x06020000)]
                interface ISelectionItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsSelectedProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SelectionContainerProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SelectionPatternIdentifiers)]
                [uuid(4AA66FB0-E3F7-475F-B78D-F8A83BB730C4)]
                [version(0x06020000)]
                interface ISelectionPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SelectionPatternIdentifiers)]
                [uuid(93035B4C-6B50-40A1-B23F-5C78DDBD479A)]
                [version(0x06020000)]
                interface ISelectionPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanSelectMultipleProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsSelectionRequiredProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SelectionProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers)]
                [uuid(84347E19-CA4B-46A2-A794-C87928A3B1AB)]
                [version(0x06030000)]
                interface ISpreadsheetItemPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers)]
                [uuid(43658779-5380-4F12-B468-B4F368AD4499)]
                [version(0x06030000)]
                interface ISpreadsheetItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT FormulaProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.StylesPatternIdentifiers)]
                [uuid(B0E4E201-E89D-436B-8287-4F7903466879)]
                [version(0x06030000)]
                interface IStylesPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.StylesPatternIdentifiers)]
                [uuid(528A457A-BC3C-4D48-94AF-1F68703CA296)]
                [version(0x06030000)]
                interface IStylesPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ExtendedPropertiesProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillColorProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillPatternColorProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillPatternStyleProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ShapeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT StyleIdProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT StyleNameProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TableItemPatternIdentifiers)]
                [uuid(C326E5AD-8077-4C64-98E4-E83BCF1B4389)]
                [version(0x06020000)]
                interface ITableItemPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TableItemPatternIdentifiers)]
                [uuid(24C4B923-E9A2-4DE9-B2A4-A8B22D0BE362)]
                [version(0x06020000)]
                interface ITableItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnHeaderItemsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowHeaderItemsProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TablePatternIdentifiers)]
                [uuid(38D104FE-0D0C-412A-BF8D-51EDE683BAF5)]
                [version(0x06020000)]
                interface ITablePatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TablePatternIdentifiers)]
                [uuid(75073D25-32C9-4903-AECF-DC3504CBD244)]
                [version(0x06020000)]
                interface ITablePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnHeadersProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowHeadersProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowOrColumnMajorProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TogglePatternIdentifiers)]
                [uuid(7E191F6B-34D4-4AE7-83AC-29F88882D985)]
                [version(0x06020000)]
                interface ITogglePatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TogglePatternIdentifiers)]
                [uuid(C7F75544-14A5-4F2F-92FC-760524DE06EA)]
                [version(0x06020000)]
                interface ITogglePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ToggleStateProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TransformPattern2Identifiers)]
                [uuid(08AAA03D-DEA7-402F-8097-9A2783D60E5D)]
                [version(0x06030000)]
                interface ITransformPattern2Identifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TransformPattern2Identifiers)]
                [uuid(78963644-11F0-467C-A72B-5DAC41C1F6FE)]
                [version(0x06030000)]
                interface ITransformPattern2IdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanZoomProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ZoomLevelProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MaxZoomProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MinZoomProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TransformPatternIdentifiers)]
                [uuid(E4115B8C-C3C8-4A37-B994-2709A7811665)]
                [version(0x06020000)]
                interface ITransformPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.TransformPatternIdentifiers)]
                [uuid(4570EDAB-D705-40C4-A1DC-E9ACFCEF85F6)]
                [version(0x06020000)]
                interface ITransformPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanMoveProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanResizeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanRotateProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ValuePatternIdentifiers)]
                [uuid(425BF64C-5333-4E41-B470-2BAD14ECD085)]
                [version(0x06020000)]
                interface IValuePatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.ValuePatternIdentifiers)]
                [uuid(C247E8F7-ADCC-440F-B123-33788A40525A)]
                [version(0x06020000)]
                interface IValuePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.WindowPatternIdentifiers)]
                [uuid(39F78BB4-7032-41E2-B79E-27B74A8628DE)]
                [version(0x06020000)]
                interface IWindowPatternIdentifiers : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Automation.WindowPatternIdentifiers)]
                [uuid(07D0AD06-6302-4D29-878B-19DA03FC228D)]
                [version(0x06020000)]
                interface IWindowPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanMaximizeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanMinimizeProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsModalProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsTopmostProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT WindowInteractionStateProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT WindowVisualStateProperty([out] [retval] Windows.UI.Xaml.Automation.AutomationProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(FB3C30CA-03D8-4618-91BF-E4D84F4AF318)]
                [version(0x0A000000)]
                interface IAutomationAnnotation : IInspectable
                {
                    [propget] HRESULT Type([out] [retval] Windows.UI.Xaml.Automation.AnnotationType* value);
                    [propput] HRESULT Type([in] Windows.UI.Xaml.Automation.AnnotationType value);
                    [propget] HRESULT Element([out] [retval] Windows.UI.Xaml.UIElement** value);
                    [propput] HRESULT Element([in] Windows.UI.Xaml.UIElement* value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(E503EAB7-4EE5-48CB-B5B8-BBCD46C9D1DA)]
                [version(0x0A000000)]
                interface IAutomationAnnotationStatics : IInspectable
                {
                    [propget] HRESULT TypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ElementProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(4906FA52-DDC0-4E69-B76B-019D928D822F)]
                [version(0x0A000000)]
                interface IAutomationAnnotationFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Windows.UI.Xaml.Automation.AnnotationType type, [out] [retval] Windows.UI.Xaml.Automation.AutomationAnnotation** instance);
                    HRESULT CreateWithElementParameter([in] Windows.UI.Xaml.Automation.AnnotationType type, [in] Windows.UI.Xaml.UIElement* element, [out] [retval] Windows.UI.Xaml.Automation.AutomationAnnotation** instance);
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass AutomationProperty
                {
                    [default] interface Windows.UI.Xaml.Automation.IAutomationProperty;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IAnnotationPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass AnnotationPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IAnnotationPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics4, 0x0A000001)]
                [static(Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics2, 0x06030000)]
                [static(Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics3, 0x0A000000)]
                [static(Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass AutomationElementIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IAutomationElementIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IAutomationPropertiesStatics4, 0x0A000001)]
                [static(Windows.UI.Xaml.Automation.IAutomationPropertiesStatics3, 0x0A000000)]
                [static(Windows.UI.Xaml.Automation.IAutomationPropertiesStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass AutomationProperties
                {
                    [default] interface Windows.UI.Xaml.Automation.IAutomationProperties;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IDockPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DockPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IDockPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IDragPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DragPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IDragPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IDropTargetPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DropTargetPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IDropTargetPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ExpandCollapsePatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IExpandCollapsePatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IGridItemPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GridItemPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IGridItemPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IGridPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GridPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IGridPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass MultipleViewPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IMultipleViewPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IRangeValuePatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RangeValuePatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IRangeValuePatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IScrollPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ScrollPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IScrollPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SelectionItemPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ISelectionItemPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ISelectionPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SelectionPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ISelectionPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass SpreadsheetItemPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IStylesPatternIdentifiersStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass StylesPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IStylesPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ITableItemPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TableItemPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ITableItemPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ITablePatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TablePatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ITablePatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ITogglePatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TogglePatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ITogglePatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ITransformPattern2IdentifiersStatics, 0x06030000)]
                [threading(both)]
                [version(0x06030000)]
                runtimeclass TransformPattern2Identifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ITransformPattern2Identifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.ITransformPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TransformPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.ITransformPatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IValuePatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ValuePatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IValuePatternIdentifiers;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IWindowPatternIdentifiersStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass WindowPatternIdentifiers
                {
                    [default] interface Windows.UI.Xaml.Automation.IWindowPatternIdentifiers;
                }

                [activatable(0x0A000000)]
                [activatable(Windows.UI.Xaml.Automation.IAutomationAnnotationFactory, 0x0A000000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Automation.IAutomationAnnotationStatics, 0x0A000000)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass AutomationAnnotation : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Automation.IAutomationAnnotation;
                }
            }
        }
    }
}
