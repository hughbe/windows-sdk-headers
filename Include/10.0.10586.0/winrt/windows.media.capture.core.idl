//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Media.Capture.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#include <Windows.Media.Capture.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Ecapture_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            runtimeclass CapturedFrame;

            runtimeclass CapturedFrameControlValues;
        }
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            namespace Core
            {
                interface IVariablePhotoCapturedEventArgs;

                interface IVariablePhotoSequenceCapture;

                interface IVariablePhotoSequenceCapture2;

                runtimeclass VariablePhotoSequenceCapture;

                runtimeclass VariablePhotoCapturedEventArgs;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            namespace Core
            {
                declare
                {
                    interface Windows.Foundation.IAsyncOperation<Windows.Media.Capture.Core.VariablePhotoSequenceCapture*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.Media.Capture.Core.VariablePhotoSequenceCapture*, IInspectable*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.Media.Capture.Core.VariablePhotoSequenceCapture*, Windows.Media.Capture.Core.VariablePhotoCapturedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Media
    {
        namespace Capture
        {
            namespace Core
            {
                [exclusiveto(Windows.Media.Capture.Core.VariablePhotoCapturedEventArgs)]
                [uuid(D1EB4C5C-1B53-4E4A-8B5C-DB7887AC949B)]
                [version(0x0A000000)]
                interface IVariablePhotoCapturedEventArgs : IInspectable
                {
                    [propget] HRESULT Frame([out] [retval] Windows.Media.Capture.CapturedFrame** value);
                    [propget] HRESULT CaptureTimeOffset([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propget] HRESULT UsedFrameControllerIndex([out] [retval] Windows.Foundation.IReference<UINT32>** value);
                    [propget] HRESULT CapturedFrameControlValues([out] [retval] Windows.Media.Capture.CapturedFrameControlValues** value);
                }

                [exclusiveto(Windows.Media.Capture.Core.VariablePhotoSequenceCapture)]
                [uuid(D0112D1D-031E-4041-A6D6-BD742476A8EE)]
                [version(0x0A000000)]
                interface IVariablePhotoSequenceCapture : IInspectable
                {
                    HRESULT StartAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT StopAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                    HRESULT FinishAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                    [eventadd] HRESULT PhotoCaptured([in] Windows.Foundation.TypedEventHandler<Windows.Media.Capture.Core.VariablePhotoSequenceCapture*, Windows.Media.Capture.Core.VariablePhotoCapturedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PhotoCaptured([in] EventRegistrationToken token);
                    [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Media.Capture.Core.VariablePhotoSequenceCapture*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Stopped([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.Media.Capture.Core.VariablePhotoSequenceCapture)]
                [uuid(FE2C62BC-50B0-43E3-917C-E3B92798942F)]
                [version(0x0A000000)]
                interface IVariablePhotoSequenceCapture2 : IInspectable
                {
                    HRESULT UpdateSettingsAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                }

                [marshaling_behavior(standard)]
                [threading(mta)]
                [version(0x0A000000)]
                runtimeclass VariablePhotoSequenceCapture
                {
                    [default] interface Windows.Media.Capture.Core.IVariablePhotoSequenceCapture;
                    [version(0x0A000000)] interface Windows.Media.Capture.Core.IVariablePhotoSequenceCapture2;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass VariablePhotoCapturedEventArgs
                {
                    [default] interface Windows.Media.Capture.Core.IVariablePhotoCapturedEventArgs;
                }
            }
        }
    }
}
