//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Globalization
    {
        namespace NumberFormatting
        {
            typedef enum RoundingAlgorithm RoundingAlgorithm;

            typedef enum CurrencyFormatterMode CurrencyFormatterMode;

            interface INumberRounder;

            interface ISignificantDigitsNumberRounder;

            interface IIncrementNumberRounder;

            interface INumberFormatter;

            interface INumberFormatter2;

            interface INumberParser;

            interface INumberFormatterOptions;

            interface ISignificantDigitsOption;

            interface INumberRounderOption;

            interface ISignedZeroOption;

            interface IDecimalFormatterFactory;

            interface IPercentFormatterFactory;

            interface IPermilleFormatterFactory;

            interface ICurrencyFormatterFactory;

            interface ICurrencyFormatter;

            interface ICurrencyFormatter2;

            interface INumeralSystemTranslatorFactory;

            interface INumeralSystemTranslator;

            runtimeclass SignificantDigitsNumberRounder;

            runtimeclass IncrementNumberRounder;

            runtimeclass DecimalFormatter;

            runtimeclass PercentFormatter;

            runtimeclass PermilleFormatter;

            runtimeclass CurrencyFormatter;

            runtimeclass NumeralSystemTranslator;
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace Globalization
    {
        namespace NumberFormatting
        {
            [version(0x06030000)]
            enum RoundingAlgorithm
            {
                None                  = 0,
                RoundDown             = 1,
                RoundUp               = 2,
                RoundTowardsZero      = 3,
                RoundAwayFromZero     = 4,
                RoundHalfDown         = 5,
                RoundHalfUp           = 6,
                RoundHalfTowardsZero  = 7,
                RoundHalfAwayFromZero = 8,
                RoundHalfToEven       = 9,
                RoundHalfToOdd        = 10
            };

            [version(0x06030000)]
            enum CurrencyFormatterMode
            {
                UseSymbol       = 0,
                UseCurrencyCode = 1
            };

            [uuid(5473C375-38ED-4631-B80C-EF34FC48B7F5)]
            [version(0x06030000)]
            interface INumberRounder : IInspectable
            {
                HRESULT RoundInt32([in] INT32 value, [out] [retval] INT32* result);
                HRESULT RoundUInt32([in] UINT32 value, [out] [retval] UINT32* result);
                HRESULT RoundInt64([in] INT64 value, [out] [retval] INT64* result);
                HRESULT RoundUInt64([in] UINT64 value, [out] [retval] UINT64* result);
                HRESULT RoundSingle([in] FLOAT value, [out] [retval] FLOAT* result);
                HRESULT RoundDouble([in] DOUBLE value, [out] [retval] DOUBLE* result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.SignificantDigitsNumberRounder)]
            [uuid(F5941BCA-6646-4913-8C76-1B191FF94DFD)]
            [version(0x06030000)]
            interface ISignificantDigitsNumberRounder : IInspectable
            {
                [propget] HRESULT RoundingAlgorithm([out] [retval] Windows.Globalization.NumberFormatting.RoundingAlgorithm* value);
                [propput] HRESULT RoundingAlgorithm([in] Windows.Globalization.NumberFormatting.RoundingAlgorithm value);
                [propget] HRESULT SignificantDigits([out] [retval] UINT32* value);
                [propput] HRESULT SignificantDigits([in] UINT32 value);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.IncrementNumberRounder)]
            [uuid(70A64FF8-66AB-4155-9DA1-739E46764543)]
            [version(0x06030000)]
            interface IIncrementNumberRounder : IInspectable
            {
                [propget] HRESULT RoundingAlgorithm([out] [retval] Windows.Globalization.NumberFormatting.RoundingAlgorithm* value);
                [propput] HRESULT RoundingAlgorithm([in] Windows.Globalization.NumberFormatting.RoundingAlgorithm value);
                [propget] HRESULT Increment([out] [retval] DOUBLE* value);
                [propput] HRESULT Increment([in] DOUBLE value);
            }

            [uuid(A5007C49-7676-4DB7-8631-1B6FF265CAA9)]
            [version(0x06020000)]
            interface INumberFormatter : IInspectable
            {
                [overload("Format")] HRESULT FormatInt([in] INT64 value, [out] [retval] HSTRING* result);
                [overload("Format")] HRESULT FormatUInt([in] UINT64 value, [out] [retval] HSTRING* result);
                [default_overload] [overload("Format")] HRESULT FormatDouble([in] DOUBLE value, [out] [retval] HSTRING* result);
            }

            [uuid(D4A8C1F0-80D0-4B0D-A89E-882C1E8F8310)]
            [version(0x06020000)]
            interface INumberFormatter2 : IInspectable
            {
                HRESULT FormatInt([in] INT64 value, [out] [retval] HSTRING* result);
                HRESULT FormatUInt([in] UINT64 value, [out] [retval] HSTRING* result);
                HRESULT FormatDouble([in] DOUBLE value, [out] [retval] HSTRING* result);
            }

            [uuid(E6659412-4A13-4A53-83A1-392FBE4CFF9F)]
            [version(0x06020000)]
            interface INumberParser : IInspectable
            {
                HRESULT ParseInt([in] HSTRING text, [out] [retval] Windows.Foundation.IReference<INT64>** result);
                HRESULT ParseUInt([in] HSTRING text, [out] [retval] Windows.Foundation.IReference<UINT64>** result);
                HRESULT ParseDouble([in] HSTRING text, [out] [retval] Windows.Foundation.IReference<DOUBLE>** result);
            }

            [uuid(80332D21-AEE1-4A39-BAA2-07ED8C96DAF6)]
            [version(0x06020000)]
            interface INumberFormatterOptions : IInspectable
            {
                [propget] HRESULT Languages([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT GeographicRegion([out] [retval] HSTRING* value);
                [propget] HRESULT IntegerDigits([out] [retval] INT32* value);
                [propput] HRESULT IntegerDigits([in] INT32 value);
                [propget] HRESULT FractionDigits([out] [retval] INT32* value);
                [propput] HRESULT FractionDigits([in] INT32 value);
                [propget] HRESULT IsGrouped([out] [retval] boolean* value);
                [propput] HRESULT IsGrouped([in] boolean value);
                [propget] HRESULT IsDecimalPointAlwaysDisplayed([out] [retval] boolean* value);
                [propput] HRESULT IsDecimalPointAlwaysDisplayed([in] boolean value);
                [propget] HRESULT NumeralSystem([out] [retval] HSTRING* value);
                [propput] HRESULT NumeralSystem([in] HSTRING value);
                [propget] HRESULT ResolvedLanguage([out] [retval] HSTRING* value);
                [propget] HRESULT ResolvedGeographicRegion([out] [retval] HSTRING* value);
            }

            [uuid(1D4DFCDD-2D43-4EE8-BBF1-C1B26A711A58)]
            [version(0x06030000)]
            interface ISignificantDigitsOption : IInspectable
            {
                [propget] HRESULT SignificantDigits([out] [retval] INT32* value);
                [propput] HRESULT SignificantDigits([in] INT32 value);
            }

            [uuid(3B088433-646F-4EFE-8D48-66EB2E49E736)]
            [version(0x06030000)]
            interface INumberRounderOption : IInspectable
            {
                [propget] HRESULT NumberRounder([out] [retval] Windows.Globalization.NumberFormatting.INumberRounder** value);
                [propput] HRESULT NumberRounder([in] Windows.Globalization.NumberFormatting.INumberRounder* value);
            }

            [uuid(FD1CDD31-0A3C-49C4-A642-96A1564F4F30)]
            [version(0x06030000)]
            interface ISignedZeroOption : IInspectable
            {
                [propget] HRESULT IsZeroSigned([out] [retval] boolean* value);
                [propput] HRESULT IsZeroSigned([in] boolean value);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.DecimalFormatter)]
            [uuid(0D018C9A-E393-46B8-B830-7A69C8F89FBB)]
            [version(0x06020000)]
            interface IDecimalFormatterFactory : IInspectable
            {
                HRESULT CreateDecimalFormatter([in] Windows.Foundation.Collections.IIterable<HSTRING>* languages, [in] HSTRING geographicRegion, [out] [retval] Windows.Globalization.NumberFormatting.DecimalFormatter** result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.PercentFormatter)]
            [uuid(B7828AEF-FED4-4018-A6E2-E09961E03765)]
            [version(0x06020000)]
            interface IPercentFormatterFactory : IInspectable
            {
                HRESULT CreatePercentFormatter([in] Windows.Foundation.Collections.IIterable<HSTRING>* languages, [in] HSTRING geographicRegion, [out] [retval] Windows.Globalization.NumberFormatting.PercentFormatter** result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.PermilleFormatter)]
            [uuid(2B37B4AC-E638-4ED5-A998-62F6B06A49AE)]
            [version(0x06020000)]
            interface IPermilleFormatterFactory : IInspectable
            {
                HRESULT CreatePermilleFormatter([in] Windows.Foundation.Collections.IIterable<HSTRING>* languages, [in] HSTRING geographicRegion, [out] [retval] Windows.Globalization.NumberFormatting.PermilleFormatter** result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.CurrencyFormatter)]
            [uuid(86C7537E-B938-4AA2-84B0-2C33DC5B1450)]
            [version(0x06020000)]
            interface ICurrencyFormatterFactory : IInspectable
            {
                HRESULT CreateCurrencyFormatterCode([in] HSTRING currencyCode, [out] [retval] Windows.Globalization.NumberFormatting.CurrencyFormatter** result);
                HRESULT CreateCurrencyFormatterCodeContext([in] HSTRING currencyCode, [in] Windows.Foundation.Collections.IIterable<HSTRING>* languages, [in] HSTRING geographicRegion, [out] [retval] Windows.Globalization.NumberFormatting.CurrencyFormatter** result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.CurrencyFormatter)]
            [uuid(11730CA5-4B00-41B2-B332-73B12A497D54)]
            [version(0x06020000)]
            interface ICurrencyFormatter : IInspectable
                requires
                    Windows.Globalization.NumberFormatting.INumberFormatterOptions,
                    Windows.Globalization.NumberFormatting.INumberFormatter,
                    Windows.Globalization.NumberFormatting.INumberFormatter2,
                    Windows.Globalization.NumberFormatting.INumberParser
            {
                [propget] HRESULT Currency([out] [retval] HSTRING* value);
                [deprecated("Currency may be read-only for releases after Windows 8.1. Instead, use a new CurrencyFormatter.", deprecate, 0x06030000)] [propput] HRESULT Currency([in] HSTRING value);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.CurrencyFormatter)]
            [uuid(072C2F1D-E7BA-4197-920E-247C92F7DEA6)]
            [version(0x06030000)]
            interface ICurrencyFormatter2 : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Windows.Globalization.NumberFormatting.CurrencyFormatterMode* value);
                [propput] HRESULT Mode([in] Windows.Globalization.NumberFormatting.CurrencyFormatterMode value);
                HRESULT ApplyRoundingForCurrency([in] Windows.Globalization.NumberFormatting.RoundingAlgorithm roundingAlgorithm);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.NumeralSystemTranslator)]
            [uuid(9630C8DA-36EF-4D88-A85C-6F0D98D620A6)]
            [version(0x06030000)]
            interface INumeralSystemTranslatorFactory : IInspectable
            {
                HRESULT Create([in] Windows.Foundation.Collections.IIterable<HSTRING>* languages, [out] [retval] Windows.Globalization.NumberFormatting.NumeralSystemTranslator** result);
            }

            [exclusiveto(Windows.Globalization.NumberFormatting.NumeralSystemTranslator)]
            [uuid(28F5BC2C-8C23-4234-AD2E-FA5A3A426E9B)]
            [version(0x06030000)]
            interface INumeralSystemTranslator : IInspectable
            {
                [propget] HRESULT Languages([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT ResolvedLanguage([out] [retval] HSTRING* value);
                [propget] HRESULT NumeralSystem([out] [retval] HSTRING* value);
                [propput] HRESULT NumeralSystem([in] HSTRING value);
                HRESULT TranslateNumerals([in] HSTRING value, [out] [retval] HSTRING* result);
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass SignificantDigitsNumberRounder
            {
                [default] [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounder;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignificantDigitsNumberRounder;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass IncrementNumberRounder
            {
                [default] [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounder;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.IIncrementNumberRounder;
            }

            [activatable(0x06020000)]
            [activatable(Windows.Globalization.NumberFormatting.IDecimalFormatterFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass DecimalFormatter
            {
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatterOptions;
                [default] [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter2;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberParser;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignificantDigitsOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounderOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignedZeroOption;
            }

            [activatable(0x06020000)]
            [activatable(Windows.Globalization.NumberFormatting.IPercentFormatterFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass PercentFormatter
            {
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatterOptions;
                [default] [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter2;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberParser;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignificantDigitsOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounderOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignedZeroOption;
            }

            [activatable(0x06020000)]
            [activatable(Windows.Globalization.NumberFormatting.IPermilleFormatterFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass PermilleFormatter
            {
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatterOptions;
                [default] [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter2;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberParser;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignificantDigitsOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounderOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignedZeroOption;
            }

            [activatable(Windows.Globalization.NumberFormatting.ICurrencyFormatterFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass CurrencyFormatter
            {
                [default] [version(0x06020000)] interface Windows.Globalization.NumberFormatting.ICurrencyFormatter;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberParser;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter2;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatter;
                [version(0x06020000)] interface Windows.Globalization.NumberFormatting.INumberFormatterOptions;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ICurrencyFormatter2;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignificantDigitsOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumberRounderOption;
                [version(0x06030000)] interface Windows.Globalization.NumberFormatting.ISignedZeroOption;
            }

            [activatable(Windows.Globalization.NumberFormatting.INumeralSystemTranslatorFactory, 0x06030000)]
            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass NumeralSystemTranslator
            {
                [default] [version(0x06030000)] interface Windows.Globalization.NumberFormatting.INumeralSystemTranslator;
            }
        }
    }
}
