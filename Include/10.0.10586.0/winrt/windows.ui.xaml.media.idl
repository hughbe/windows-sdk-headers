//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Media.Playback.idl";
import "Windows.UI.idl";
import "Windows.UI.Xaml.idl";
import "Windows.UI.Xaml.Controls.idl";
import "Windows.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.Xaml.Media.Media3D.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Emedia2Eplayback_h__)")
cpp_quote("#include <Windows.Media.Playback.h>")
cpp_quote("#endif // !defined(__windows2Emedia2Eplayback_h__)")
cpp_quote("#if !defined(__windows2Eui_h__)")
cpp_quote("#include <Windows.UI.h>")
cpp_quote("#endif // !defined(__windows2Eui_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl_h__)")
cpp_quote("#include <Windows.UI.Xaml.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Econtrols_h__)")
cpp_quote("#include <Windows.UI.Xaml.Controls.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Econtrols_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#include <Windows.UI.Xaml.Controls.Primitives.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Econtrols2Eprimitives_h__)")
cpp_quote("#if !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)")
cpp_quote("#include <Windows.UI.Xaml.Media.Media3D.h>")
cpp_quote("#endif // !defined(__windows2Eui2Examl2Emedia2Emedia3d_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct Size Size;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Playback
        {
            typedef enum FailedMediaStreamKind FailedMediaStreamKind;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass MediaElement;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass Popup;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            delegate ExceptionRoutedEventHandler;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Media3D
                {
                    typedef struct Matrix3D Matrix3D;
                }
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            delegate RoutedEventHandler;

            runtimeclass UIElement;

            runtimeclass Window;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                typedef enum MediaElementState MediaElementState;

                typedef enum AudioCategory AudioCategory;

                typedef enum AudioDeviceType AudioDeviceType;

                typedef enum BrushMappingMode BrushMappingMode;

                typedef enum ColorInterpolationMode ColorInterpolationMode;

                typedef enum ElementCompositeMode ElementCompositeMode;

                typedef enum FillRule FillRule;

                typedef enum GradientSpreadMethod GradientSpreadMethod;

                typedef enum MediaCanPlayResponse MediaCanPlayResponse;

                typedef enum PenLineCap PenLineCap;

                typedef enum PenLineJoin PenLineJoin;

                typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;

                typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;

                typedef enum Stretch Stretch;

                typedef enum StyleSimulations StyleSimulations;

                typedef enum SweepDirection SweepDirection;

                typedef enum AlignmentX AlignmentX;

                typedef enum AlignmentY AlignmentY;

                typedef struct Matrix Matrix;

                delegate RateChangedRoutedEventHandler;

                delegate TimelineMarkerRoutedEventHandler;

                interface IVisualTreeHelper;

                interface IVisualTreeHelperStatics;

                interface IVisualTreeHelperStatics2;

                interface IPartialMediaFailureDetectedEventArgs;

                interface IPartialMediaFailureDetectedEventArgs2;

                interface IMatrixHelper;

                interface IMatrixHelperStatics;

                interface ICompositionTarget;

                interface ICompositionTargetStatics;

                interface IFontFamily;

                interface IFontFamilyFactory;

                interface IFontFamilyStatics2;

                interface IRenderingEventArgs;

                interface IBrush;

                interface IBrushStatics;

                interface IBrushFactory;

                interface ICacheMode;

                interface ICacheModeFactory;

                interface IGeneralTransform;

                interface IGeneralTransformOverrides;

                interface IGeneralTransformFactory;

                interface IGeometry;

                interface IGeometryStatics;

                interface IGeometryFactory;

                interface IGradientStop;

                interface IGradientStopStatics;

                interface IImageSource;

                interface IImageSourceFactory;

                interface IPathFigure;

                interface IPathFigureStatics;

                interface IPathSegment;

                interface IPathSegmentFactory;

                interface IProjection;

                interface IProjectionFactory;

                interface IRateChangedRoutedEventArgs;

                interface ITimelineMarker;

                interface ITimelineMarkerStatics;

                interface ITimelineMarkerRoutedEventArgs;

                interface IArcSegment;

                interface IArcSegmentStatics;

                interface IBezierSegment;

                interface IBezierSegmentStatics;

                interface IBitmapCache;

                interface IEllipseGeometry;

                interface IEllipseGeometryStatics;

                interface IGeometryGroup;

                interface IGeometryGroupStatics;

                interface IGradientBrush;

                interface IGradientBrushStatics;

                interface IGradientBrushFactory;

                interface ILineGeometry;

                interface ILineGeometryStatics;

                interface ILineSegment;

                interface ILineSegmentStatics;

                interface IMatrix3DProjection;

                interface IMatrix3DProjectionStatics;

                interface IPathGeometry;

                interface IPathGeometryStatics;

                interface IPlaneProjection;

                interface IPlaneProjectionStatics;

                interface IPolyBezierSegment;

                interface IPolyBezierSegmentStatics;

                interface IPolyLineSegment;

                interface IPolyLineSegmentStatics;

                interface IPolyQuadraticBezierSegment;

                interface IPolyQuadraticBezierSegmentStatics;

                interface IQuadraticBezierSegment;

                interface IQuadraticBezierSegmentStatics;

                interface IRectangleGeometry;

                interface IRectangleGeometryStatics;

                interface ISolidColorBrush;

                interface ISolidColorBrushStatics;

                interface ISolidColorBrushFactory;

                interface ITransform;

                interface ITransformFactory;

                interface ICompositeTransform;

                interface ICompositeTransformStatics;

                interface ILinearGradientBrush;

                interface ILinearGradientBrushStatics;

                interface ILinearGradientBrushFactory;

                interface IMatrixTransform;

                interface IMatrixTransformStatics;

                interface IRotateTransform;

                interface IRotateTransformStatics;

                interface IScaleTransform;

                interface IScaleTransformStatics;

                interface ISkewTransform;

                interface ISkewTransformStatics;

                interface ITransformGroup;

                interface ITransformGroupStatics;

                interface ITranslateTransform;

                interface ITranslateTransformStatics;

                interface ITileBrush;

                interface ITileBrushStatics;

                interface ITileBrushFactory;

                interface IImageBrush;

                interface IImageBrushStatics;

                runtimeclass VisualTreeHelper;

                runtimeclass PartialMediaFailureDetectedEventArgs;

                runtimeclass MatrixHelper;

                runtimeclass CompositionTarget;

                runtimeclass DoubleCollection;

                runtimeclass FontFamily;

                runtimeclass GeometryCollection;

                runtimeclass GradientStopCollection;

                runtimeclass PathFigureCollection;

                runtimeclass PathSegmentCollection;

                runtimeclass PointCollection;

                runtimeclass RenderingEventArgs;

                runtimeclass TimelineMarkerCollection;

                runtimeclass TransformCollection;

                runtimeclass Brush;

                runtimeclass CacheMode;

                runtimeclass GeneralTransform;

                runtimeclass Geometry;

                runtimeclass GradientStop;

                runtimeclass ImageSource;

                runtimeclass PathFigure;

                runtimeclass PathSegment;

                runtimeclass Projection;

                runtimeclass RateChangedRoutedEventArgs;

                runtimeclass TimelineMarker;

                runtimeclass TimelineMarkerRoutedEventArgs;

                runtimeclass ArcSegment;

                runtimeclass BezierSegment;

                runtimeclass BitmapCache;

                runtimeclass EllipseGeometry;

                runtimeclass GeometryGroup;

                runtimeclass GradientBrush;

                runtimeclass LineGeometry;

                runtimeclass LineSegment;

                runtimeclass Matrix3DProjection;

                runtimeclass PathGeometry;

                runtimeclass PlaneProjection;

                runtimeclass PolyBezierSegment;

                runtimeclass PolyLineSegment;

                runtimeclass PolyQuadraticBezierSegment;

                runtimeclass QuadraticBezierSegment;

                runtimeclass RectangleGeometry;

                runtimeclass SolidColorBrush;

                runtimeclass Transform;

                runtimeclass CompositeTransform;

                runtimeclass LinearGradientBrush;

                runtimeclass MatrixTransform;

                runtimeclass RotateTransform;

                runtimeclass ScaleTransform;

                runtimeclass SkewTransform;

                runtimeclass TransformGroup;

                runtimeclass TranslateTransform;

                runtimeclass TileBrush;

                runtimeclass ImageBrush;
            }
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.MediaElement*, Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                [version(0x06020000)]
                enum MediaElementState
                {
                    Closed    = 0,
                    Opening   = 1,
                    Buffering = 2,
                    Playing   = 3,
                    Paused    = 4,
                    Stopped   = 5
                };

                [version(0x06020000)]
                enum AudioCategory
                {
                    Other                  = 0,
                    [deprecated("ForegroundOnlyMedia is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
                    ForegroundOnlyMedia    = 1,
                    [deprecated("BackgroundCapableMedia is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, 0x0A000000)]
                    BackgroundCapableMedia = 2,
                    Communications         = 3,
                    Alerts                 = 4,
                    SoundEffects           = 5,
                    GameEffects            = 6,
                    GameMedia              = 7,
                    [version(0x0A000000)]
                    GameChat               = 8,
                    [version(0x0A000000)]
                    Speech                 = 9,
                    [version(0x0A000000)]
                    Movie                  = 10,
                    [version(0x0A000000)]
                    Media                  = 11
                };

                [version(0x06020000)]
                enum AudioDeviceType
                {
                    Console        = 0,
                    Multimedia     = 1,
                    Communications = 2
                };

                [version(0x06020000)]
                enum BrushMappingMode
                {
                    Absolute              = 0,
                    RelativeToBoundingBox = 1
                };

                [version(0x06020000)]
                enum ColorInterpolationMode
                {
                    ScRgbLinearInterpolation = 0,
                    SRgbLinearInterpolation  = 1
                };

                [version(0x06030000)]
                enum ElementCompositeMode
                {
                    Inherit    = 0,
                    SourceOver = 1,
                    MinBlend   = 2
                };

                [version(0x06020000)]
                enum FillRule
                {
                    EvenOdd = 0,
                    Nonzero = 1
                };

                [version(0x06020000)]
                enum GradientSpreadMethod
                {
                    Pad     = 0,
                    Reflect = 1,
                    Repeat  = 2
                };

                [version(0x06020000)]
                enum MediaCanPlayResponse
                {
                    NotSupported = 0,
                    Maybe        = 1,
                    Probably     = 2
                };

                [version(0x06020000)]
                enum PenLineCap
                {
                    Flat     = 0,
                    Square   = 1,
                    Round    = 2,
                    Triangle = 3
                };

                [version(0x06020000)]
                enum PenLineJoin
                {
                    Miter = 0,
                    Bevel = 1,
                    Round = 2
                };

                [version(0x06020000)]
                enum Stereo3DVideoPackingMode
                {
                    None       = 0,
                    SideBySide = 1,
                    TopBottom  = 2
                };

                [version(0x06020000)]
                enum Stereo3DVideoRenderMode
                {
                    Mono   = 0,
                    Stereo = 1
                };

                [version(0x06020000)]
                enum Stretch
                {
                    None          = 0,
                    Fill          = 1,
                    Uniform       = 2,
                    UniformToFill = 3
                };

                [version(0x06020000)]
                enum StyleSimulations
                {
                    None                 = 0,
                    BoldSimulation       = 1,
                    ItalicSimulation     = 2,
                    BoldItalicSimulation = 3
                };

                [version(0x06020000)]
                enum SweepDirection
                {
                    Counterclockwise = 0,
                    Clockwise        = 1
                };

                [version(0x06020000)]
                enum AlignmentX
                {
                    Left   = 0,
                    Center = 1,
                    Right  = 2
                };

                [version(0x06020000)]
                enum AlignmentY
                {
                    Top    = 0,
                    Center = 1,
                    Bottom = 2
                };

                [version(0x06020000)]
                struct Matrix
                {
                    DOUBLE M11;
                    DOUBLE M12;
                    DOUBLE M21;
                    DOUBLE M22;
                    DOUBLE OffsetX;
                    DOUBLE OffsetY;
                };

                [uuid(08E9A257-AE05-489B-8839-28C6225D2349)]
                [version(0x06020000)]
                delegate
                    HRESULT RateChangedRoutedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Media.RateChangedRoutedEventArgs* e);

                [uuid(72E2FA9C-6DEA-4CBE-A159-06CE95FBECED)]
                [version(0x06020000)]
                delegate
                    HRESULT TimelineMarkerRoutedEventHandler([in] IInspectable* sender, [in] Windows.UI.Xaml.Media.TimelineMarkerRoutedEventArgs* e);

                [exclusiveto(Windows.UI.Xaml.Media.VisualTreeHelper)]
                [uuid(24B935E3-52C7-4141-8BAC-A73D06130569)]
                [version(0x06020000)]
                interface IVisualTreeHelper : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.VisualTreeHelper)]
                [uuid(E75758C4-D25D-4B1D-971F-596F17F12BAA)]
                [version(0x06020000)]
                interface IVisualTreeHelperStatics : IInspectable
                {
                    [default_overload] [overload("FindElementsInHostCoordinates")] HRESULT FindElementsInHostCoordinatesPoint([in] Windows.Foundation.Point intersectingPoint, [in] Windows.UI.Xaml.UIElement* subtree, [out] [retval] Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>** elements);
                    [overload("FindElementsInHostCoordinates")] HRESULT FindElementsInHostCoordinatesRect([in] Windows.Foundation.Rect intersectingRect, [in] Windows.UI.Xaml.UIElement* subtree, [out] [retval] Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>** elements);
                    [default_overload] [overload("FindElementsInHostCoordinates")] HRESULT FindAllElementsInHostCoordinatesPoint([in] Windows.Foundation.Point intersectingPoint, [in] Windows.UI.Xaml.UIElement* subtree, [in] boolean includeAllElements, [out] [retval] Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>** elements);
                    [overload("FindElementsInHostCoordinates")] HRESULT FindAllElementsInHostCoordinatesRect([in] Windows.Foundation.Rect intersectingRect, [in] Windows.UI.Xaml.UIElement* subtree, [in] boolean includeAllElements, [out] [retval] Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement*>** elements);
                    HRESULT GetChild([in] Windows.UI.Xaml.DependencyObject* reference, [in] INT32 childIndex, [out] [retval] Windows.UI.Xaml.DependencyObject** child);
                    HRESULT GetChildrenCount([in] Windows.UI.Xaml.DependencyObject* reference, [out] [retval] INT32* count);
                    HRESULT GetParent([in] Windows.UI.Xaml.DependencyObject* reference, [out] [retval] Windows.UI.Xaml.DependencyObject** parent);
                    HRESULT DisconnectChildrenRecursive([in] Windows.UI.Xaml.UIElement* element);
                }

                [exclusiveto(Windows.UI.Xaml.Media.VisualTreeHelper)]
                [uuid(07BCD176-869F-44A7-8797-2103A4C3E47A)]
                [version(0x06030000)]
                interface IVisualTreeHelperStatics2 : IInspectable
                {
                    HRESULT GetOpenPopups([in] Windows.UI.Xaml.Window* window, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.UI.Xaml.Controls.Primitives.Popup*>** popups);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs)]
                [uuid(02B65A91-E5A1-442B-88D3-2DC127BFC59B)]
                [version(0x0A000000)]
                interface IPartialMediaFailureDetectedEventArgs : IInspectable
                {
                    [propget] HRESULT StreamKind([out] [retval] Windows.Media.Playback.FailedMediaStreamKind* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs)]
                [uuid(73074875-890D-416B-B9AE-E84DFD9C4B1B)]
                [version(0x0A000001)]
                interface IPartialMediaFailureDetectedEventArgs2 : IInspectable
                {
                    [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.MatrixHelper)]
                [uuid(F3CF4882-06B5-48C8-9EB2-1763E9364038)]
                [version(0x06020000)]
                interface IMatrixHelper : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.MatrixHelper)]
                [uuid(C18606A6-39F4-4B8A-8403-28E5E5F033B4)]
                [version(0x06020000)]
                interface IMatrixHelperStatics : IInspectable
                {
                    [propget] HRESULT Identity([out] [retval] Windows.UI.Xaml.Media.Matrix* value);
                    HRESULT FromElements([in] DOUBLE m11, [in] DOUBLE m12, [in] DOUBLE m21, [in] DOUBLE m22, [in] DOUBLE offsetX, [in] DOUBLE offsetY, [out] [retval] Windows.UI.Xaml.Media.Matrix* returnValue);
                    HRESULT GetIsIdentity([in] Windows.UI.Xaml.Media.Matrix target, [out] [retval] boolean* value);
                    HRESULT Transform([in] Windows.UI.Xaml.Media.Matrix target, [in] Windows.Foundation.Point point, [out] [retval] Windows.Foundation.Point* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Media.CompositionTarget)]
                [uuid(26CFBFF0-713C-4BEC-8803-E101F7B14ED3)]
                [version(0x06020000)]
                interface ICompositionTarget : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.CompositionTarget)]
                [uuid(2B1AF03D-1ED2-4B59-BD00-7594EE92832B)]
                [version(0x06020000)]
                interface ICompositionTargetStatics : IInspectable
                {
                    [eventadd] HRESULT Rendering([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Rendering([in] EventRegistrationToken token);
                    [eventadd] HRESULT SurfaceContentsLost([in] Windows.Foundation.EventHandler<IInspectable*>* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SurfaceContentsLost([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Media.FontFamily)]
                [uuid(92467E64-D66A-4CF4-9322-3D23B3C0C361)]
                [version(0x06020000)]
                interface IFontFamily : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] HSTRING* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.FontFamily)]
                [uuid(D5603377-3DAE-4DCD-AF09-F9498E9EC659)]
                [version(0x06020000)]
                interface IFontFamilyFactory : IInspectable
                {
                    HRESULT CreateInstanceWithName([in] HSTRING familyName, [in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.FontFamily** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.FontFamily)]
                [uuid(52AD7AF9-37E6-4297-A238-97FB6A408D9E)]
                [version(0x0A000001)]
                interface IFontFamilyStatics2 : IInspectable
                {
                    [propget] HRESULT XamlAutoFontFamily([out] [retval] Windows.UI.Xaml.Media.FontFamily** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RenderingEventArgs)]
                [uuid(5BF7D30D-9748-4AED-8380-D7890EB776A0)]
                [version(0x06020000)]
                interface IRenderingEventArgs : IInspectable
                {
                    [propget] HRESULT RenderingTime([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Brush)]
                [uuid(8806A321-1E06-422C-A1CC-01696559E021)]
                [version(0x06020000)]
                interface IBrush : IInspectable
                {
                    [propget] HRESULT Opacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT Opacity([in] DOUBLE value);
                    [propget] HRESULT Transform([out] [retval] Windows.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT Transform([in] Windows.UI.Xaml.Media.Transform* value);
                    [propget] HRESULT RelativeTransform([out] [retval] Windows.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT RelativeTransform([in] Windows.UI.Xaml.Media.Transform* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Brush)]
                [uuid(E70C3102-0225-47F5-B22E-0467619F6A22)]
                [version(0x06020000)]
                interface IBrushStatics : IInspectable
                {
                    [propget] HRESULT OpacityProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TransformProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RelativeTransformProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Brush)]
                [uuid(399658A2-14FB-4B8F-83E6-6E3DAB12069B)]
                [version(0x06020000)]
                interface IBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.Brush** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.CacheMode)]
                [uuid(98DC8B11-C6F9-4DAB-B838-5FD5EC8C7350)]
                [version(0x06020000)]
                interface ICacheMode : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.CacheMode)]
                [uuid(EB1F8C5B-0ABB-4E70-B8A8-620D0D953AB2)]
                [version(0x06020000)]
                interface ICacheModeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.CacheMode** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GeneralTransform)]
                [uuid(A06798B7-A2EC-415F-ADE2-EADE9333F2C7)]
                [version(0x06020000)]
                interface IGeneralTransform : IInspectable
                {
                    [propget] HRESULT Inverse([out] [retval] Windows.UI.Xaml.Media.GeneralTransform** value);
                    HRESULT TransformPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.Foundation.Point* returnValue);
                    HRESULT TryTransform([in] Windows.Foundation.Point inPoint, [out] Windows.Foundation.Point* outPoint, [out] [retval] boolean* returnValue);
                    HRESULT TransformBounds([in] Windows.Foundation.Rect rect, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GeneralTransform)]
                [uuid(4F121083-24CF-4524-90AD-8A42B1C12783)]
                [version(0x06020000)]
                interface IGeneralTransformOverrides : IInspectable
                {
                    [propget] HRESULT InverseCore([out] [retval] Windows.UI.Xaml.Media.GeneralTransform** value);
                    HRESULT TryTransformCore([in] Windows.Foundation.Point inPoint, [out] Windows.Foundation.Point* outPoint, [out] [retval] boolean* returnValue);
                    HRESULT TransformBoundsCore([in] Windows.Foundation.Rect rect, [out] [retval] Windows.Foundation.Rect* returnValue);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GeneralTransform)]
                [uuid(7A25C930-29C4-4E31-B6F9-DEDD52E4DF1B)]
                [version(0x06020000)]
                interface IGeneralTransformFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.GeneralTransform** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Geometry)]
                [uuid(FA123889-0ACD-417B-B62D-5CA1BF4DFC0E)]
                [version(0x06020000)]
                interface IGeometry : IInspectable
                {
                    [propget] HRESULT Transform([out] [retval] Windows.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT Transform([in] Windows.UI.Xaml.Media.Transform* value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Geometry)]
                [uuid(7A70AA8C-0B06-465F-B637-9A47E5A70111)]
                [version(0x06020000)]
                interface IGeometryStatics : IInspectable
                {
                    [propget] HRESULT Empty([out] [retval] Windows.UI.Xaml.Media.Geometry** value);
                    [propget] HRESULT StandardFlatteningTolerance([out] [retval] DOUBLE* value);
                    [propget] HRESULT TransformProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Geometry)]
                [uuid(F65DAF23-D5FD-42F9-B32A-929C5A4B54E1)]
                [version(0x06020000)]
                interface IGeometryFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.GradientStop)]
                [uuid(665F44FE-2E59-4C4A-AB53-076A100CCD81)]
                [version(0x06020000)]
                interface IGradientStop : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                    [propput] HRESULT Offset([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GradientStop)]
                [uuid(602A6D75-6193-4FE5-8E82-C7C6F6FEBAFD)]
                [version(0x06020000)]
                interface IGradientStopStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffsetProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ImageSource)]
                [uuid(737EF309-EA41-4D96-A71C-98E98EFCAB07)]
                [version(0x06020000)]
                interface IImageSource : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.ImageSource)]
                [uuid(297EC001-2540-4E5A-AB66-88035DD3DDB5)]
                [version(0x06020000)]
                interface IImageSourceFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathFigure)]
                [uuid(5D955C8C-5FA9-4DDA-A3CC-10FCDCAA20D7)]
                [version(0x06020000)]
                interface IPathFigure : IInspectable
                {
                    [propget] HRESULT Segments([out] [retval] Windows.UI.Xaml.Media.PathSegmentCollection** value);
                    [propput] HRESULT Segments([in] Windows.UI.Xaml.Media.PathSegmentCollection* value);
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT IsClosed([out] [retval] boolean* value);
                    [propput] HRESULT IsClosed([in] boolean value);
                    [propget] HRESULT IsFilled([out] [retval] boolean* value);
                    [propput] HRESULT IsFilled([in] boolean value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathFigure)]
                [uuid(B60591D9-2395-4317-9552-3A58526F8C7B)]
                [version(0x06020000)]
                interface IPathFigureStatics : IInspectable
                {
                    [propget] HRESULT SegmentsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StartPointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClosedProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFilledProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathSegment)]
                [uuid(FCFA71CF-9CE3-474F-8157-10B6435A616B)]
                [version(0x06020000)]
                interface IPathSegment : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathSegment)]
                [uuid(2A1C0AAE-ECCD-4464-A148-6FFDB3AA281F)]
                [version(0x06020000)]
                interface IPathSegmentFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.Projection)]
                [uuid(B3443557-7F39-4D04-A89C-844338CAC897)]
                [version(0x06020000)]
                interface IProjection : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.Projection)]
                [uuid(C4F29CAB-60AD-4F24-BD27-9D69C3127C9A)]
                [version(0x06020000)]
                interface IProjectionFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.Projection** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RateChangedRoutedEventArgs)]
                [uuid(9016AA6F-3CA8-4C80-8E2F-8851A68F131F)]
                [version(0x06020000)]
                interface IRateChangedRoutedEventArgs : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.TimelineMarker)]
                [uuid(A68EF02D-45BA-4E50-8CAD-AAEA3A227AF5)]
                [version(0x06020000)]
                interface ITimelineMarker : IInspectable
                {
                    [propget] HRESULT Time([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Time([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT Type([out] [retval] HSTRING* value);
                    [propput] HRESULT Type([in] HSTRING value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TimelineMarker)]
                [uuid(C4AEF0C6-16A3-484B-87F5-6528B8F04A47)]
                [version(0x06020000)]
                interface ITimelineMarkerStatics : IInspectable
                {
                    [propget] HRESULT TimeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TypeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TimelineMarkerRoutedEventArgs)]
                [uuid(7C3B3EF3-2C88-4D9C-99B6-46CDBD48D4C1)]
                [version(0x06020000)]
                interface ITimelineMarkerRoutedEventArgs : IInspectable
                {
                    [propget] HRESULT Marker([out] [retval] Windows.UI.Xaml.Media.TimelineMarker** value);
                    [propput] HRESULT Marker([in] Windows.UI.Xaml.Media.TimelineMarker* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ArcSegment)]
                [uuid(07940C5F-63FB-4469-91BE-F1097C168052)]
                [version(0x06020000)]
                interface IArcSegment : IInspectable
                {
                    [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point([in] Windows.Foundation.Point value);
                    [propget] HRESULT Size([out] [retval] Windows.Foundation.Size* value);
                    [propput] HRESULT Size([in] Windows.Foundation.Size value);
                    [propget] HRESULT RotationAngle([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationAngle([in] DOUBLE value);
                    [propget] HRESULT IsLargeArc([out] [retval] boolean* value);
                    [propput] HRESULT IsLargeArc([in] boolean value);
                    [propget] HRESULT SweepDirection([out] [retval] Windows.UI.Xaml.Media.SweepDirection* value);
                    [propput] HRESULT SweepDirection([in] Windows.UI.Xaml.Media.SweepDirection value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ArcSegment)]
                [uuid(82348F6E-8A69-4204-9C12-7207DF317643)]
                [version(0x06020000)]
                interface IArcSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SizeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationAngleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLargeArcProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SweepDirectionProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.BezierSegment)]
                [uuid(AF4BB9EE-8984-49B7-81DF-3F35994B95EB)]
                [version(0x06020000)]
                interface IBezierSegment : IInspectable
                {
                    [propget] HRESULT Point1([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point1([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point2([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point2([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point3([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point3([in] Windows.Foundation.Point value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.BezierSegment)]
                [uuid(C0287BAC-1410-4530-8452-1C9D0AD1F341)]
                [version(0x06020000)]
                interface IBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT Point1Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point2Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point3Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.BitmapCache)]
                [uuid(79C2219E-44D2-4610-9735-9BEC83809ECF)]
                [version(0x06020000)]
                interface IBitmapCache : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.EllipseGeometry)]
                [uuid(D4F61BBA-4EA2-40D6-AA6C-8D38AA87651F)]
                [version(0x06020000)]
                interface IEllipseGeometry : IInspectable
                {
                    [propget] HRESULT Center([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Center([in] Windows.Foundation.Point value);
                    [propget] HRESULT RadiusX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusX([in] DOUBLE value);
                    [propget] HRESULT RadiusY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusY([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.EllipseGeometry)]
                [uuid(1744DB47-F635-4B16-AEE6-E052A65DEFB2)]
                [version(0x06020000)]
                interface IEllipseGeometryStatics : IInspectable
                {
                    [propget] HRESULT CenterProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GeometryGroup)]
                [uuid(55225A61-8677-4C8C-8E46-EE3DC355114B)]
                [version(0x06020000)]
                interface IGeometryGroup : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Windows.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Windows.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.Media.GeometryCollection** value);
                    [propput] HRESULT Children([in] Windows.UI.Xaml.Media.GeometryCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GeometryGroup)]
                [uuid(56C955F4-8496-4BB6-ABF0-617B1FE78B45)]
                [version(0x06020000)]
                interface IGeometryGroupStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GradientBrush)]
                [uuid(2166E69F-935A-4191-8E3C-1C8DFDFCDC78)]
                [version(0x06020000)]
                interface IGradientBrush : IInspectable
                {
                    [propget] HRESULT SpreadMethod([out] [retval] Windows.UI.Xaml.Media.GradientSpreadMethod* value);
                    [propput] HRESULT SpreadMethod([in] Windows.UI.Xaml.Media.GradientSpreadMethod value);
                    [propget] HRESULT MappingMode([out] [retval] Windows.UI.Xaml.Media.BrushMappingMode* value);
                    [propput] HRESULT MappingMode([in] Windows.UI.Xaml.Media.BrushMappingMode value);
                    [propget] HRESULT ColorInterpolationMode([out] [retval] Windows.UI.Xaml.Media.ColorInterpolationMode* value);
                    [propput] HRESULT ColorInterpolationMode([in] Windows.UI.Xaml.Media.ColorInterpolationMode value);
                    [propget] HRESULT GradientStops([out] [retval] Windows.UI.Xaml.Media.GradientStopCollection** value);
                    [propput] HRESULT GradientStops([in] Windows.UI.Xaml.Media.GradientStopCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GradientBrush)]
                [uuid(961661F9-8BB4-4E6C-B923-B5D787E0F1A9)]
                [version(0x06020000)]
                interface IGradientBrushStatics : IInspectable
                {
                    [propget] HRESULT SpreadMethodProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MappingModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorInterpolationModeProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GradientStopsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.GradientBrush)]
                [uuid(ED4779CA-45BD-4131-B625-BE86E07C6112)]
                [version(0x06020000)]
                interface IGradientBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.GradientBrush** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LineGeometry)]
                [uuid(30EDD4A2-8FC5-40AF-A7A2-C27FE7AA1363)]
                [version(0x06020000)]
                interface ILineGeometry : IInspectable
                {
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT EndPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT EndPoint([in] Windows.Foundation.Point value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LineGeometry)]
                [uuid(578AE763-5562-4EE4-8703-EA4036D891E3)]
                [version(0x06020000)]
                interface ILineGeometryStatics : IInspectable
                {
                    [propget] HRESULT StartPointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT EndPointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LineSegment)]
                [uuid(EF6A2E25-3FF0-4420-A411-7182A4CECB15)]
                [version(0x06020000)]
                interface ILineSegment : IInspectable
                {
                    [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point([in] Windows.Foundation.Point value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LineSegment)]
                [uuid(9FCAB141-04C0-4AFB-87B3-E800B969B894)]
                [version(0x06020000)]
                interface ILineSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Matrix3DProjection)]
                [uuid(6F03E149-BFC9-4C01-B578-50338CEC97FC)]
                [version(0x06020000)]
                interface IMatrix3DProjection : IInspectable
                {
                    [propget] HRESULT ProjectionMatrix([out] [retval] Windows.UI.Xaml.Media.Media3D.Matrix3D* value);
                    [propput] HRESULT ProjectionMatrix([in] Windows.UI.Xaml.Media.Media3D.Matrix3D value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Matrix3DProjection)]
                [uuid(AE9D5895-41EC-4E37-ABAA-69F41D2F876B)]
                [version(0x06020000)]
                interface IMatrix3DProjectionStatics : IInspectable
                {
                    [propget] HRESULT ProjectionMatrixProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathGeometry)]
                [uuid(081B9DF8-BAE6-4BCB-813C-BDE0E46DC8B7)]
                [version(0x06020000)]
                interface IPathGeometry : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Windows.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Windows.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Figures([out] [retval] Windows.UI.Xaml.Media.PathFigureCollection** value);
                    [propput] HRESULT Figures([in] Windows.UI.Xaml.Media.PathFigureCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PathGeometry)]
                [uuid(D9E58BBA-2CBA-4741-8F8D-3198CF5186B9)]
                [version(0x06020000)]
                interface IPathGeometryStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FiguresProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PlaneProjection)]
                [uuid(E6F82BFA-6726-469A-B259-A5188347CA8F)]
                [version(0x06020000)]
                interface IPlaneProjection : IInspectable
                {
                    [propget] HRESULT LocalOffsetX([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetX([in] DOUBLE value);
                    [propget] HRESULT LocalOffsetY([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetY([in] DOUBLE value);
                    [propget] HRESULT LocalOffsetZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetZ([in] DOUBLE value);
                    [propget] HRESULT RotationX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationX([in] DOUBLE value);
                    [propget] HRESULT RotationY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationY([in] DOUBLE value);
                    [propget] HRESULT RotationZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationZ([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationX([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationY([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationZ([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetX([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetX([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetY([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetY([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetZ([in] DOUBLE value);
                    [propget] HRESULT ProjectionMatrix([out] [retval] Windows.UI.Xaml.Media.Media3D.Matrix3D* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PlaneProjection)]
                [uuid(AD919C67-3BDC-4855-8969-D1F9A3ADC27D)]
                [version(0x06020000)]
                interface IPlaneProjectionStatics : IInspectable
                {
                    [propget] HRESULT LocalOffsetXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LocalOffsetYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LocalOffsetZProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationZProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationZProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetZProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProjectionMatrixProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyBezierSegment)]
                [uuid(36805271-38C4-4BCF-96CD-028A6D38AF25)]
                [version(0x06020000)]
                interface IPolyBezierSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Windows.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Windows.UI.Xaml.Media.PointCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyBezierSegment)]
                [uuid(1D91A6DA-1492-4ACC-BD66-A496F3D829D6)]
                [version(0x06020000)]
                interface IPolyBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyLineSegment)]
                [uuid(4B397F87-A2E6-479D-BDC8-6F4464646887)]
                [version(0x06020000)]
                interface IPolyLineSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Windows.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Windows.UI.Xaml.Media.PointCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyLineSegment)]
                [uuid(D64A2C87-33F1-4E70-A47F-B4981EF648A2)]
                [version(0x06020000)]
                interface IPolyLineSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyQuadraticBezierSegment)]
                [uuid(DD5CED7D-E6DB-4C96-B6A1-3FCE96E987A6)]
                [version(0x06020000)]
                interface IPolyQuadraticBezierSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Windows.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Windows.UI.Xaml.Media.PointCollection* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.PolyQuadraticBezierSegment)]
                [uuid(FDF5EB75-7AD5-4C89-8169-8C9786ABD9EB)]
                [version(0x06020000)]
                interface IPolyQuadraticBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.QuadraticBezierSegment)]
                [uuid(2C509A5B-BF18-455A-A078-914B5232D8AF)]
                [version(0x06020000)]
                interface IQuadraticBezierSegment : IInspectable
                {
                    [propget] HRESULT Point1([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point1([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point2([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point2([in] Windows.Foundation.Point value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.QuadraticBezierSegment)]
                [uuid(69C78278-3C0B-4B4F-B7A2-F003DED41BB0)]
                [version(0x06020000)]
                interface IQuadraticBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT Point1Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point2Property([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RectangleGeometry)]
                [uuid(A25A1F58-C575-4196-91CF-9FDFB10445C3)]
                [version(0x06020000)]
                interface IRectangleGeometry : IInspectable
                {
                    [propget] HRESULT Rect([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Rect([in] Windows.Foundation.Rect value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RectangleGeometry)]
                [uuid(377F8DBA-7902-48E3-83BE-7C8002A6653C)]
                [version(0x06020000)]
                interface IRectangleGeometryStatics : IInspectable
                {
                    [propget] HRESULT RectProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.SolidColorBrush)]
                [uuid(9D850850-66F3-48DF-9A8F-824BD5E070AF)]
                [version(0x06020000)]
                interface ISolidColorBrush : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.SolidColorBrush)]
                [uuid(E1A65EFA-2B23-41BA-B9BA-7094EC8E4E9F)]
                [version(0x06020000)]
                interface ISolidColorBrushStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.SolidColorBrush)]
                [uuid(D935CE0C-86F5-4DA6-8A27-B1619EF7F92B)]
                [version(0x06020000)]
                interface ISolidColorBrushFactory : IInspectable
                {
                    HRESULT CreateInstanceWithColor([in] Windows.UI.Color color, [out] [retval] Windows.UI.Xaml.Media.SolidColorBrush** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.Transform)]
                [uuid(4DF74078-BFD6-4ED1-9682-D2FD8BF2FE6F)]
                [version(0x06020000)]
                interface ITransform : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.Transform)]
                [uuid(1A955A66-7CF4-4320-B416-6181192FCC6D)]
                [version(0x06020000)]
                interface ITransformFactory : IInspectable
                {
                }

                [exclusiveto(Windows.UI.Xaml.Media.CompositeTransform)]
                [uuid(C8A4385B-F24A-4701-A265-A78846F142B9)]
                [version(0x06020000)]
                interface ICompositeTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT ScaleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleX([in] DOUBLE value);
                    [propget] HRESULT ScaleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleY([in] DOUBLE value);
                    [propget] HRESULT SkewX([out] [retval] DOUBLE* value);
                    [propput] HRESULT SkewX([in] DOUBLE value);
                    [propget] HRESULT SkewY([out] [retval] DOUBLE* value);
                    [propput] HRESULT SkewY([in] DOUBLE value);
                    [propget] HRESULT Rotation([out] [retval] DOUBLE* value);
                    [propput] HRESULT Rotation([in] DOUBLE value);
                    [propget] HRESULT TranslateX([out] [retval] DOUBLE* value);
                    [propput] HRESULT TranslateX([in] DOUBLE value);
                    [propget] HRESULT TranslateY([out] [retval] DOUBLE* value);
                    [propput] HRESULT TranslateY([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.CompositeTransform)]
                [uuid(2F190C08-8266-496F-9653-A18BD4F836AA)]
                [version(0x06020000)]
                interface ICompositeTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SkewXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SkewYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TranslateXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TranslateYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(8E96D16B-BB84-4C6F-9DBF-9D6C5C6D9C39)]
                [version(0x06020000)]
                interface ILinearGradientBrush : IInspectable
                {
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT EndPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT EndPoint([in] Windows.Foundation.Point value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(7AF6E504-2DC3-40E3-BE0B-B314C13CB991)]
                [version(0x06020000)]
                interface ILinearGradientBrushStatics : IInspectable
                {
                    [propget] HRESULT StartPointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT EndPointProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(0AE0861C-1E7A-4FED-9857-EA8CAA798490)]
                [version(0x06020000)]
                interface ILinearGradientBrushFactory : IInspectable
                {
                    HRESULT CreateInstanceWithGradientStopCollectionAndAngle([in] Windows.UI.Xaml.Media.GradientStopCollection* gradientStopCollection, [in] DOUBLE angle, [out] [retval] Windows.UI.Xaml.Media.LinearGradientBrush** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.MatrixTransform)]
                [uuid(EDFDD551-5FED-45FC-AE62-92A4B6CF9707)]
                [version(0x06020000)]
                interface IMatrixTransform : IInspectable
                {
                    [propget] HRESULT Matrix([out] [retval] Windows.UI.Xaml.Media.Matrix* value);
                    [propput] HRESULT Matrix([in] Windows.UI.Xaml.Media.Matrix value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.MatrixTransform)]
                [uuid(43E02E47-15B8-4758-BB97-7D52420ACC5B)]
                [version(0x06020000)]
                interface IMatrixTransformStatics : IInspectable
                {
                    [propget] HRESULT MatrixProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RotateTransform)]
                [uuid(688EA9B9-1E4E-4596-86E3-428B27334FAF)]
                [version(0x06020000)]
                interface IRotateTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT Angle([out] [retval] DOUBLE* value);
                    [propput] HRESULT Angle([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.RotateTransform)]
                [uuid(A131EB8A-51A3-41B6-B9D3-A10E429054AB)]
                [version(0x06020000)]
                interface IRotateTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ScaleTransform)]
                [uuid(ED67F18D-936E-43AB-929A-E9CD0A511E52)]
                [version(0x06020000)]
                interface IScaleTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT ScaleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleX([in] DOUBLE value);
                    [propget] HRESULT ScaleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleY([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ScaleTransform)]
                [uuid(9D9436F4-40A7-46DD-975A-07D337CD852E)]
                [version(0x06020000)]
                interface IScaleTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.SkewTransform)]
                [uuid(4E8A3B15-7A0F-4617-9E98-1E65BDC92115)]
                [version(0x06020000)]
                interface ISkewTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT AngleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT AngleX([in] DOUBLE value);
                    [propget] HRESULT AngleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT AngleY([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.SkewTransform)]
                [uuid(ECD11D73-5614-4B31-B6AF-BEAE10105624)]
                [version(0x06020000)]
                interface ISkewTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TransformGroup)]
                [uuid(63418CCC-8D2D-4737-B951-2AFCE1DDC4C4)]
                [version(0x06020000)]
                interface ITransformGroup : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Windows.UI.Xaml.Media.TransformCollection** value);
                    [propput] HRESULT Children([in] Windows.UI.Xaml.Media.TransformCollection* value);
                    [propget] HRESULT Value([out] [retval] Windows.UI.Xaml.Media.Matrix* value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TransformGroup)]
                [uuid(25312F2A-CFAB-4B24-9713-5BDEAD1929C0)]
                [version(0x06020000)]
                interface ITransformGroupStatics : IInspectable
                {
                    [propget] HRESULT ChildrenProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TranslateTransform)]
                [uuid(C975905C-3C36-4229-817B-178F64C0E113)]
                [version(0x06020000)]
                interface ITranslateTransform : IInspectable
                {
                    [propget] HRESULT X([out] [retval] DOUBLE* value);
                    [propput] HRESULT X([in] DOUBLE value);
                    [propget] HRESULT Y([out] [retval] DOUBLE* value);
                    [propput] HRESULT Y([in] DOUBLE value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TranslateTransform)]
                [uuid(F419AA91-E042-4111-9C2F-D201304123DD)]
                [version(0x06020000)]
                interface ITranslateTransformStatics : IInspectable
                {
                    [propget] HRESULT XProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TileBrush)]
                [uuid(C201CF06-CD84-48A5-9607-664D7361CD61)]
                [version(0x06020000)]
                interface ITileBrush : IInspectable
                {
                    [propget] HRESULT AlignmentX([out] [retval] Windows.UI.Xaml.Media.AlignmentX* value);
                    [propput] HRESULT AlignmentX([in] Windows.UI.Xaml.Media.AlignmentX value);
                    [propget] HRESULT AlignmentY([out] [retval] Windows.UI.Xaml.Media.AlignmentY* value);
                    [propput] HRESULT AlignmentY([in] Windows.UI.Xaml.Media.AlignmentY value);
                    [propget] HRESULT Stretch([out] [retval] Windows.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Windows.UI.Xaml.Media.Stretch value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TileBrush)]
                [uuid(3497C25B-B562-4E68-8435-2399F6EB94D5)]
                [version(0x06020000)]
                interface ITileBrushStatics : IInspectable
                {
                    [propget] HRESULT AlignmentXProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlignmentYProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Windows.UI.Xaml.Media.TileBrush)]
                [uuid(AA159F7C-ED6A-4FB3-B014-B5C7E379A4DE)]
                [version(0x06020000)]
                interface ITileBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Windows.UI.Xaml.Media.TileBrush** instance);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ImageBrush)]
                [uuid(9FD11377-C12A-4493-BF7D-F3A8AD74B554)]
                [version(0x06020000)]
                interface IImageBrush : IInspectable
                {
                    [propget] HRESULT ImageSource([out] [retval] Windows.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ImageSource([in] Windows.UI.Xaml.Media.ImageSource* value);
                    [eventadd] HRESULT ImageFailed([in] Windows.UI.Xaml.ExceptionRoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT ImageOpened([in] Windows.UI.Xaml.RoutedEventHandler* value, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageOpened([in] EventRegistrationToken token);
                }

                [exclusiveto(Windows.UI.Xaml.Media.ImageBrush)]
                [uuid(1255B1B2-DD18-42E5-892C-EAE30C305B8C)]
                [version(0x06020000)]
                interface IImageBrushStatics : IInspectable
                {
                    [propget] HRESULT ImageSourceProperty([out] [retval] Windows.UI.Xaml.DependencyProperty** value);
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IVisualTreeHelperStatics, 0x06020000)]
                [static(Windows.UI.Xaml.Media.IVisualTreeHelperStatics2, 0x06030000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass VisualTreeHelper
                {
                    [default] interface Windows.UI.Xaml.Media.IVisualTreeHelper;
                }

                [activatable(0x0A000000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x0A000000)]
                runtimeclass PartialMediaFailureDetectedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Media.IPartialMediaFailureDetectedEventArgs;
                    [version(0x0A000001)] interface Windows.UI.Xaml.Media.IPartialMediaFailureDetectedEventArgs2;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IMatrixHelperStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass MatrixHelper
                {
                    [default] interface Windows.UI.Xaml.Media.IMatrixHelper;
                }

                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ICompositionTargetStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CompositionTarget
                {
                    [default] interface Windows.UI.Xaml.Media.ICompositionTarget;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass DoubleCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<DOUBLE>;
                    interface Windows.Foundation.Collections.IIterable<DOUBLE>;
                }

                [composable(Windows.UI.Xaml.Media.IFontFamilyFactory, public, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IFontFamilyStatics2, 0x0A000001)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass FontFamily
                {
                    [default] interface Windows.UI.Xaml.Media.IFontFamily;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GeometryCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Geometry*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Geometry*>;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GradientStopCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.GradientStop*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.GradientStop*>;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PathFigureCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.PathFigure*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.PathFigure*>;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PathSegmentCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.PathSegment*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.PathSegment*>;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PointCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.Foundation.Point>;
                    interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Point>;
                }

                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RenderingEventArgs
                {
                    [default] interface Windows.UI.Xaml.Media.IRenderingEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TimelineMarkerCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.TimelineMarker*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.TimelineMarker*>;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TransformCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Transform*>;
                    interface Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Transform*>;
                }

                [composable(Windows.UI.Xaml.Media.IBrushFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Brush : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IBrush;
                }

                [composable(Windows.UI.Xaml.Media.ICacheModeFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CacheMode : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.ICacheMode;
                }

                [composable(Windows.UI.Xaml.Media.IGeneralTransformFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GeneralTransform : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IGeneralTransform;
                    [overridable] [version(0x06020000)] interface Windows.UI.Xaml.Media.IGeneralTransformOverrides;
                }

                [composable(Windows.UI.Xaml.Media.IGeometryFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IGeometryStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Geometry : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IGeometry;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IGradientStopStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GradientStop : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IGradientStop;
                }

                [composable(Windows.UI.Xaml.Media.IImageSourceFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ImageSource : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IImageSource;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPathFigureStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PathFigure : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IPathFigure;
                }

                [composable(Windows.UI.Xaml.Media.IPathSegmentFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PathSegment : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IPathSegment;
                }

                [composable(Windows.UI.Xaml.Media.IProjectionFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Projection : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.IProjection;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RateChangedRoutedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Media.IRateChangedRoutedEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ITimelineMarkerStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TimelineMarker : Windows.UI.Xaml.DependencyObject
                {
                    [default] interface Windows.UI.Xaml.Media.ITimelineMarker;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TimelineMarkerRoutedEventArgs : Windows.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Windows.UI.Xaml.Media.ITimelineMarkerRoutedEventArgs;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IArcSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ArcSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IArcSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IBezierSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass BezierSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IBezierSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass BitmapCache : Windows.UI.Xaml.Media.CacheMode
                {
                    [default] interface Windows.UI.Xaml.Media.IBitmapCache;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IEllipseGeometryStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass EllipseGeometry : Windows.UI.Xaml.Media.Geometry
                {
                    [default] interface Windows.UI.Xaml.Media.IEllipseGeometry;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IGeometryGroupStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GeometryGroup : Windows.UI.Xaml.Media.Geometry
                {
                    [default] interface Windows.UI.Xaml.Media.IGeometryGroup;
                }

                [composable(Windows.UI.Xaml.Media.IGradientBrushFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IGradientBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass GradientBrush : Windows.UI.Xaml.Media.Brush
                {
                    [default] interface Windows.UI.Xaml.Media.IGradientBrush;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ILineGeometryStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass LineGeometry : Windows.UI.Xaml.Media.Geometry
                {
                    [default] interface Windows.UI.Xaml.Media.ILineGeometry;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ILineSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass LineSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.ILineSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IMatrix3DProjectionStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Matrix3DProjection : Windows.UI.Xaml.Media.Projection
                {
                    [default] interface Windows.UI.Xaml.Media.IMatrix3DProjection;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPathGeometryStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PathGeometry : Windows.UI.Xaml.Media.Geometry
                {
                    [default] interface Windows.UI.Xaml.Media.IPathGeometry;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPlaneProjectionStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PlaneProjection : Windows.UI.Xaml.Media.Projection
                {
                    [default] interface Windows.UI.Xaml.Media.IPlaneProjection;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPolyBezierSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PolyBezierSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IPolyBezierSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPolyLineSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PolyLineSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IPolyLineSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass PolyQuadraticBezierSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IPolyQuadraticBezierSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IQuadraticBezierSegmentStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass QuadraticBezierSegment : Windows.UI.Xaml.Media.PathSegment
                {
                    [default] interface Windows.UI.Xaml.Media.IQuadraticBezierSegment;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IRectangleGeometryStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RectangleGeometry : Windows.UI.Xaml.Media.Geometry
                {
                    [default] interface Windows.UI.Xaml.Media.IRectangleGeometry;
                }

                [activatable(0x06020000)]
                [activatable(Windows.UI.Xaml.Media.ISolidColorBrushFactory, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ISolidColorBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SolidColorBrush : Windows.UI.Xaml.Media.Brush
                {
                    [default] interface Windows.UI.Xaml.Media.ISolidColorBrush;
                }

                [composable(Windows.UI.Xaml.Media.ITransformFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass Transform : Windows.UI.Xaml.Media.GeneralTransform
                {
                    [default] interface Windows.UI.Xaml.Media.ITransform;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ICompositeTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass CompositeTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.ICompositeTransform;
                }

                [activatable(0x06020000)]
                [activatable(Windows.UI.Xaml.Media.ILinearGradientBrushFactory, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ILinearGradientBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass LinearGradientBrush : Windows.UI.Xaml.Media.GradientBrush
                {
                    [default] interface Windows.UI.Xaml.Media.ILinearGradientBrush;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IMatrixTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass MatrixTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.IMatrixTransform;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IRotateTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass RotateTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.IRotateTransform;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IScaleTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ScaleTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.IScaleTransform;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ISkewTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass SkewTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.ISkewTransform;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ITransformGroupStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TransformGroup : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.ITransformGroup;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ITranslateTransformStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TranslateTransform : Windows.UI.Xaml.Media.Transform
                {
                    [default] interface Windows.UI.Xaml.Media.ITranslateTransform;
                }

                [composable(Windows.UI.Xaml.Media.ITileBrushFactory, protected, 0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.ITileBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass TileBrush : Windows.UI.Xaml.Media.Brush
                {
                    [default] interface Windows.UI.Xaml.Media.ITileBrush;
                }

                [activatable(0x06020000)]
                [marshaling_behavior(agile)]
                [static(Windows.UI.Xaml.Media.IImageBrushStatics, 0x06020000)]
                [threading(both)]
                [version(0x06020000)]
                runtimeclass ImageBrush : Windows.UI.Xaml.Media.TileBrush
                {
                    [default] interface Windows.UI.Xaml.Media.IImageBrush;
                }
            }
        }
    }
}
