//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Data.Text.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.Popups.idl";
import "Windows.UI.ViewManagement.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edata2Etext_h__)")
cpp_quote("#include <Windows.Data.Text.h>")
cpp_quote("#endif // !defined(__windows2Edata2Etext_h__)")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if !defined(__windows2Eui2Epopups_h__)")
cpp_quote("#include <Windows.UI.Popups.h>")
cpp_quote("#endif // !defined(__windows2Eui2Epopups_h__)")
cpp_quote("#if !defined(__windows2Eui2Eviewmanagement_h__)")
cpp_quote("#include <Windows.UI.ViewManagement.h>")
cpp_quote("#endif // !defined(__windows2Eui2Eviewmanagement_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Data
    {
        namespace Text
        {
            typedef struct TextSegment TextSegment;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Collections
        {
            interface IPropertySet;

            runtimeclass ValueSet;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        interface IAsyncAction;

        interface IClosable;

        typedef struct Rect Rect;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStreamReference;

            interface IRandomAccessStreamWithContentType;

            runtimeclass RandomAccessStreamReference;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Popups
        {
            typedef enum Placement Placement;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace ViewManagement
        {
            typedef enum ViewSizePreference ViewSizePreference;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Contacts
        {
            typedef enum ContactFieldType ContactFieldType;

            typedef enum ContactSelectionMode ContactSelectionMode;

            typedef enum ContactEmailKind ContactEmailKind;

            typedef enum ContactPhoneKind ContactPhoneKind;

            typedef enum ContactAddressKind ContactAddressKind;

            typedef enum ContactDateKind ContactDateKind;

            typedef enum ContactChangeType ContactChangeType;

            typedef enum ContactRelationship ContactRelationship;

            typedef enum ContactQueryDesiredFields ContactQueryDesiredFields;

            typedef enum ContactQuerySearchFields ContactQuerySearchFields;

            typedef enum ContactQuerySearchScope ContactQuerySearchScope;

            typedef enum ContactStoreAccessType ContactStoreAccessType;

            typedef enum ContactAnnotationStoreAccessType ContactAnnotationStoreAccessType;

            typedef enum ContactListOtherAppReadAccess ContactListOtherAppReadAccess;

            typedef enum ContactListOtherAppWriteAccess ContactListOtherAppWriteAccess;

            typedef enum ContactMatchReasonKind ContactMatchReasonKind;

            typedef enum ContactBatchStatus ContactBatchStatus;

            typedef enum ContactAnnotationOperations ContactAnnotationOperations;

            typedef enum ContactNameOrder ContactNameOrder;

            typedef enum ContactListSyncStatus ContactListSyncStatus;

            typedef enum ContactCardHeaderKind ContactCardHeaderKind;

            typedef enum ContactCardTabKind ContactCardTabKind;

            typedef enum ContactFieldCategory ContactFieldCategory;

            interface IContactCardOptions;

            interface IContactCardOptions2;

            interface IFullContactCardOptions;

            interface IContactManagerStatics;

            interface IContactManagerStatics2;

            interface IContactManagerStatics3;

            interface IAggregateContactManager;

            interface IContactAnnotationStore;

            interface IContactAnnotationList;

            interface IContactAnnotation;

            interface IContactStoreNotificationTriggerDetails;

            interface IContactStore;

            interface IContactStore2;

            interface IContactList;

            interface IContactListSyncManager;

            interface IContactConnectedServiceAccount;

            interface IContactSignificantOther;

            interface IContactSignificantOther2;

            interface IContactWebsite;

            interface IContactWebsite2;

            interface IContactEmail;

            interface IContactPhone;

            interface IContactAddress;

            interface IContactDate;

            interface IContactJobInfo;

            interface IContact;

            interface IContactField;

            interface IContactName;

            interface IContact2;

            interface IContact3;

            interface IContactChange;

            interface IContactChangedDeferral;

            interface IContactChangedEventArgs;

            interface IContactChangeReader;

            interface IContactChangeTracker;

            interface IContactReader;

            interface IContactQueryTextSearch;

            interface IContactQueryOptionsFactory;

            interface IContactQueryOptions;

            interface IContactBatch;

            interface IContactMatchReason;

            interface IContactLaunchActionVerbsStatics;

            interface IContactLocationField;

            interface IContactInstantMessageField;

            interface IKnownContactFieldStatics;

            interface IContactInformation;

            interface IContactFieldFactory;

            interface IContactLocationFieldFactory;

            interface IContactInstantMessageFieldFactory;

            interface IContactPicker;

            interface IContactPicker2;

            interface IContactCardDelayedDataLoader;

            runtimeclass Contact;

            runtimeclass ContactCardDelayedDataLoader;

            runtimeclass ContactStore;

            runtimeclass ContactAnnotationStore;

            runtimeclass ContactCardOptions;

            runtimeclass FullContactCardOptions;

            runtimeclass ContactAnnotation;

            runtimeclass ContactAnnotationList;

            runtimeclass ContactChangeTracker;

            runtimeclass ContactChangedEventArgs;

            runtimeclass AggregateContactManager;

            runtimeclass ContactList;

            runtimeclass ContactReader;

            runtimeclass ContactQueryOptions;

            runtimeclass ContactListSyncManager;

            runtimeclass ContactPhone;

            runtimeclass ContactEmail;

            runtimeclass ContactAddress;

            runtimeclass ContactConnectedServiceAccount;

            runtimeclass ContactDate;

            runtimeclass ContactJobInfo;

            runtimeclass ContactSignificantOther;

            runtimeclass ContactWebsite;

            runtimeclass ContactChangedDeferral;

            runtimeclass ContactChange;

            runtimeclass ContactChangeReader;

            runtimeclass ContactBatch;

            runtimeclass ContactMatchReason;

            runtimeclass ContactQueryTextSearch;

            runtimeclass ContactStoreNotificationTriggerDetails;

            runtimeclass ContactManager;

            runtimeclass ContactLaunchActionVerbs;

            runtimeclass ContactField;

            runtimeclass ContactLocationField;

            runtimeclass ContactInstantMessageField;

            runtimeclass KnownContactField;

            runtimeclass ContactInformation;

            runtimeclass ContactFieldFactory;

            runtimeclass ContactPicker;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Contacts
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.Contact*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactAddress*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactAnnotation*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactAnnotationList*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactDate*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactEmail*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactField*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactFieldType>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactInformation*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactInstantMessageField*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactJobInfo*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactList*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactLocationField*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactMatchReason*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactPhone*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactSignificantOther*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.ContactWebsite*>;

                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Contacts.IContactField*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.Contact*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactAddress*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactAnnotation*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactAnnotationList*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactDate*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactEmail*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactField*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactFieldType>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactInformation*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactInstantMessageField*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactJobInfo*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactList*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactLocationField*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactMatchReason*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactPhone*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactSignificantOther*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.ContactWebsite*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Contacts.IContactField*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAddress*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotation*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotationList*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactDate*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactEmail*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactField*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactFieldType>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactInformation*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactInstantMessageField*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactJobInfo*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactList*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactLocationField*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactMatchReason*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactPhone*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactSignificantOther*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactWebsite*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.IContactField*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.Contact*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactAddress*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactDate*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactEmail*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactFieldType>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactJobInfo*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactPhone*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactSignificantOther*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactWebsite*>;

                interface Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.IContactField*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotation*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationList*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationStore*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactBatch*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactInformation*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactList*>;

                interface Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactStore*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotation*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotationList*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactChange*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactInformation*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactList*>*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.Contact*>*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactList*, Windows.ApplicationModel.Contacts.ContactChangedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactListSyncManager*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactStore*, Windows.ApplicationModel.Contacts.ContactChangedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace ApplicationModel
    {
        namespace Contacts
        {
            [version(0x06020000)]
            enum ContactFieldType
            {
                Email                   = 0,
                PhoneNumber             = 1,
                [deprecated("Location  may be altered or unavailable for releases after Windows 8.1. Instead, use Address.", deprecate, 0x06030000)]
                [version(0x06020000)]
                Location                = 2,
                [deprecated("InstantMessage  may be altered or unavailable for releases after Windows 8.1. Instead, use ConnectedServiceAccount.", deprecate, 0x06030000)]
                [version(0x06020000)]
                InstantMessage          = 3,
                [deprecated("Custom may be altered or unavailable for releases after Windows 8.1. Instead, use one of the specific types.", deprecate, 0x06030000)]
                [version(0x06020000)]
                Custom                  = 4,
                [version(0x06030000)]
                ConnectedServiceAccount = 5,
                [version(0x06030000)]
                ImportantDate           = 6,
                [version(0x06030000)]
                Address                 = 7,
                [version(0x06030000)]
                SignificantOther        = 8,
                [version(0x06030000)]
                Notes                   = 9,
                [version(0x06030000)]
                Website                 = 10,
                [version(0x06030000)]
                JobInfo                 = 11
            };

            [version(0x06020000)]
            enum ContactSelectionMode
            {
                Contacts = 0,
                Fields   = 1
            };

            [version(0x06030000)]
            enum ContactEmailKind
            {
                Personal = 0,
                Work     = 1,
                Other    = 2
            };

            [version(0x06030000)]
            enum ContactPhoneKind
            {
                Home        = 0,
                Mobile      = 1,
                Work        = 2,
                Other       = 3,
                [version(0x0A000000)]
                Pager       = 4,
                [version(0x0A000000)]
                BusinessFax = 5,
                [version(0x0A000000)]
                HomeFax     = 6,
                [version(0x0A000000)]
                Company     = 7,
                [version(0x0A000000)]
                Assistant   = 8,
                [version(0x0A000000)]
                Radio       = 9
            };

            [version(0x06030000)]
            enum ContactAddressKind
            {
                Home  = 0,
                Work  = 1,
                Other = 2
            };

            [version(0x06030000)]
            enum ContactDateKind
            {
                Birthday    = 0,
                Anniversary = 1,
                Other       = 2
            };

            [version(0x0A000000)]
            enum ContactChangeType
            {
                Created            = 0,
                Modified           = 1,
                Deleted            = 2,
                ChangeTrackingLost = 3
            };

            [version(0x0A000000)]
            enum ContactRelationship
            {
                Other   = 0,
                Spouse  = 1,
                Partner = 2,
                Sibling = 3,
                Parent  = 4,
                Child   = 5
            };

            [flags]
            [version(0x0A000000)]
            enum ContactQueryDesiredFields
            {
                None          = 0x0,
                PhoneNumber   = 0x1,
                EmailAddress  = 0x2,
                PostalAddress = 0x4
            };

            [flags]
            [version(0x0A000000)]
            enum ContactQuerySearchFields
            {
                None  = 0x0,
                Name  = 0x1,
                Email = 0x2,
                Phone = 0x4,
                All   = 0xFFFFFFFF
            };

            [version(0x0A000000)]
            enum ContactQuerySearchScope
            {
                Local  = 0,
                Server = 1
            };

            [version(0x0A000000)]
            enum ContactStoreAccessType
            {
                AppContactsReadWrite = 0,
                AllContactsReadOnly  = 1,
                AllContactsReadWrite = 2
            };

            [version(0x0A000000)]
            enum ContactAnnotationStoreAccessType
            {
                AppAnnotationsReadWrite = 0,
                AllAnnotationsReadWrite = 1
            };

            [version(0x0A000000)]
            enum ContactListOtherAppReadAccess
            {
                SystemOnly = 0,
                Limited    = 1,
                Full       = 2
            };

            [version(0x0A000000)]
            enum ContactListOtherAppWriteAccess
            {
                None       = 0,
                SystemOnly = 1
            };

            [version(0x0A000000)]
            enum ContactMatchReasonKind
            {
                Name         = 0,
                EmailAddress = 1,
                PhoneNumber  = 2,
                JobInfo      = 3,
                YomiName     = 4,
                Other        = 5
            };

            [version(0x0A000000)]
            enum ContactBatchStatus
            {
                Success                      = 0,
                ServerSearchSyncManagerError = 1,
                ServerSearchUnknownError     = 2
            };

            [flags]
            [version(0x0A000000)]
            enum ContactAnnotationOperations
            {
                None           = 0x0,
                ContactProfile = 0x1,
                Message        = 0x2,
                AudioCall      = 0x4,
                VideoCall      = 0x8,
                SocialFeeds    = 0x10
            };

            [version(0x0A000000)]
            enum ContactNameOrder
            {
                FirstNameLastName = 0,
                LastNameFirstName = 1
            };

            [version(0x0A000000)]
            enum ContactListSyncStatus
            {
                Idle                         = 0,
                Syncing                      = 1,
                UpToDate                     = 2,
                AuthenticationError          = 3,
                PolicyError                  = 4,
                UnknownError                 = 5,
                [version(0x0A000000)]
                ManualAccountRemovalRequired = 6
            };

            [version(0x0A000000)]
            enum ContactCardHeaderKind
            {
                Default    = 0,
                Basic      = 1,
                Enterprise = 2
            };

            [version(0x0A000000)]
            enum ContactCardTabKind
            {
                Default   = 0,
                Email     = 1,
                Messaging = 2,
                Phone     = 3,
                Video     = 4
            };

            [version(0x06020000)]
            enum ContactFieldCategory
            {
                None   = 0,
                Home   = 1,
                Work   = 2,
                Mobile = 3,
                Other  = 4
            };

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactCardOptions)]
            [uuid(8C0A4F7E-6AB6-4F3F-BE72-817236EEEA5B)]
            [version(0x0A000000)]
            interface IContactCardOptions : IInspectable
            {
                [propget] HRESULT HeaderKind([out] [retval] Windows.ApplicationModel.Contacts.ContactCardHeaderKind* value);
                [propput] HRESULT HeaderKind([in] Windows.ApplicationModel.Contacts.ContactCardHeaderKind value);
                [propget] HRESULT InitialTabKind([out] [retval] Windows.ApplicationModel.Contacts.ContactCardTabKind* value);
                [propput] HRESULT InitialTabKind([in] Windows.ApplicationModel.Contacts.ContactCardTabKind value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactCardOptions)]
            [uuid(8F271BA0-D74B-4CC6-9F53-1B0EB5D1273C)]
            [version(0x0A000001)]
            interface IContactCardOptions2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactCardOptions
            {
                [propget] HRESULT ServerSearchContactListIds([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.FullContactCardOptions)]
            [uuid(8744436C-5CF9-4683-BDCA-A1FDEBF8DBCE)]
            [version(0x0A000000)]
            interface IFullContactCardOptions : IInspectable
            {
                [propget] HRESULT DesiredRemainingView([out] [retval] Windows.UI.ViewManagement.ViewSizePreference* value);
                [propput] HRESULT DesiredRemainingView([in] Windows.UI.ViewManagement.ViewSizePreference value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactManager)]
            [uuid(81F21AC0-F661-4708-BA4F-D386BD0D622E)]
            [version(0x06030000)]
            interface IContactManagerStatics : IInspectable
            {
                [overload("ShowContactCard")] HRESULT ShowContactCard([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.Foundation.Rect selection);
                [overload("ShowContactCard")] HRESULT ShowContactCardWithPlacement([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.Foundation.Rect selection, [in] Windows.UI.Popups.Placement preferredPlacement);
                [overload("ShowDelayLoadedContactCard")] HRESULT ShowDelayLoadedContactCard([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.Foundation.Rect selection, [in] Windows.UI.Popups.Placement preferredPlacement, [out] [retval] Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader** dataLoader);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactManager)]
            [uuid(A178E620-47D8-48CC-963C-9592B6E510C6)]
            [version(0x0A000000)]
            interface IContactManagerStatics2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactManagerStatics
            {
                [overload("RequestStoreAsync")] HRESULT RequestStoreAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactStore*>** store);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactManager)]
            [uuid(C4CC3D42-7586-492A-930B-7BC138FC2139)]
            [version(0x0A000000)]
            interface IContactManagerStatics3 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactManagerStatics2,
                    Windows.ApplicationModel.Contacts.IContactManagerStatics
            {
                [overload("ConvertContactToVCardAsync")] HRESULT ConvertContactToVCardAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference*>** vCard);
                [overload("ConvertContactToVCardAsync")] HRESULT ConvertContactToVCardAsyncWithMaxBytes([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] UINT32 maxBytes, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.RandomAccessStreamReference*>** vCard);
                HRESULT ConvertVCardToContactAsync([in] Windows.Storage.Streams.IRandomAccessStreamReference* vCard, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** contact);
                [overload("RequestStoreAsync")] HRESULT RequestStoreAsyncWithAccessType([in] Windows.ApplicationModel.Contacts.ContactStoreAccessType accessType, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactStore*>** store);
                HRESULT RequestAnnotationStoreAsync([in] Windows.ApplicationModel.Contacts.ContactAnnotationStoreAccessType accessType, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationStore*>** store);
                HRESULT IsShowContactCardSupported([out] [retval] boolean* result);
                [overload("ShowContactCard")] HRESULT ShowContactCardWithOptions([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.Foundation.Rect selection, [in] Windows.UI.Popups.Placement preferredPlacement, [in] Windows.ApplicationModel.Contacts.ContactCardOptions* contactCardOptions);
                HRESULT IsShowDelayLoadedContactCardSupported([out] [retval] boolean* result);
                [overload("ShowDelayLoadedContactCard")] HRESULT ShowDelayLoadedContactCardWithOptions([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.Foundation.Rect selection, [in] Windows.UI.Popups.Placement preferredPlacement, [in] Windows.ApplicationModel.Contacts.ContactCardOptions* contactCardOptions, [out] [retval] Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader** dataLoader);
                HRESULT ShowFullContactCard([in] Windows.ApplicationModel.Contacts.Contact* contact, [in] Windows.ApplicationModel.Contacts.FullContactCardOptions* fullContactCardOptions);
                [propget] HRESULT SystemDisplayNameOrder([out] [retval] Windows.ApplicationModel.Contacts.ContactNameOrder* value);
                [propput] HRESULT SystemDisplayNameOrder([in] Windows.ApplicationModel.Contacts.ContactNameOrder value);
                [propget] HRESULT SystemSortOrder([out] [retval] Windows.ApplicationModel.Contacts.ContactNameOrder* value);
                [propput] HRESULT SystemSortOrder([in] Windows.ApplicationModel.Contacts.ContactNameOrder value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.AggregateContactManager)]
            [uuid(0379D5DD-DB5A-4FD3-B54E-4DF17917A212)]
            [version(0x0A000000)]
            interface IAggregateContactManager : IInspectable
            {
                HRESULT FindRawContactsAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>*>** value);
                HRESULT TryLinkContactsAsync([in] Windows.ApplicationModel.Contacts.Contact* primaryContact, [in] Windows.ApplicationModel.Contacts.Contact* secondaryContact, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** contact);
                HRESULT UnlinkRawContactAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncAction** value);
                HRESULT TrySetPreferredSourceForPictureAsync([in] Windows.ApplicationModel.Contacts.Contact* aggregateContact, [in] Windows.ApplicationModel.Contacts.Contact* rawContact, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactAnnotationStore)]
            [uuid(23ACF4AA-7A77-457D-8203-987F4B31AF09)]
            [version(0x0A000000)]
            interface IContactAnnotationStore : IInspectable
            {
                HRESULT FindContactIdsByEmailAsync([in] HSTRING emailAddress, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<HSTRING>*>** contactIds);
                HRESULT FindContactIdsByPhoneNumberAsync([in] HSTRING phoneNumber, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<HSTRING>*>** contactIds);
                HRESULT FindAnnotationsForContactAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotation*>*>** annotations);
                HRESULT DisableAnnotationAsync([in] Windows.ApplicationModel.Contacts.ContactAnnotation* annotation, [out] [retval] Windows.Foundation.IAsyncAction** value);
                [overload("CreateAnnotationListAsync")] HRESULT CreateAnnotationListAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationList*>** value);
                [overload("CreateAnnotationListAsync")] HRESULT CreateAnnotationListInAccountAsync([in] HSTRING userDataAccountId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationList*>** value);
                HRESULT GetAnnotationListAsync([in] HSTRING annotationListId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotationList*>** value);
                HRESULT FindAnnotationListsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotationList*>*>** lists);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactAnnotationList)]
            [uuid(92A486AA-5C88-45B9-AAD0-461888E68D8A)]
            [version(0x0A000000)]
            interface IContactAnnotationList : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT ProviderPackageFamilyName([out] [retval] HSTRING* value);
                [propget] HRESULT UserDataAccountId([out] [retval] HSTRING* value);
                HRESULT DeleteAsync([out] [retval] Windows.Foundation.IAsyncAction** value);
                HRESULT TrySaveAnnotationAsync([in] Windows.ApplicationModel.Contacts.ContactAnnotation* annotation, [out] [retval] Windows.Foundation.IAsyncOperation<boolean>** ppResult);
                HRESULT GetAnnotationAsync([in] HSTRING annotationId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactAnnotation*>** annotation);
                HRESULT FindAnnotationsByRemoteIdAsync([in] HSTRING remoteId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotation*>*>** annotations);
                HRESULT FindAnnotationsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactAnnotation*>*>** annotations);
                HRESULT DeleteAnnotationAsync([in] Windows.ApplicationModel.Contacts.ContactAnnotation* annotation, [out] [retval] Windows.Foundation.IAsyncAction** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactAnnotation)]
            [uuid(821FC2EF-7D41-44A2-84C3-60A281DD7B86)]
            [version(0x0A000000)]
            interface IContactAnnotation : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT AnnotationListId([out] [retval] HSTRING* value);
                [propget] HRESULT ContactId([out] [retval] HSTRING* value);
                [propput] HRESULT ContactId([in] HSTRING value);
                [propget] HRESULT RemoteId([out] [retval] HSTRING* value);
                [propput] HRESULT RemoteId([in] HSTRING value);
                [propget] HRESULT SupportedOperations([out] [retval] Windows.ApplicationModel.Contacts.ContactAnnotationOperations* value);
                [propput] HRESULT SupportedOperations([in] Windows.ApplicationModel.Contacts.ContactAnnotationOperations value);
                [propget] HRESULT IsDisabled([out] [retval] boolean* value);
                [propget] HRESULT ProviderProperties([out] [retval] Windows.Foundation.Collections.ValueSet** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactStoreNotificationTriggerDetails)]
            [uuid(ABB298D6-878A-4F8B-A9CE-46BB7D1C84CE)]
            [version(0x0A000000)]
            interface IContactStoreNotificationTriggerDetails : IInspectable
            {
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactStore)]
            [uuid(2C220B10-3A6C-4293-B9BC-FE987F6E0D52)]
            [version(0x0A000000)]
            interface IContactStore : IInspectable
            {
                [overload("FindContactsAsync")] HRESULT FindContactsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>*>** contacts);
                [overload("FindContactsAsync")] HRESULT FindContactsWithSearchTextAsync([in] HSTRING searchText, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>*>** contacts);
                HRESULT GetContactAsync([in] HSTRING contactId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** contacts);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactStore)]
            [uuid(18CE1C22-EBD5-4BFB-B690-5F4F27C4F0E8)]
            [version(0x0A000000)]
            interface IContactStore2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactStore
            {
                [propget] HRESULT ChangeTracker([out] [retval] Windows.ApplicationModel.Contacts.ContactChangeTracker** value);
                [eventadd] HRESULT ContactChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactStore*, Windows.ApplicationModel.Contacts.ContactChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* returnValue);
                [eventremove] HRESULT ContactChanged([in] EventRegistrationToken value);
                [propget] HRESULT AggregateContactManager([out] [retval] Windows.ApplicationModel.Contacts.AggregateContactManager** value);
                HRESULT FindContactListsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactList*>*>** value);
                HRESULT GetContactListAsync([in] HSTRING contactListId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactList*>** value);
                [overload("CreateContactListAsync")] HRESULT CreateContactListAsync([in] HSTRING displayName, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactList*>** value);
                HRESULT GetMeContactAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** meContact);
                [overload("GetContactReader")] HRESULT GetContactReader([out] [retval] Windows.ApplicationModel.Contacts.ContactReader** value);
                [overload("GetContactReader")] HRESULT GetContactReaderWithOptions([in] Windows.ApplicationModel.Contacts.ContactQueryOptions* options, [out] [retval] Windows.ApplicationModel.Contacts.ContactReader** value);
                [overload("CreateContactListAsync")] HRESULT CreateContactListInAccountAsync([in] HSTRING displayName, [in] HSTRING userDataAccountId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactList*>** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactList)]
            [uuid(16DDEC75-392C-4845-9DFB-51A3E7EF3E42)]
            [version(0x0A000000)]
            interface IContactList : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propput] HRESULT DisplayName([in] HSTRING value);
                [propget] HRESULT SourceDisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT IsHidden([out] [retval] boolean* value);
                [propput] HRESULT IsHidden([in] boolean value);
                [propget] HRESULT OtherAppReadAccess([out] [retval] Windows.ApplicationModel.Contacts.ContactListOtherAppReadAccess* value);
                [propput] HRESULT OtherAppReadAccess([in] Windows.ApplicationModel.Contacts.ContactListOtherAppReadAccess value);
                [propget] HRESULT OtherAppWriteAccess([out] [retval] Windows.ApplicationModel.Contacts.ContactListOtherAppWriteAccess* value);
                [propput] HRESULT OtherAppWriteAccess([in] Windows.ApplicationModel.Contacts.ContactListOtherAppWriteAccess value);
                [propget] HRESULT ChangeTracker([out] [retval] Windows.ApplicationModel.Contacts.ContactChangeTracker** value);
                [propget] HRESULT SyncManager([out] [retval] Windows.ApplicationModel.Contacts.ContactListSyncManager** value);
                [propget] HRESULT SupportsServerSearch([out] [retval] boolean* value);
                [propget] HRESULT UserDataAccountId([out] [retval] HSTRING* value);
                [eventadd] HRESULT ContactChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactList*, Windows.ApplicationModel.Contacts.ContactChangedEventArgs*>* value, [out] [retval] EventRegistrationToken* returnValue);
                [eventremove] HRESULT ContactChanged([in] EventRegistrationToken value);
                HRESULT SaveAsync([out] [retval] Windows.Foundation.IAsyncAction** returnValue);
                HRESULT DeleteAsync([out] [retval] Windows.Foundation.IAsyncAction** returnValue);
                HRESULT GetContactFromRemoteIdAsync([in] HSTRING remoteId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** contact);
                HRESULT GetMeContactAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** meContact);
                [overload("GetContactReader")] HRESULT GetContactReader([out] [retval] Windows.ApplicationModel.Contacts.ContactReader** value);
                [overload("GetContactReader")] HRESULT GetContactReaderWithOptions([in] Windows.ApplicationModel.Contacts.ContactQueryOptions* options, [out] [retval] Windows.ApplicationModel.Contacts.ContactReader** value);
                HRESULT SaveContactAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncAction** value);
                HRESULT DeleteContactAsync([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.IAsyncAction** value);
                HRESULT GetContactAsync([in] HSTRING contactId, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** contacts);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactListSyncManager)]
            [uuid(146E83BE-7925-4ACC-9DE5-21DDD06F8674)]
            [version(0x0A000000)]
            interface IContactListSyncManager : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.ApplicationModel.Contacts.ContactListSyncStatus* value);
                [propget] HRESULT LastSuccessfulSyncTime([out] [retval] Windows.Foundation.DateTime* value);
                [propget] HRESULT LastAttemptedSyncTime([out] [retval] Windows.Foundation.DateTime* value);
                HRESULT SyncAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** result);
                [eventadd] HRESULT SyncStatusChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Contacts.ContactListSyncManager*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT SyncStatusChanged([in] EventRegistrationToken token);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount)]
            [uuid(F6F83553-AA27-4731-8E4A-3DEC5CE9EEC9)]
            [version(0x06030000)]
            interface IContactConnectedServiceAccount : IInspectable
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propput] HRESULT Id([in] HSTRING value);
                [propget] HRESULT ServiceName([out] [retval] HSTRING* value);
                [propput] HRESULT ServiceName([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactSignificantOther)]
            [uuid(8873B5AB-C5FB-46D8-93FE-DA3FF1934054)]
            [version(0x06030000)]
            interface IContactSignificantOther : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propput] HRESULT Name([in] HSTRING value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactSignificantOther)]
            [uuid(8D7BD474-3F03-45F8-BA0F-C4ED37D64219)]
            [version(0x0A000000)]
            interface IContactSignificantOther2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactSignificantOther
            {
                [propget] HRESULT Relationship([out] [retval] Windows.ApplicationModel.Contacts.ContactRelationship* value);
                [propput] HRESULT Relationship([in] Windows.ApplicationModel.Contacts.ContactRelationship value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactWebsite)]
            [uuid(9F130176-DC1B-4055-AD66-652F39D990E8)]
            [version(0x06030000)]
            interface IContactWebsite : IInspectable
            {
                [propget] HRESULT Uri([out] [retval] Windows.Foundation.Uri** value);
                [propput] HRESULT Uri([in] Windows.Foundation.Uri* value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactWebsite)]
            [uuid(F87EE91E-5647-4068-BB5E-4B6F437CE308)]
            [version(0x0A000000)]
            interface IContactWebsite2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactWebsite
            {
                [propget] HRESULT RawValue([out] [retval] HSTRING* value);
                [propput] HRESULT RawValue([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactEmail)]
            [uuid(90A219A9-E3D3-4D63-993B-05B9A5393ABF)]
            [version(0x06030000)]
            interface IContactEmail : IInspectable
            {
                [propget] HRESULT Address([out] [retval] HSTRING* value);
                [propput] HRESULT Address([in] HSTRING value);
                [propget] HRESULT Kind([out] [retval] Windows.ApplicationModel.Contacts.ContactEmailKind* value);
                [propput] HRESULT Kind([in] Windows.ApplicationModel.Contacts.ContactEmailKind value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactPhone)]
            [uuid(467DAB65-2712-4F52-B783-9EA8111C63CD)]
            [version(0x06030000)]
            interface IContactPhone : IInspectable
            {
                [propget] HRESULT Number([out] [retval] HSTRING* value);
                [propput] HRESULT Number([in] HSTRING value);
                [propget] HRESULT Kind([out] [retval] Windows.ApplicationModel.Contacts.ContactPhoneKind* value);
                [propput] HRESULT Kind([in] Windows.ApplicationModel.Contacts.ContactPhoneKind value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactAddress)]
            [uuid(9739D39A-42CE-4872-8D70-3063AA584B70)]
            [version(0x06030000)]
            interface IContactAddress : IInspectable
            {
                [propget] HRESULT StreetAddress([out] [retval] HSTRING* value);
                [propput] HRESULT StreetAddress([in] HSTRING value);
                [propget] HRESULT Locality([out] [retval] HSTRING* value);
                [propput] HRESULT Locality([in] HSTRING value);
                [propget] HRESULT Region([out] [retval] HSTRING* value);
                [propput] HRESULT Region([in] HSTRING value);
                [propget] HRESULT Country([out] [retval] HSTRING* value);
                [propput] HRESULT Country([in] HSTRING value);
                [propget] HRESULT PostalCode([out] [retval] HSTRING* value);
                [propput] HRESULT PostalCode([in] HSTRING value);
                [propget] HRESULT Kind([out] [retval] Windows.ApplicationModel.Contacts.ContactAddressKind* value);
                [propput] HRESULT Kind([in] Windows.ApplicationModel.Contacts.ContactAddressKind value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactDate)]
            [uuid(FE98AE66-B205-4934-9174-0FF2B0565707)]
            [version(0x06030000)]
            interface IContactDate : IInspectable
            {
                [propget] HRESULT Day([out] [retval] Windows.Foundation.IReference<UINT32>** value);
                [propput] HRESULT Day([in] Windows.Foundation.IReference<UINT32>* value);
                [propget] HRESULT Month([out] [retval] Windows.Foundation.IReference<UINT32>** value);
                [propput] HRESULT Month([in] Windows.Foundation.IReference<UINT32>* value);
                [propget] HRESULT Year([out] [retval] Windows.Foundation.IReference<INT32>** value);
                [propput] HRESULT Year([in] Windows.Foundation.IReference<INT32>* value);
                [propget] HRESULT Kind([out] [retval] Windows.ApplicationModel.Contacts.ContactDateKind* value);
                [propput] HRESULT Kind([in] Windows.ApplicationModel.Contacts.ContactDateKind value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactJobInfo)]
            [uuid(6D117B4C-CE50-4B43-9E69-B18258EA5315)]
            [version(0x06030000)]
            interface IContactJobInfo : IInspectable
            {
                [propget] HRESULT CompanyName([out] [retval] HSTRING* value);
                [propput] HRESULT CompanyName([in] HSTRING value);
                [propget] HRESULT CompanyYomiName([out] [retval] HSTRING* value);
                [propput] HRESULT CompanyYomiName([in] HSTRING value);
                [propget] HRESULT Department([out] [retval] HSTRING* value);
                [propput] HRESULT Department([in] HSTRING value);
                [propget] HRESULT Title([out] [retval] HSTRING* value);
                [propput] HRESULT Title([in] HSTRING value);
                [propget] HRESULT Manager([out] [retval] HSTRING* value);
                [propput] HRESULT Manager([in] HSTRING value);
                [propget] HRESULT Office([out] [retval] HSTRING* value);
                [propput] HRESULT Office([in] HSTRING value);
                [propget] HRESULT CompanyAddress([out] [retval] HSTRING* value);
                [propput] HRESULT CompanyAddress([in] HSTRING value);
                [propget] HRESULT Description([out] [retval] HSTRING* value);
                [propput] HRESULT Description([in] HSTRING value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.Contact)]
            [uuid(EC0072F3-2118-4049-9EBC-17F0AB692B64)]
            [version(0x06020000)]
            interface IContact : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propput] HRESULT Name([in] HSTRING value);
                [propget] HRESULT Thumbnail([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propput] HRESULT Thumbnail([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
                [propget] HRESULT Fields([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.IContactField*>** value);
            }

            [uuid(B176486A-D293-492C-A058-DB575B3E3C0F)]
            [version(0x06020000)]
            interface IContactField : IInspectable
            {
                [propget] HRESULT Type([out] [retval] Windows.ApplicationModel.Contacts.ContactFieldType* value);
                [propget] HRESULT Category([out] [retval] Windows.ApplicationModel.Contacts.ContactFieldCategory* value);
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                [propget] HRESULT Value([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.Contact)]
            [uuid(F404E97B-9034-453C-8EBF-140A38C86F1D)]
            [version(0x06030000)]
            interface IContactName : IInspectable
            {
                [propget] HRESULT FirstName([out] [retval] HSTRING* value);
                [propput] HRESULT FirstName([in] HSTRING value);
                [propget] HRESULT LastName([out] [retval] HSTRING* value);
                [propput] HRESULT LastName([in] HSTRING value);
                [propget] HRESULT MiddleName([out] [retval] HSTRING* value);
                [propput] HRESULT MiddleName([in] HSTRING value);
                [propget] HRESULT YomiGivenName([out] [retval] HSTRING* value);
                [propput] HRESULT YomiGivenName([in] HSTRING value);
                [propget] HRESULT YomiFamilyName([out] [retval] HSTRING* value);
                [propput] HRESULT YomiFamilyName([in] HSTRING value);
                [propget] HRESULT HonorificNameSuffix([out] [retval] HSTRING* value);
                [propput] HRESULT HonorificNameSuffix([in] HSTRING value);
                [propget] HRESULT HonorificNamePrefix([out] [retval] HSTRING* value);
                [propput] HRESULT HonorificNamePrefix([in] HSTRING value);
                [propget] HRESULT DisplayName([out] [retval] HSTRING* value);
                [propget] HRESULT YomiDisplayName([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.Contact)]
            [uuid(F312F365-BB77-4C94-802D-8328CEE40C08)]
            [version(0x06030000)]
            interface IContact2 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContact
            {
                [propget] HRESULT Id([out] [retval] HSTRING* value);
                [propput] HRESULT Id([in] HSTRING value);
                [propget] HRESULT Notes([out] [retval] HSTRING* value);
                [propput] HRESULT Notes([in] HSTRING value);
                [propget] HRESULT Phones([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactPhone*>** value);
                [propget] HRESULT Emails([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactEmail*>** value);
                [propget] HRESULT Addresses([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactAddress*>** value);
                [propget] HRESULT ConnectedServiceAccounts([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactConnectedServiceAccount*>** value);
                [propget] HRESULT ImportantDates([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactDate*>** value);
                [propget] HRESULT DataSuppliers([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
                [propget] HRESULT JobInfo([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactJobInfo*>** value);
                [propget] HRESULT SignificantOthers([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactSignificantOther*>** value);
                [propget] HRESULT Websites([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactWebsite*>** value);
                [propget] HRESULT ProviderProperties([out] [retval] Windows.Foundation.Collections.IPropertySet** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.Contact)]
            [uuid(48201E67-E08E-42A4-B561-41D08CA9575D)]
            [version(0x0A000000)]
            interface IContact3 : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContact2,
                    Windows.ApplicationModel.Contacts.IContact
            {
                [propget] HRESULT ContactListId([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayPictureUserUpdateTime([out] [retval] Windows.Foundation.DateTime* value);
                [propput] HRESULT DisplayPictureUserUpdateTime([in] Windows.Foundation.DateTime value);
                [propget] HRESULT IsMe([out] [retval] boolean* value);
                [propget] HRESULT AggregateId([out] [retval] HSTRING* value);
                [propget] HRESULT RemoteId([out] [retval] HSTRING* value);
                [propput] HRESULT RemoteId([in] HSTRING value);
                [propget] HRESULT RingToneToken([out] [retval] HSTRING* value);
                [propput] HRESULT RingToneToken([in] HSTRING value);
                [propget] HRESULT IsDisplayPictureManuallySet([out] [retval] boolean* value);
                [propget] HRESULT LargeDisplayPicture([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propget] HRESULT SmallDisplayPicture([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propget] HRESULT SourceDisplayPicture([out] [retval] Windows.Storage.Streams.IRandomAccessStreamReference** value);
                [propput] HRESULT SourceDisplayPicture([in] Windows.Storage.Streams.IRandomAccessStreamReference* value);
                [propget] HRESULT TextToneToken([out] [retval] HSTRING* value);
                [propput] HRESULT TextToneToken([in] HSTRING value);
                [propget] HRESULT IsAggregate([out] [retval] boolean* value);
                [propget] HRESULT FullName([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayNameOverride([out] [retval] HSTRING* value);
                [propput] HRESULT DisplayNameOverride([in] HSTRING value);
                [propget] HRESULT Nickname([out] [retval] HSTRING* value);
                [propput] HRESULT Nickname([in] HSTRING value);
                [propget] HRESULT SortName([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactChange)]
            [uuid(951D4B10-6A59-4720-A4E1-363D98C135D5)]
            [version(0x0A000000)]
            interface IContactChange : IInspectable
            {
                [propget] HRESULT ChangeType([out] [retval] Windows.ApplicationModel.Contacts.ContactChangeType* value);
                [propget] HRESULT Contact([out] [retval] Windows.ApplicationModel.Contacts.Contact** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactChangedDeferral)]
            [uuid(C5143AE8-1B03-46F8-B694-A523E83CFCB6)]
            [version(0x0A000000)]
            interface IContactChangedDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactChangedEventArgs)]
            [uuid(525E7FD1-73F3-4B7D-A918-580BE4366121)]
            [version(0x0A000000)]
            interface IContactChangedEventArgs : IInspectable
            {
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.Contacts.ContactChangedDeferral** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactChangeReader)]
            [uuid(217319FA-2D0C-42E0-A9DA-3ECD56A78A47)]
            [version(0x0A000000)]
            interface IContactChangeReader : IInspectable
            {
                HRESULT AcceptChanges();
                HRESULT AcceptChangesThrough([in] Windows.ApplicationModel.Contacts.ContactChange* lastChangeToAccept);
                HRESULT ReadBatchAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactChange*>*>** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactChangeTracker)]
            [uuid(6E992952-309B-404D-9712-B37BD30278AA)]
            [version(0x0A000000)]
            interface IContactChangeTracker : IInspectable
            {
                HRESULT Enable();
                HRESULT GetChangeReader([out] [retval] Windows.ApplicationModel.Contacts.ContactChangeReader** value);
                HRESULT Reset();
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactReader)]
            [uuid(D397E42E-1488-42F2-BF64-253F4884BFED)]
            [version(0x0A000000)]
            interface IContactReader : IInspectable
            {
                HRESULT ReadBatchAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactBatch*>** value);
                HRESULT GetMatchingPropertiesWithMatchReason([in] Windows.ApplicationModel.Contacts.Contact* contact, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactMatchReason*>** ppRetVal);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactQueryTextSearch)]
            [uuid(F7E3F9CB-A957-439B-A0B7-1C02A1963FF0)]
            [version(0x0A000000)]
            interface IContactQueryTextSearch : IInspectable
            {
                [propget] HRESULT Fields([out] [retval] Windows.ApplicationModel.Contacts.ContactQuerySearchFields* value);
                [propput] HRESULT Fields([in] Windows.ApplicationModel.Contacts.ContactQuerySearchFields value);
                [propget] HRESULT Text([out] [retval] HSTRING* value);
                [propput] HRESULT Text([in] HSTRING value);
                [propget] HRESULT SearchScope([out] [retval] Windows.ApplicationModel.Contacts.ContactQuerySearchScope* value);
                [propput] HRESULT SearchScope([in] Windows.ApplicationModel.Contacts.ContactQuerySearchScope value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactQueryOptions)]
            [uuid(543FBA47-8CE7-46CB-9DAC-9AA42A1BC8E2)]
            [version(0x0A000000)]
            interface IContactQueryOptionsFactory : IInspectable
            {
                HRESULT CreateWithText([in] HSTRING text, [out] [retval] Windows.ApplicationModel.Contacts.ContactQueryOptions** result);
                HRESULT CreateWithTextAndFields([in] HSTRING text, [in] Windows.ApplicationModel.Contacts.ContactQuerySearchFields fields, [out] [retval] Windows.ApplicationModel.Contacts.ContactQueryOptions** result);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactQueryOptions)]
            [uuid(4408CC9E-7D7C-42F0-8AC7-F50733ECDBC1)]
            [version(0x0A000000)]
            interface IContactQueryOptions : IInspectable
            {
                [propget] HRESULT TextSearch([out] [retval] Windows.ApplicationModel.Contacts.ContactQueryTextSearch** value);
                [propget] HRESULT ContactListIds([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
                [propget] HRESULT IncludeContactsFromHiddenLists([out] [retval] boolean* value);
                [propput] HRESULT IncludeContactsFromHiddenLists([in] boolean value);
                [propget] HRESULT DesiredFields([out] [retval] Windows.ApplicationModel.Contacts.ContactQueryDesiredFields* value);
                [propput] HRESULT DesiredFields([in] Windows.ApplicationModel.Contacts.ContactQueryDesiredFields value);
                [propget] HRESULT DesiredOperations([out] [retval] Windows.ApplicationModel.Contacts.ContactAnnotationOperations* value);
                [propput] HRESULT DesiredOperations([in] Windows.ApplicationModel.Contacts.ContactAnnotationOperations value);
                [propget] HRESULT AnnotationListIds([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactBatch)]
            [uuid(35D1972D-BFCE-46BB-93F8-A5B06EC5E201)]
            [version(0x0A000000)]
            interface IContactBatch : IInspectable
            {
                [propget] HRESULT Contacts([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.Contact*>** value);
                [propget] HRESULT Status([out] [retval] Windows.ApplicationModel.Contacts.ContactBatchStatus* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactMatchReason)]
            [uuid(BC922504-E7D8-413E-95F4-B75C54C74077)]
            [version(0x0A000000)]
            interface IContactMatchReason : IInspectable
            {
                [propget] HRESULT Field([out] [retval] Windows.ApplicationModel.Contacts.ContactMatchReasonKind* value);
                [propget] HRESULT Segments([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Data.Text.TextSegment>** value);
                [propget] HRESULT Text([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactLaunchActionVerbs)]
            [uuid(FB1232D6-EE73-46E7-8761-11CD0157728F)]
            [version(0x06030000)]
            interface IContactLaunchActionVerbsStatics : IInspectable
            {
                [propget] HRESULT Call([out] [retval] HSTRING* value);
                [propget] HRESULT Message([out] [retval] HSTRING* value);
                [propget] HRESULT Map([out] [retval] HSTRING* value);
                [propget] HRESULT Post([out] [retval] HSTRING* value);
                [propget] HRESULT VideoCall([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactLocationField)]
            [uuid(9EC00F82-AB6E-4B36-89E3-B23BC0A1DACC)]
            [version(0x06020000)]
            interface IContactLocationField : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactField
            {
                [propget] HRESULT UnstructuredAddress([out] [retval] HSTRING* value);
                [propget] HRESULT Street([out] [retval] HSTRING* value);
                [propget] HRESULT City([out] [retval] HSTRING* value);
                [propget] HRESULT Region([out] [retval] HSTRING* value);
                [propget] HRESULT Country([out] [retval] HSTRING* value);
                [propget] HRESULT PostalCode([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactInstantMessageField)]
            [uuid(CCE33B37-0D85-41FA-B43D-DA599C3EB009)]
            [version(0x06020000)]
            interface IContactInstantMessageField : IInspectable
                requires
                    Windows.ApplicationModel.Contacts.IContactField
            {
                [propget] HRESULT UserName([out] [retval] HSTRING* value);
                [propget] HRESULT Service([out] [retval] HSTRING* value);
                [propget] HRESULT DisplayText([out] [retval] HSTRING* value);
                [propget] HRESULT LaunchUri([out] [retval] Windows.Foundation.Uri** value);
            }

            [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)]
            [exclusiveto(Windows.ApplicationModel.Contacts.KnownContactField)]
            [uuid(2E0E1B12-D627-4FCA-BAD4-1FAF168C7D14)]
            [version(0x06020000)]
            interface IKnownContactFieldStatics : IInspectable
            {
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] [propget] HRESULT Email([out] [retval] HSTRING* value);
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] [propget] HRESULT PhoneNumber([out] [retval] HSTRING* value);
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] [propget] HRESULT Location([out] [retval] HSTRING* value);
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] [propget] HRESULT InstantMessage([out] [retval] HSTRING* value);
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] HRESULT ConvertNameToType([in] HSTRING name, [out] [retval] Windows.ApplicationModel.Contacts.ContactFieldType* type);
                [deprecated("IKnownContactFieldStatics may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)] HRESULT ConvertTypeToName([in] Windows.ApplicationModel.Contacts.ContactFieldType type, [out] [retval] HSTRING* name);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactInformation)]
            [uuid(275EB6D4-6A2E-4278-A914-E460D5F088F6)]
            [version(0x06020000)]
            interface IContactInformation : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
                HRESULT GetThumbnailAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStreamWithContentType*>** operation);
                [propget] HRESULT Emails([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactField*>** value);
                [propget] HRESULT PhoneNumbers([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactField*>** value);
                [propget] HRESULT Locations([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactLocationField*>** value);
                [propget] HRESULT InstantMessages([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactInstantMessageField*>** value);
                [propget] HRESULT CustomFields([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactField*>** value);
                HRESULT QueryCustomFields([in] HSTRING customName, [out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactField*>** value);
            }

            [uuid(85E2913F-0E4A-4A3E-8994-406AE7ED646E)]
            [version(0x06020000)]
            interface IContactFieldFactory : IInspectable
            {
                [overload("CreateField")] HRESULT CreateField_Default([in] HSTRING value, [in] Windows.ApplicationModel.Contacts.ContactFieldType type, [out] [retval] Windows.ApplicationModel.Contacts.ContactField** field);
                [overload("CreateField")] HRESULT CreateField_Category([in] HSTRING value, [in] Windows.ApplicationModel.Contacts.ContactFieldType type, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [out] [retval] Windows.ApplicationModel.Contacts.ContactField** field);
                [overload("CreateField")] HRESULT CreateField_Custom([in] HSTRING name, [in] HSTRING value, [in] Windows.ApplicationModel.Contacts.ContactFieldType type, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [out] [retval] Windows.ApplicationModel.Contacts.ContactField** field);
            }

            [uuid(F79932D7-2FDF-43FE-8F18-41897390BCFE)]
            [version(0x06020000)]
            interface IContactLocationFieldFactory : IInspectable
            {
                [overload("CreateLocation")] HRESULT CreateLocation_Default([in] HSTRING unstructuredAddress, [out] [retval] Windows.ApplicationModel.Contacts.ContactLocationField** field);
                [overload("CreateLocation")] HRESULT CreateLocation_Category([in] HSTRING unstructuredAddress, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [out] [retval] Windows.ApplicationModel.Contacts.ContactLocationField** field);
                [overload("CreateLocation")] HRESULT CreateLocation_All([in] HSTRING unstructuredAddress, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [in] HSTRING street, [in] HSTRING city, [in] HSTRING region, [in] HSTRING country, [in] HSTRING postalCode, [out] [retval] Windows.ApplicationModel.Contacts.ContactLocationField** field);
            }

            [uuid(BA0B6794-91A3-4BB2-B1B9-69A5DFF0BA09)]
            [version(0x06020000)]
            interface IContactInstantMessageFieldFactory : IInspectable
            {
                [overload("CreateInstantMessage")] HRESULT CreateInstantMessage_Default([in] HSTRING userName, [out] [retval] Windows.ApplicationModel.Contacts.ContactInstantMessageField** field);
                [overload("CreateInstantMessage")] HRESULT CreateInstantMessage_Category([in] HSTRING userName, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [out] [retval] Windows.ApplicationModel.Contacts.ContactInstantMessageField** field);
                [overload("CreateInstantMessage")] HRESULT CreateInstantMessage_All([in] HSTRING userName, [in] Windows.ApplicationModel.Contacts.ContactFieldCategory category, [in] HSTRING service, [in] HSTRING displayText, [in] Windows.Foundation.Uri* verb, [out] [retval] Windows.ApplicationModel.Contacts.ContactInstantMessageField** field);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactPicker)]
            [uuid(0E09FD91-42F8-4055-90A0-896F96738936)]
            [version(0x06020000)]
            interface IContactPicker : IInspectable
            {
                [propget] HRESULT CommitButtonText([out] [retval] HSTRING* value);
                [propput] HRESULT CommitButtonText([in] HSTRING value);
                [propget] HRESULT SelectionMode([out] [retval] Windows.ApplicationModel.Contacts.ContactSelectionMode* value);
                [propput] HRESULT SelectionMode([in] Windows.ApplicationModel.Contacts.ContactSelectionMode value);
                [propget] HRESULT DesiredFields([out] [retval] Windows.Foundation.Collections.IVector<HSTRING>** value);
                HRESULT PickSingleContactAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.ContactInformation*>** result);
                HRESULT PickMultipleContactsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Contacts.ContactInformation*>*>** result);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactPicker)]
            [uuid(B35011CF-5CEF-4D24-AA0C-340C5208725D)]
            [version(0x06030000)]
            interface IContactPicker2 : IInspectable
            {
                [propget] HRESULT DesiredFieldsWithContactFieldType([out] [retval] Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.ContactFieldType>** value);
                HRESULT PickContactAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Contacts.Contact*>** result);
                HRESULT PickContactsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Foundation.Collections.IVector<Windows.ApplicationModel.Contacts.Contact*>*>** result);
            }

            [exclusiveto(Windows.ApplicationModel.Contacts.ContactCardDelayedDataLoader)]
            [uuid(B60AF902-1546-434D-869C-6E3520760EF3)]
            [version(0x06030000)]
            interface IContactCardDelayedDataLoader : IInspectable
                requires
                    Windows.Foundation.IClosable
            {
                HRESULT SetData([in] Windows.ApplicationModel.Contacts.Contact* contact);
            }

            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass Contact
            {
                [default] interface Windows.ApplicationModel.Contacts.IContact;
                [version(0x06030000)] interface Windows.ApplicationModel.Contacts.IContact2;
                [version(0x06030000)] interface Windows.ApplicationModel.Contacts.IContactName;
                [version(0x0A000000)] interface Windows.ApplicationModel.Contacts.IContact3;
            }

            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactCardDelayedDataLoader
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactCardDelayedDataLoader;
                interface Windows.Foundation.IClosable;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactStore
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactStore;
                [version(0x0A000000)] interface Windows.ApplicationModel.Contacts.IContactStore2;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactAnnotationStore
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactAnnotationStore;
            }

            [activatable(0x0A000000)]
            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactCardOptions
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactCardOptions;
                [version(0x0A000001)] interface Windows.ApplicationModel.Contacts.IContactCardOptions2;
            }

            [activatable(0x0A000000)]
            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass FullContactCardOptions
            {
                [default] interface Windows.ApplicationModel.Contacts.IFullContactCardOptions;
            }

            [activatable(0x0A000000)]
            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactAnnotation
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactAnnotation;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactAnnotationList
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactAnnotationList;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactChangeTracker
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactChangeTracker;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactChangedEventArgs
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactChangedEventArgs;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass AggregateContactManager
            {
                [default] interface Windows.ApplicationModel.Contacts.IAggregateContactManager;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass ContactList
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactList;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactReader
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactReader;
            }

            [activatable(0x0A000000)]
            [activatable(Windows.ApplicationModel.Contacts.IContactQueryOptionsFactory, 0x0A000000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactQueryOptions
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactQueryOptions;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactListSyncManager
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactListSyncManager;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactPhone
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactPhone;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactEmail
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactEmail;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactAddress
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactAddress;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactConnectedServiceAccount
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactConnectedServiceAccount;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactDate
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactDate;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactJobInfo
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactJobInfo;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactSignificantOther
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactSignificantOther;
                [version(0x0A000000)] interface Windows.ApplicationModel.Contacts.IContactSignificantOther2;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass ContactWebsite
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactWebsite;
                [version(0x0A000000)] interface Windows.ApplicationModel.Contacts.IContactWebsite2;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactChangedDeferral
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactChangedDeferral;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactChange
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactChange;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactChangeReader
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactChangeReader;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactBatch
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactBatch;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactMatchReason
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactMatchReason;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactQueryTextSearch
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactQueryTextSearch;
            }

            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass ContactStoreNotificationTriggerDetails
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactStoreNotificationTriggerDetails;
            }

            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Contacts.IContactManagerStatics2, 0x0A000000)]
            [static(Windows.ApplicationModel.Contacts.IContactManagerStatics3, 0x0A000000)]
            [static(Windows.ApplicationModel.Contacts.IContactManagerStatics, 0x06030000)]
            [version(0x06030000)]
            runtimeclass ContactManager
            {
            }

            [marshaling_behavior(standard)]
            [static(Windows.ApplicationModel.Contacts.IContactLaunchActionVerbsStatics, 0x06030000)]
            [version(0x06030000)]
            runtimeclass ContactLaunchActionVerbs
            {
            }

            [activatable(Windows.ApplicationModel.Contacts.IContactFieldFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ContactField
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactField;
            }

            [activatable(Windows.ApplicationModel.Contacts.IContactLocationFieldFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ContactLocationField
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactLocationField;
                interface Windows.ApplicationModel.Contacts.IContactField;
            }

            [activatable(Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ContactInstantMessageField
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactInstantMessageField;
                interface Windows.ApplicationModel.Contacts.IContactField;
            }

            [deprecated("KnownContactField  may be altered or unavailable for releases after Windows 8.1. Instead, use ContactAddress, ContactPhone, ContactConnectedServiceAccount or ContactEmail.", deprecate, 0x06030000)]
            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.Contacts.IKnownContactFieldStatics, 0x06020000)]
            [version(0x06020000)]
            runtimeclass KnownContactField
            {
            }

            [version(0x06020000)]
            runtimeclass ContactInformation
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactInformation;
            }

            [activatable(0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass ContactFieldFactory
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactFieldFactory;
                interface Windows.ApplicationModel.Contacts.IContactLocationFieldFactory;
                interface Windows.ApplicationModel.Contacts.IContactInstantMessageFieldFactory;
            }

            [activatable(0x06020000)]
            [version(0x06020000)]
            runtimeclass ContactPicker
            {
                [default] interface Windows.ApplicationModel.Contacts.IContactPicker;
                [version(0x06030000)] interface Windows.ApplicationModel.Contacts.IContactPicker2;
            }
        }
    }
}
