//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Data.Xml.Dom.idl";
import "Windows.Devices.Sms.idl";
import "Windows.Networking.idl";
import "Windows.Networking.Connectivity.idl";
import "Windows.Storage.Streams.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Edata2Exml2Edom_h__)")
cpp_quote("#include <Windows.Data.Xml.Dom.h>")
cpp_quote("#endif // !defined(__windows2Edata2Exml2Edom_h__)")
cpp_quote("#if !defined(__windows2Edevices2Esms_h__)")
cpp_quote("#include <Windows.Devices.Sms.h>")
cpp_quote("#endif // !defined(__windows2Edevices2Esms_h__)")
cpp_quote("#if !defined(__windows2Enetworking_h__)")
cpp_quote("#include <Windows.Networking.h>")
cpp_quote("#endif // !defined(__windows2Enetworking_h__)")
cpp_quote("#if !defined(__windows2Enetworking2Econnectivity_h__)")
cpp_quote("#include <Windows.Networking.Connectivity.h>")
cpp_quote("#endif // !defined(__windows2Enetworking2Econnectivity_h__)")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Data
    {
        namespace Xml
        {
            namespace Dom
            {
                runtimeclass XmlDocument;
            }
        }
    }
}
namespace Windows
{
    namespace Devices
    {
        namespace Sms
        {
            typedef enum CellularClass CellularClass;

            interface ISmsMessage;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        interface IAsyncAction;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace Connectivity
        {
            runtimeclass ConnectionProfile;

            runtimeclass NetworkAdapter;

            typedef enum NetworkCostType NetworkCostType;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        runtimeclass HostName;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IBuffer;
        }
    }
}
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            typedef enum DataClasses DataClasses;

            typedef enum MobileBroadbandDeviceType MobileBroadbandDeviceType;

            typedef enum NetworkDeviceStatus NetworkDeviceStatus;

            typedef enum NetworkRegistrationState NetworkRegistrationState;

            typedef enum MobileBroadbandRadioState MobileBroadbandRadioState;

            typedef enum NetworkOperatorEventMessageType NetworkOperatorEventMessageType;

            typedef enum MobileBroadbandAccountWatcherStatus MobileBroadbandAccountWatcherStatus;

            typedef enum TetheringOperationalState TetheringOperationalState;

            typedef enum TetheringCapability TetheringCapability;

            typedef enum TetheringOperationStatus TetheringOperationStatus;

            typedef enum MobileBroadbandPinLockState MobileBroadbandPinLockState;

            typedef enum MobileBroadbandPinType MobileBroadbandPinType;

            typedef enum MobileBroadbandPinFormat MobileBroadbandPinFormat;

            typedef enum MobileBroadbandUiccAppOperationStatus MobileBroadbandUiccAppOperationStatus;

            typedef enum UiccAppKind UiccAppKind;

            typedef enum UiccAppRecordKind UiccAppRecordKind;

            typedef enum UiccAccessCondition UiccAccessCondition;

            typedef enum HotspotAuthenticationResponseCode HotspotAuthenticationResponseCode;

            typedef enum ProfileMediaType ProfileMediaType;

            typedef enum UssdResultCode UssdResultCode;

            typedef struct ProfileUsage ProfileUsage;

            interface IMobileBroadbandAccountStatics;

            interface IMobileBroadbandAccount;

            interface IMobileBroadbandAccount2;

            interface IMobileBroadbandDeviceInformation;

            interface IMobileBroadbandDeviceInformation2;

            interface IMobileBroadbandNetwork;

            interface IMobileBroadbandNetwork2;

            interface INetworkOperatorNotificationEventDetails;

            interface INetworkOperatorTetheringEntitlementCheck;

            interface INetworkOperatorTetheringAccessPointConfiguration;

            interface INetworkOperatorTetheringOperationResult;

            interface INetworkOperatorTetheringManagerStatics;

            interface INetworkOperatorTetheringManagerStatics2;

            interface INetworkOperatorTetheringManager;

            interface INetworkOperatorTetheringClient;

            interface INetworkOperatorTetheringClientManager;

            interface IMobileBroadbandAccountEventArgs;

            interface IMobileBroadbandAccountUpdatedEventArgs;

            interface IMobileBroadbandAccountWatcher;

            interface IMobileBroadbandModemStatics;

            interface IMobileBroadbandModemConfiguration;

            interface IMobileBroadbandModem;

            interface IMobileBroadbandPinManager;

            interface IMobileBroadbandPinOperationResult;

            interface IMobileBroadbandPin;

            interface IMobileBroadbandDeviceServiceInformation;

            interface IMobileBroadbandDeviceService;

            interface IMobileBroadbandDeviceServiceDataReceivedEventArgs;

            interface IMobileBroadbandDeviceServiceDataSession;

            interface IMobileBroadbandDeviceServiceCommandResult;

            interface IMobileBroadbandDeviceServiceCommandSession;

            interface IMobileBroadbandUiccAppsResult;

            interface IMobileBroadbandUicc;

            interface IMobileBroadbandUiccAppRecordDetailsResult;

            interface IMobileBroadbandUiccAppReadRecordResult;

            interface IMobileBroadbandUiccApp;

            interface IMobileBroadbandNetworkRegistrationStateChange;

            interface IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails;

            interface IMobileBroadbandRadioStateChange;

            interface IMobileBroadbandRadioStateChangeTriggerDetails;

            interface IMobileBroadbandPinLockStateChange;

            interface IMobileBroadbandPinLockStateChangeTriggerDetails;

            interface IMobileBroadbandDeviceServiceTriggerDetails;

            interface IKnownCSimFilePathsStatics;

            interface IKnownRuimFilePathsStatics;

            interface IKnownSimFilePathsStatics;

            interface IKnownUSimFilePathsStatics;

            interface IHotspotAuthenticationEventDetails;

            interface IHotspotAuthenticationContextStatics;

            interface IHotspotAuthenticationContext;

            interface IHotspotCredentialsAuthenticationResult;

            interface IHotspotAuthenticationContext2;

            interface IProvisionFromXmlDocumentResults;

            interface IProvisionedProfile;

            interface IProvisioningAgent;

            interface IProvisioningAgentStaticMethods;

            interface IUssdMessage;

            interface IUssdMessageFactory;

            interface IUssdReply;

            interface IUssdSession;

            interface IUssdSessionStatics;

            runtimeclass MobileBroadbandAccount;

            runtimeclass MobileBroadbandNetwork;

            runtimeclass MobileBroadbandDeviceInformation;

            runtimeclass MobileBroadbandPinManager;

            runtimeclass MobileBroadbandUiccApp;

            runtimeclass NetworkOperatorNotificationEventDetails;

            runtimeclass NetworkOperatorTetheringAccessPointConfiguration;

            runtimeclass NetworkOperatorTetheringOperationResult;

            runtimeclass NetworkOperatorTetheringManager;

            runtimeclass NetworkOperatorTetheringClient;

            runtimeclass MobileBroadbandAccountEventArgs;

            runtimeclass MobileBroadbandAccountUpdatedEventArgs;

            runtimeclass MobileBroadbandAccountWatcher;

            runtimeclass MobileBroadbandModem;

            runtimeclass MobileBroadbandUicc;

            runtimeclass MobileBroadbandModemConfiguration;

            runtimeclass MobileBroadbandDeviceServiceInformation;

            runtimeclass MobileBroadbandDeviceService;

            runtimeclass MobileBroadbandPin;

            runtimeclass MobileBroadbandPinOperationResult;

            runtimeclass MobileBroadbandDeviceServiceDataSession;

            runtimeclass MobileBroadbandDeviceServiceCommandSession;

            runtimeclass MobileBroadbandDeviceServiceDataReceivedEventArgs;

            runtimeclass MobileBroadbandDeviceServiceCommandResult;

            runtimeclass MobileBroadbandUiccAppsResult;

            runtimeclass MobileBroadbandUiccAppRecordDetailsResult;

            runtimeclass MobileBroadbandUiccAppReadRecordResult;

            runtimeclass MobileBroadbandNetworkRegistrationStateChange;

            runtimeclass MobileBroadbandNetworkRegistrationStateChangeTriggerDetails;

            runtimeclass MobileBroadbandRadioStateChange;

            runtimeclass MobileBroadbandRadioStateChangeTriggerDetails;

            runtimeclass MobileBroadbandPinLockStateChange;

            runtimeclass MobileBroadbandPinLockStateChangeTriggerDetails;

            runtimeclass MobileBroadbandDeviceServiceTriggerDetails;

            runtimeclass KnownCSimFilePaths;

            runtimeclass KnownRuimFilePaths;

            runtimeclass KnownSimFilePaths;

            runtimeclass KnownUSimFilePaths;

            runtimeclass HotspotAuthenticationEventDetails;

            runtimeclass HotspotAuthenticationContext;

            runtimeclass HotspotCredentialsAuthenticationResult;

            runtimeclass ProvisionFromXmlDocumentResults;

            runtimeclass ProvisionedProfile;

            runtimeclass ProvisioningAgent;

            runtimeclass UssdMessage;

            runtimeclass UssdReply;

            runtimeclass UssdSession;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinType>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>;

                interface Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession*, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace Networking
    {
        namespace NetworkOperators
        {
            [flags]
            [version(0x06020000)]
            enum DataClasses
            {
                None           = 0x0,
                Gprs           = 0x1,
                Edge           = 0x2,
                Umts           = 0x4,
                Hsdpa          = 0x8,
                Hsupa          = 0x10,
                LteAdvanced    = 0x20,
                Cdma1xRtt      = 0x10000,
                Cdma1xEvdo     = 0x20000,
                Cdma1xEvdoRevA = 0x40000,
                Cdma1xEvdv     = 0x80000,
                Cdma3xRtt      = 0x100000,
                Cdma1xEvdoRevB = 0x200000,
                CdmaUmb        = 0x400000,
                Custom         = 0x80000000
            };

            [version(0x06020000)]
            enum MobileBroadbandDeviceType
            {
                Unknown   = 0,
                Embedded  = 1,
                Removable = 2,
                Remote    = 3
            };

            [version(0x06020000)]
            enum NetworkDeviceStatus
            {
                DeviceNotReady        = 0,
                DeviceReady           = 1,
                SimNotInserted        = 2,
                BadSim                = 3,
                DeviceHardwareFailure = 4,
                AccountNotActivated   = 5,
                DeviceLocked          = 6,
                DeviceBlocked         = 7
            };

            [version(0x06020000)]
            enum NetworkRegistrationState
            {
                None         = 0,
                Deregistered = 1,
                Searching    = 2,
                Home         = 3,
                Roaming      = 4,
                Partner      = 5,
                Denied       = 6
            };

            [version(0x06020000)]
            enum MobileBroadbandRadioState
            {
                Off = 0,
                On  = 1
            };

            [version(0x06020000)]
            enum NetworkOperatorEventMessageType
            {
                Gsm                              = 0,
                Cdma                             = 1,
                Ussd                             = 2,
                DataPlanThresholdReached         = 3,
                DataPlanReset                    = 4,
                DataPlanDeleted                  = 5,
                ProfileConnected                 = 6,
                ProfileDisconnected              = 7,
                RegisteredRoaming                = 8,
                RegisteredHome                   = 9,
                [version(0x06030000)]
                TetheringEntitlementCheck        = 10,
                [version(0x06030000)]
                TetheringOperationalStateChanged = 11,
                [version(0x06030000)]
                TetheringNumberOfClientsChanged  = 12
            };

            [version(0x06020000)]
            enum MobileBroadbandAccountWatcherStatus
            {
                Created              = 0,
                Started              = 1,
                EnumerationCompleted = 2,
                Stopped              = 3,
                Aborted              = 4
            };

            [version(0x06030000)]
            enum TetheringOperationalState
            {
                Unknown      = 0,
                On           = 1,
                Off          = 2,
                InTransition = 3
            };

            [version(0x06030000)]
            enum TetheringCapability
            {
                Enabled                           = 0,
                DisabledByGroupPolicy             = 1,
                DisabledByHardwareLimitation      = 2,
                DisabledByOperator                = 3,
                DisabledBySku                     = 4,
                DisabledByRequiredAppNotInstalled = 5,
                DisabledDueToUnknownCause         = 6,
                [version(0x0A000000)]
                DisabledBySystemCapability        = 7
            };

            [version(0x06030000)]
            enum TetheringOperationStatus
            {
                Success                  = 0,
                Unknown                  = 1,
                MobileBroadbandDeviceOff = 2,
                WiFiDeviceOff            = 3,
                EntitlementCheckTimeout  = 4,
                EntitlementCheckFailure  = 5,
                OperationInProgress      = 6
            };

            [version(0x0A000000)]
            enum MobileBroadbandPinLockState
            {
                Unknown               = 0,
                Unlocked              = 1,
                PinRequired           = 2,
                PinUnblockKeyRequired = 3
            };

            [version(0x0A000000)]
            enum MobileBroadbandPinType
            {
                None               = 0,
                Custom             = 1,
                Pin1               = 2,
                Pin2               = 3,
                SimPin             = 4,
                FirstSimPin        = 5,
                NetworkPin         = 6,
                NetworkSubsetPin   = 7,
                ServiceProviderPin = 8,
                CorporatePin       = 9,
                SubsidyLock        = 10
            };

            [version(0x0A000000)]
            enum MobileBroadbandPinFormat
            {
                Unknown      = 0,
                Numeric      = 1,
                Alphanumeric = 2
            };

            [version(0x0A000000)]
            enum MobileBroadbandUiccAppOperationStatus
            {
                Success                = 0,
                InvalidUiccFilePath    = 1,
                AccessConditionNotHeld = 2,
                UiccBusy               = 3
            };

            [version(0x0A000000)]
            enum UiccAppKind
            {
                Unknown = 0,
                MF      = 1,
                MFSim   = 2,
                MFRuim  = 3,
                USim    = 4,
                CSim    = 5,
                ISim    = 6
            };

            [version(0x0A000000)]
            enum UiccAppRecordKind
            {
                Unknown        = 0,
                Transparent    = 1,
                RecordOriented = 2
            };

            [version(0x0A000000)]
            enum UiccAccessCondition
            {
                AlwaysAllowed   = 0,
                Pin1            = 1,
                Pin2            = 2,
                Pin3            = 3,
                Pin4            = 4,
                Administrative5 = 5,
                Administrative6 = 6,
                NeverAllowed    = 7
            };

            [version(0x06030000)]
            enum HotspotAuthenticationResponseCode
            {
                NoError                    = 0,
                LoginSucceeded             = 50,
                LoginFailed                = 100,
                RadiusServerError          = 102,
                NetworkAdministratorError  = 105,
                LoginAborted               = 151,
                AccessGatewayInternalError = 255
            };

            [version(0x06020000)]
            enum ProfileMediaType
            {
                Wlan = 0,
                Wwan = 1
            };

            [version(0x06020000)]
            enum UssdResultCode
            {
                NoActionRequired      = 0,
                ActionRequired        = 1,
                Terminated            = 2,
                OtherLocalClient      = 3,
                OperationNotSupported = 4,
                NetworkTimeout        = 5
            };

            [version(0x06020000)]
            struct ProfileUsage
            {
                UINT32 UsageInMegabytes;
                Windows.Foundation.DateTime LastSyncTime;
            };

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(AA7F4D24-AFC1-4FC8-AE9A-A9175310FAAD)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountStatics : IInspectable
            {
                [propget] HRESULT AvailableNetworkAccountIds([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** ppAccountIds);
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccount** ppAccount);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(36C24CCD-CEE2-43E0-A603-EE86A36D6570)]
            [version(0x06020000)]
            interface IMobileBroadbandAccount : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT ServiceProviderGuid([out] [retval] GUID* value);
                [propget] HRESULT ServiceProviderName([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentNetwork([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** network);
                [propget] HRESULT CurrentDeviceInformation([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation** deviceInformation);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccount)]
            [uuid(38F52F1C-1136-4257-959F-B658A352B6D4)]
            [version(0x06030000)]
            interface IMobileBroadbandAccount2 : IInspectable
            {
                HRESULT GetConnectionProfiles([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.Connectivity.ConnectionProfile*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [uuid(E6D08168-E381-4C6E-9BE8-FE156969A446)]
            [version(0x06020000)]
            interface IMobileBroadbandDeviceInformation : IInspectable
            {
                [propget] HRESULT NetworkDeviceStatus([out] [retval] Windows.Networking.NetworkOperators.NetworkDeviceStatus* value);
                [propget] HRESULT Manufacturer([out] [retval] HSTRING* value);
                [propget] HRESULT Model([out] [retval] HSTRING* value);
                [propget] HRESULT FirmwareInformation([out] [retval] HSTRING* value);
                [propget] HRESULT CellularClass([out] [retval] Windows.Devices.Sms.CellularClass* value);
                [propget] HRESULT DataClasses([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT CustomDataClass([out] [retval] HSTRING* value);
                [propget] HRESULT MobileEquipmentId([out] [retval] HSTRING* value);
                [propget] HRESULT TelephoneNumbers([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [propget] HRESULT SubscriberId([out] [retval] HSTRING* value);
                [propget] HRESULT SimIccId([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceType([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceType* pDeviceType);
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT CurrentRadioState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandRadioState* pCurrentState);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation)]
            [uuid(2E467AF1-F932-4737-A722-03BA72370CB8)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceInformation2 : IInspectable
            {
                [propget] HRESULT PinManager([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinManager** value);
                [propget] HRESULT Revision([out] [retval] HSTRING* value);
                [propget] HRESULT SerialNumber([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            [uuid(CB63928C-0309-4CB6-A8C1-6A5A3C8E1FF6)]
            [version(0x06020000)]
            interface IMobileBroadbandNetwork : IInspectable
            {
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT NetworkRegistrationState([out] [retval] Windows.Networking.NetworkOperators.NetworkRegistrationState* registrationState);
                [propget] HRESULT RegistrationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT PacketAttachNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT ActivationNetworkError([out] [retval] UINT32* networkError);
                [propget] HRESULT AccessPointName([out] [retval] HSTRING* apn);
                [propget] HRESULT RegisteredDataClass([out] [retval] Windows.Networking.NetworkOperators.DataClasses* value);
                [propget] HRESULT RegisteredProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT RegisteredProviderName([out] [retval] HSTRING* value);
                HRESULT ShowConnectionUI();
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetwork)]
            [uuid(5A55DB22-62F7-4BDD-BA1D-477441960BA0)]
            [version(0x0A000000)]
            interface IMobileBroadbandNetwork2 : IInspectable
            {
                HRESULT GetVoiceCallSupportAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** asyncInfo);
                [propget] HRESULT RegistrationUiccApps([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)]
            [uuid(BC68A9D1-82E1-4488-9F2C-1276C2468FAC)]
            [version(0x06020000)]
            interface INetworkOperatorNotificationEventDetails : IInspectable
            {
                [propget] HRESULT NotificationType([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType* value);
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT EncodingType([out] [retval] BYTE* value);
                [propget] HRESULT Message([out] [retval] HSTRING* value);
                [propget] HRESULT RuleId([out] [retval] HSTRING* value);
                [propget] HRESULT SmsMessage([out] [retval] Windows.Devices.Sms.ISmsMessage** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorNotificationEventDetails)]
            [uuid(0108916D-9E9A-4AF6-8DA3-60493B19C204)]
            [version(0x06030000)]
            interface INetworkOperatorTetheringEntitlementCheck : IInspectable
            {
                HRESULT AuthorizeTethering([in] boolean allow, [in] HSTRING entitlementFailureReason);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration)]
            [uuid(0BCC0284-412E-403D-ACC6-B757E34774A4)]
            [version(0x06030000)]
            interface INetworkOperatorTetheringAccessPointConfiguration : IInspectable
            {
                [propget] HRESULT Ssid([out] [retval] HSTRING* value);
                [propput] HRESULT Ssid([in] HSTRING value);
                [propget] HRESULT Passphrase([out] [retval] HSTRING* value);
                [propput] HRESULT Passphrase([in] HSTRING value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult)]
            [uuid(EBD203A1-01BA-476D-B4B3-BF3D12C8F80C)]
            [version(0x06030000)]
            interface INetworkOperatorTetheringOperationResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.TetheringOperationStatus* value);
                [propget] HRESULT AdditionalErrorMessage([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(3EBCBACC-F8C3-405C-9964-70A1EEABE194)]
            [version(0x06030000)]
            interface INetworkOperatorTetheringManagerStatics : IInspectable
            {
                HRESULT GetTetheringCapability([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.TetheringCapability* value);
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager** ppManager);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(5B235412-35F0-49E7-9B08-16D278FBAA42)]
            [version(0x0A000000)]
            interface INetworkOperatorTetheringManagerStatics2 : IInspectable
            {
                HRESULT GetTetheringCapabilityFromConnectionProfile([in] Windows.Networking.Connectivity.ConnectionProfile* profile, [out] [retval] Windows.Networking.NetworkOperators.TetheringCapability* result);
                HRESULT CreateFromConnectionProfile([in] Windows.Networking.Connectivity.ConnectionProfile* profile, [out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager** ppManager);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(D45A8DA0-0E86-4D98-8BA4-DD70D4B764D3)]
            [version(0x06030000)]
            interface INetworkOperatorTetheringManager : IInspectable
            {
                [propget] HRESULT MaxClientCount([out] [retval] UINT32* value);
                [propget] HRESULT ClientCount([out] [retval] UINT32* value);
                [propget] HRESULT TetheringOperationalState([out] [retval] Windows.Networking.NetworkOperators.TetheringOperationalState* value);
                HRESULT GetCurrentAccessPointConfiguration([out] [retval] Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration** configuration);
                HRESULT ConfigureAccessPointAsync([in] Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration* configuration, [out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT StartTetheringAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>** asyncInfo);
                HRESULT StopTetheringAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult*>** asyncInfo);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient)]
            [uuid(709D254C-595F-4847-BB30-646935542918)]
            [version(0x0A000000)]
            interface INetworkOperatorTetheringClient : IInspectable
            {
                [propget] HRESULT MacAddress([out] [retval] HSTRING* value);
                [propget] HRESULT HostNames([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.HostName*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager)]
            [uuid(91B14016-8DCA-4225-BBED-EEF8B8D718D7)]
            [version(0x0A000000)]
            interface INetworkOperatorTetheringClientManager : IInspectable
            {
                HRESULT GetTetheringClients([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs)]
            [uuid(3853C880-77DE-4C04-BEAD-A123B08C9F59)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs)]
            [uuid(7BC31D88-A6BD-49E1-80AB-6B91354A57D4)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountUpdatedEventArgs : IInspectable
            {
                [propget] HRESULT NetworkAccountId([out] [retval] HSTRING* value);
                [propget] HRESULT HasDeviceInformationChanged([out] [retval] boolean* value);
                [propget] HRESULT HasNetworkChanged([out] [retval] boolean* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher)]
            [uuid(6BF3335E-23B5-449F-928D-5E0D3E04471D)]
            [version(0x06020000)]
            interface IMobileBroadbandAccountWatcher : IInspectable
            {
                [eventadd] HRESULT AccountAdded([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountAdded([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountUpdated([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountUpdated([in] EventRegistrationToken cookie);
                [eventadd] HRESULT AccountRemoved([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT AccountRemoved([in] EventRegistrationToken cookie);
                [eventadd] HRESULT EnumerationCompleted([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT EnumerationCompleted([in] EventRegistrationToken cookie);
                [eventadd] HRESULT Stopped([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* cookie);
                [eventremove] HRESULT Stopped([in] EventRegistrationToken cookie);
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus* status);
                HRESULT Start();
                HRESULT Stop();
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(F99ED637-D6F1-4A78-8CBC-6421A65063C8)]
            [version(0x0A000000)]
            interface IMobileBroadbandModemStatics : IInspectable
            {
                HRESULT GetDeviceSelector([out] [retval] HSTRING* value);
                HRESULT FromId([in] HSTRING deviceId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandModem** value);
                HRESULT GetDefault([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandModem** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration)]
            [uuid(FCE035A3-D6CD-4320-B982-BE9D3EC7890F)]
            [version(0x0A000000)]
            interface IMobileBroadbandModemConfiguration : IInspectable
            {
                [propget] HRESULT Uicc([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUicc** value);
                [propget] HRESULT HomeProviderId([out] [retval] HSTRING* value);
                [propget] HRESULT HomeProviderName([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandModem)]
            [uuid(D0356912-E9F9-4F67-A03D-43189A316BF1)]
            [version(0x0A000000)]
            interface IMobileBroadbandModem : IInspectable
            {
                [propget] HRESULT CurrentAccount([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandAccount** value);
                [propget] HRESULT DeviceInformation([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation** value);
                [propget] HRESULT MaxDeviceServiceCommandSizeInBytes([out] [retval] UINT32* value);
                [propget] HRESULT MaxDeviceServiceDataSizeInBytes([out] [retval] UINT32* value);
                [propget] HRESULT DeviceServices([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation*>** value);
                HRESULT GetDeviceService([in] GUID deviceServiceId, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceService** value);
                [propget] HRESULT IsResetSupported([out] [retval] boolean* value);
                HRESULT ResetAsync([out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT GetCurrentConfigurationAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration*>** asyncInfo);
                [propget] HRESULT CurrentNetwork([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinManager)]
            [uuid(83567EDD-6E1F-4B9B-A413-2B1F50CC36DF)]
            [version(0x0A000000)]
            interface IMobileBroadbandPinManager : IInspectable
            {
                [propget] HRESULT SupportedPins([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinType>** value);
                HRESULT GetPin([in] Windows.Networking.NetworkOperators.MobileBroadbandPinType pinType, [out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPin** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult)]
            [uuid(11DDDC32-31E7-49F5-B663-123D3BEF0362)]
            [version(0x0A000000)]
            interface IMobileBroadbandPinOperationResult : IInspectable
            {
                [propget] HRESULT IsSuccessful([out] [retval] boolean* value);
                [propget] HRESULT AttemptsRemaining([out] [retval] UINT32* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPin)]
            [uuid(E661D709-E779-45BF-8281-75323DF9E321)]
            [version(0x0A000000)]
            interface IMobileBroadbandPin : IInspectable
            {
                [propget] HRESULT Type([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinType* value);
                [propget] HRESULT LockState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinLockState* value);
                [propget] HRESULT Format([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinFormat* value);
                [propget] HRESULT Enabled([out] [retval] boolean* value);
                [propget] HRESULT MaxLength([out] [retval] UINT32* value);
                [propget] HRESULT MinLength([out] [retval] UINT32* value);
                [propget] HRESULT AttemptsRemaining([out] [retval] UINT32* value);
                HRESULT EnableAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT DisableAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT EnterAsync([in] HSTRING currentPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT ChangeAsync([in] HSTRING currentPin, [in] HSTRING newPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
                HRESULT UnblockAsync([in] HSTRING pinUnblockKey, [in] HSTRING newPin, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult*>** asyncInfo);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation)]
            [uuid(53D69B5B-C4ED-45F0-803A-D9417A6D9846)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceInformation : IInspectable
            {
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT IsDataReadSupported([out] [retval] boolean* value);
                [propget] HRESULT IsDataWriteSupported([out] [retval] boolean* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceService)]
            [uuid(22BE1A52-BD80-40AC-8E1F-2E07836A3DBD)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceService : IInspectable
            {
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT SupportedCommands([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                HRESULT OpenDataSession([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession** value);
                HRESULT OpenCommandSession([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs)]
            [uuid(B6AA13DE-1380-40E3-8618-73CBCA48138C)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceDataReceivedEventArgs : IInspectable
            {
                [propget] HRESULT ReceivedData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession)]
            [uuid(DAD62333-8BCF-4289-8A37-045C2169486A)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceDataSession : IInspectable
            {
                HRESULT WriteDataAsync([in] Windows.Storage.Streams.IBuffer* value, [out] [retval] Windows.Foundation.IAsyncAction** asyncInfo);
                HRESULT CloseSession();
                [eventadd] HRESULT DataReceived([in] Windows.Foundation.TypedEventHandler<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession*, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs*>* eventHandler, [out] [retval] EventRegistrationToken* eventCookie);
                [eventremove] HRESULT DataReceived([in] EventRegistrationToken eventCookie);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult)]
            [uuid(B0F46ABB-94D6-44B9-A538-F0810B645389)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceCommandResult : IInspectable
            {
                [propget] HRESULT StatusCode([out] [retval] UINT32* value);
                [propget] HRESULT ResponseData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession)]
            [uuid(FC098A45-913B-4914-B6C3-AE6304593E75)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceCommandSession : IInspectable
            {
                HRESULT SendQueryCommandAsync([in] UINT32 commandId, [in] Windows.Storage.Streams.IBuffer* data, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>** asyncInfo);
                HRESULT SendSetCommandAsync([in] UINT32 commandId, [in] Windows.Storage.Streams.IBuffer* data, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult*>** asyncInfo);
                HRESULT CloseSession();
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult)]
            [uuid(744930EB-8157-4A41-8494-6BF54C9B1D2B)]
            [version(0x0A000000)]
            interface IMobileBroadbandUiccAppsResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT UiccApps([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandUiccApp*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUicc)]
            [uuid(E634F691-525A-4CE2-8FCE-AA4162579154)]
            [version(0x0A000000)]
            interface IMobileBroadbandUicc : IInspectable
            {
                [propget] HRESULT SimIccId([out] [retval] HSTRING* value);
                HRESULT GetUiccAppsAsync([out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult*>** asyncInfo);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult)]
            [uuid(D919682F-BE14-4934-981D-2F57B9ED83E6)]
            [version(0x0A000000)]
            interface IMobileBroadbandUiccAppRecordDetailsResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT Kind([out] [retval] Windows.Networking.NetworkOperators.UiccAppRecordKind* value);
                [propget] HRESULT RecordCount([out] [retval] INT32* value);
                [propget] HRESULT RecordSize([out] [retval] INT32* value);
                [propget] HRESULT ReadAccessCondition([out] [retval] Windows.Networking.NetworkOperators.UiccAccessCondition* value);
                [propget] HRESULT WriteAccessCondition([out] [retval] Windows.Networking.NetworkOperators.UiccAccessCondition* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult)]
            [uuid(64C95285-358E-47C5-8249-695F383B2BDB)]
            [version(0x0A000000)]
            interface IMobileBroadbandUiccAppReadRecordResult : IInspectable
            {
                [propget] HRESULT Status([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus* value);
                [propget] HRESULT Data([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandUiccApp)]
            [uuid(4D170556-98A1-43DD-B2EC-50C90CF248DF)]
            [version(0x0A000000)]
            interface IMobileBroadbandUiccApp : IInspectable
            {
                [propget] HRESULT Id([out] [retval] Windows.Storage.Streams.IBuffer** value);
                [propget] HRESULT Kind([out] [retval] Windows.Networking.NetworkOperators.UiccAppKind* value);
                HRESULT GetRecordDetailsAsync([in] Windows.Foundation.Collections.IIterable<UINT32>* uiccFilePath, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult*>** asyncInfo);
                HRESULT ReadRecordAsync([in] Windows.Foundation.Collections.IIterable<UINT32>* uiccFilePath, [in] INT32 recordIndex, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult*>** asyncInfo);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange)]
            [uuid(BEAF94E1-960F-49B4-A08D-7D85E968C7EC)]
            [version(0x0A000000)]
            interface IMobileBroadbandNetworkRegistrationStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT Network([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandNetwork** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChangeTriggerDetails)]
            [uuid(89135CFF-28B8-46AA-B137-1C4B0F21EDFE)]
            [version(0x0A000000)]
            interface IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT NetworkRegistrationStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange)]
            [uuid(B054A561-9833-4AED-9717-4348B21A24B3)]
            [version(0x0A000000)]
            interface IMobileBroadbandRadioStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT RadioState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandRadioState* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChangeTriggerDetails)]
            [uuid(71301ACE-093C-42C6-B0DB-AD1F75A65445)]
            [version(0x0A000000)]
            interface IMobileBroadbandRadioStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT RadioStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange)]
            [uuid(BE16673E-1F04-4F95-8B90-E7F559DDE7E5)]
            [version(0x0A000000)]
            interface IMobileBroadbandPinLockStateChange : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT PinType([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinType* value);
                [propget] HRESULT PinLockState([out] [retval] Windows.Networking.NetworkOperators.MobileBroadbandPinLockState* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChangeTriggerDetails)]
            [uuid(D338C091-3E91-4D38-9036-AEE83A6E79AD)]
            [version(0x0A000000)]
            interface IMobileBroadbandPinLockStateChangeTriggerDetails : IInspectable
            {
                [propget] HRESULT PinLockStateChanges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange*>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceTriggerDetails)]
            [uuid(4A055B70-B9AE-4458-9241-A6A5FBF18A0C)]
            [version(0x0A000000)]
            interface IMobileBroadbandDeviceServiceTriggerDetails : IInspectable
            {
                [propget] HRESULT DeviceId([out] [retval] HSTRING* value);
                [propget] HRESULT DeviceServiceId([out] [retval] GUID* value);
                [propget] HRESULT ReceivedData([out] [retval] Windows.Storage.Streams.IBuffer** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.KnownCSimFilePaths)]
            [uuid(B458AEED-49F1-4C22-B073-96D511BF9C35)]
            [version(0x0A000000)]
            interface IKnownCSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.KnownRuimFilePaths)]
            [uuid(3883C8B9-FF24-4571-A867-09F960426E14)]
            [version(0x0A000000)]
            interface IKnownRuimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.KnownSimFilePaths)]
            [uuid(80CD1A63-37A5-43D3-80A3-CCD23E8FECEE)]
            [version(0x0A000000)]
            interface IKnownSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFOns([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.KnownUSimFilePaths)]
            [uuid(7C34E581-1F1B-43F4-9530-8B092D32D71F)]
            [version(0x0A000000)]
            interface IKnownUSimFilePathsStatics : IInspectable
            {
                [propget] HRESULT EFSpn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFOpl([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT EFPnn([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid1([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
                [propget] HRESULT Gid2([out] [retval] Windows.Foundation.Collections.IVectorView<UINT32>** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationEventDetails)]
            [uuid(E756C791-1001-4DE5-83C7-DE61D88831D0)]
            [version(0x06020000)]
            interface IHotspotAuthenticationEventDetails : IInspectable
            {
                [propget] HRESULT EventToken([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1002-4DE5-83C7-DE61D88831D0)]
            [version(0x06020000)]
            interface IHotspotAuthenticationContextStatics : IInspectable
            {
                HRESULT TryGetAuthenticationContext([in] HSTRING evenToken, [out] Windows.Networking.NetworkOperators.HotspotAuthenticationContext** context, [out] [retval] boolean* isValid);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1003-4DE5-83C7-DE61D88831D0)]
            [version(0x06020000)]
            interface IHotspotAuthenticationContext : IInspectable
            {
                [propget] HRESULT WirelessNetworkId([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                [propget] HRESULT NetworkAdapter([out] [retval] Windows.Networking.Connectivity.NetworkAdapter** value);
                [propget] HRESULT RedirectMessageUrl([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT RedirectMessageXml([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
                [propget] HRESULT AuthenticationUrl([out] [retval] Windows.Foundation.Uri** value);
                HRESULT IssueCredentials([in] HSTRING userName, [in] HSTRING password, [in] HSTRING extraParameters, [in] boolean markAsManualConnectOnFailure);
                HRESULT AbortAuthentication([in] boolean markAsManual);
                HRESULT SkipAuthentication();
                HRESULT TriggerAttentionRequired([in] HSTRING packageRelativeApplicationId, [in] HSTRING applicationParameters);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult)]
            [uuid(E756C791-1005-4DE5-83C7-DE61D88831D0)]
            [version(0x06030000)]
            interface IHotspotCredentialsAuthenticationResult : IInspectable
            {
                [propget] HRESULT HasNetworkErrorOccurred([out] [retval] boolean* value);
                [propget] HRESULT ResponseCode([out] [retval] Windows.Networking.NetworkOperators.HotspotAuthenticationResponseCode* value);
                [propget] HRESULT LogoffUrl([out] [retval] Windows.Foundation.Uri** value);
                [propget] HRESULT AuthenticationReplyXml([out] [retval] Windows.Data.Xml.Dom.XmlDocument** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.HotspotAuthenticationContext)]
            [uuid(E756C791-1004-4DE5-83C7-DE61D88831D0)]
            [version(0x06030000)]
            interface IHotspotAuthenticationContext2 : IInspectable
            {
                HRESULT IssueCredentialsAsync([in] HSTRING userName, [in] HSTRING password, [in] HSTRING extraParameters, [in] boolean markAsManualConnectOnFailure, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.HotspotCredentialsAuthenticationResult*>** asyncInfo);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults)]
            [uuid(217700E0-8203-11DF-ADB9-F4CE462D9137)]
            [version(0x06020000)]
            interface IProvisionFromXmlDocumentResults : IInspectable
            {
                [propget] HRESULT AllElementsProvisioned([out] [retval] boolean* value);
                [propget] HRESULT ProvisionResultsXml([out] [retval] HSTRING* value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.ProvisionedProfile)]
            [uuid(217700E0-8202-11DF-ADB9-F4CE462D9137)]
            [version(0x06020000)]
            interface IProvisionedProfile : IInspectable
            {
                HRESULT UpdateCost([in] Windows.Networking.Connectivity.NetworkCostType value);
                HRESULT UpdateUsage([in] Windows.Networking.NetworkOperators.ProfileUsage value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [uuid(217700E0-8201-11DF-ADB9-F4CE462D9137)]
            [version(0x06020000)]
            interface IProvisioningAgent : IInspectable
            {
                HRESULT ProvisionFromXmlDocumentAsync([in] HSTRING provisioningXmlDocument, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.ProvisionFromXmlDocumentResults*>** asyncInfo);
                HRESULT GetProvisionedProfile([in] Windows.Networking.NetworkOperators.ProfileMediaType mediaType, [in] HSTRING profileName, [out] [retval] Windows.Networking.NetworkOperators.ProvisionedProfile** provisionedProfile);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.ProvisioningAgent)]
            [uuid(217700E0-8101-11DF-ADB9-F4CE462D9137)]
            [version(0x06020000)]
            interface IProvisioningAgentStaticMethods : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.ProvisioningAgent** provisioningAgent);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            [uuid(2F9ACF82-2004-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            interface IUssdMessage : IInspectable
            {
                [propget] HRESULT DataCodingScheme([out] [retval] BYTE* value);
                [propput] HRESULT DataCodingScheme([in] BYTE value);
                HRESULT GetPayload([out] UINT32* __valueSize, [out] [retval] [size_is(, *__valueSize)] BYTE** value);
                HRESULT SetPayload([range(0x00000000, 0x000000A0)] [in] UINT32 __valueSize, [in] [size_is(__valueSize)] BYTE* value);
                [propget] HRESULT PayloadAsText([out] [retval] HSTRING* value);
                [propput] HRESULT PayloadAsText([in] HSTRING value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.UssdMessage)]
            [uuid(2F9ACF82-1003-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            interface IUssdMessageFactory : IInspectable
            {
                HRESULT CreateMessage([in] HSTRING messageText, [out] [retval] Windows.Networking.NetworkOperators.UssdMessage** ussdMessage);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.UssdReply)]
            [uuid(2F9ACF82-2005-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            interface IUssdReply : IInspectable
            {
                [propget] HRESULT ResultCode([out] [retval] Windows.Networking.NetworkOperators.UssdResultCode* value);
                [propget] HRESULT Message([out] [retval] Windows.Networking.NetworkOperators.UssdMessage** value);
            }

            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            [uuid(2F9ACF82-2002-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            interface IUssdSession : IInspectable
            {
                HRESULT SendMessageAndGetReplyAsync([in] Windows.Networking.NetworkOperators.UssdMessage* message, [out] [retval] Windows.Foundation.IAsyncOperation<Windows.Networking.NetworkOperators.UssdReply*>** asyncInfo);
                HRESULT Close();
            }

            [exclusiveto(Windows.Networking.NetworkOperators.UssdSession)]
            [uuid(2F9ACF82-1001-4D5D-BF81-2ABA1B4BE4A8)]
            [version(0x06020000)]
            interface IUssdSessionStatics : IInspectable
            {
                HRESULT CreateFromNetworkAccountId([in] HSTRING networkAccountId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
                HRESULT CreateFromNetworkInterfaceId([in] HSTRING networkInterfaceId, [out] [retval] Windows.Networking.NetworkOperators.UssdSession** ussdSession);
            }

            [static(Windows.Networking.NetworkOperators.IMobileBroadbandAccountStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass MobileBroadbandAccount
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount;
                [version(0x06030000)] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccount2;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandNetwork
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork;
                [version(0x0A000000)] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetwork2;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandDeviceInformation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation;
                [version(0x0A000000)] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation2;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandPinManager
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinManager;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandUiccApp
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccApp;
            }

            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass NetworkOperatorNotificationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorNotificationEventDetails;
                [version(0x06030000)] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringEntitlementCheck;
            }

            [activatable(0x06030000)]
            [marshaling_behavior(agile)]
            [version(0x06030000)]
            runtimeclass NetworkOperatorTetheringAccessPointConfiguration
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringAccessPointConfiguration;
            }

            [version(0x06030000)]
            runtimeclass NetworkOperatorTetheringOperationResult
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult;
            }

            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics, 0x06030000)]
            [static(Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics2, 0x0A000000)]
            [threading(both)]
            [version(0x06030000)]
            runtimeclass NetworkOperatorTetheringManager
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringManager;
                [version(0x0A000000)] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringClientManager;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass NetworkOperatorTetheringClient
            {
                [default] interface Windows.Networking.NetworkOperators.INetworkOperatorTetheringClient;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandAccountEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs;
            }

            [version(0x06020000)]
            runtimeclass MobileBroadbandAccountUpdatedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs;
            }

            [activatable(0x06020000)]
            [version(0x06020000)]
            runtimeclass MobileBroadbandAccountWatcher
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IMobileBroadbandModemStatics, 0x0A000000)]
            [threading(both)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandModem
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandModem;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandUicc
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUicc;
            }

            [version(0x0A000000)]
            runtimeclass MobileBroadbandModemConfiguration
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceInformation
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceInformation;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceService
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceService;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandPin
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPin;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandPinOperationResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceDataSession
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataSession;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceCommandSession
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandSession;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceDataReceivedEventArgs
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataReceivedEventArgs;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceCommandResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandUiccAppsResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandUiccAppRecordDetailsResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandUiccAppReadRecordResult
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandNetworkRegistrationStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChange;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandNetworkRegistrationStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandRadioStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChange;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandRadioStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChangeTriggerDetails;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandPinLockStateChange
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChange;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandPinLockStateChangeTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChangeTriggerDetails;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass MobileBroadbandDeviceServiceTriggerDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceTriggerDetails;
            }

            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownCSimFilePathsStatics, 0x0A000000)]
            [version(0x0A000000)]
            runtimeclass KnownCSimFilePaths
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownRuimFilePathsStatics, 0x0A000000)]
            [version(0x0A000000)]
            runtimeclass KnownRuimFilePaths
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownSimFilePathsStatics, 0x0A000000)]
            [version(0x0A000000)]
            runtimeclass KnownSimFilePaths
            {
            }

            [marshaling_behavior(agile)]
            [static(Windows.Networking.NetworkOperators.IKnownUSimFilePathsStatics, 0x0A000000)]
            [version(0x0A000000)]
            runtimeclass KnownUSimFilePaths
            {
            }

            [version(0x06020000)]
            runtimeclass HotspotAuthenticationEventDetails
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationEventDetails;
            }

            [static(Windows.Networking.NetworkOperators.IHotspotAuthenticationContextStatics, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass HotspotAuthenticationContext
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationContext;
                [version(0x06030000)] interface Windows.Networking.NetworkOperators.IHotspotAuthenticationContext2;
            }

            [version(0x06030000)]
            runtimeclass HotspotCredentialsAuthenticationResult
            {
                [default] interface Windows.Networking.NetworkOperators.IHotspotCredentialsAuthenticationResult;
            }

            [version(0x06020000)]
            runtimeclass ProvisionFromXmlDocumentResults
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionFromXmlDocumentResults;
            }

            [version(0x06020000)]
            runtimeclass ProvisionedProfile
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisionedProfile;
            }

            [activatable(0x06020000)]
            [static(Windows.Networking.NetworkOperators.IProvisioningAgentStaticMethods, 0x06020000)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass ProvisioningAgent
            {
                [default] interface Windows.Networking.NetworkOperators.IProvisioningAgent;
            }

            [activatable(Windows.Networking.NetworkOperators.IUssdMessageFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [threading(both)]
            [version(0x06020000)]
            runtimeclass UssdMessage
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdMessage;
            }

            [version(0x06020000)]
            runtimeclass UssdReply
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdReply;
            }

            [static(Windows.Networking.NetworkOperators.IUssdSessionStatics, 0x06020000)]
            [threading(mta)]
            [version(0x06020000)]
            runtimeclass UssdSession
            {
                [default] interface Windows.Networking.NetworkOperators.IUssdSession;
            }
        }
    }
}
