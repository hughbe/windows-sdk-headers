//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Storage.Streams.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IInputStream;

            interface IOutputStream;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Compression
        {
            typedef enum CompressAlgorithm CompressAlgorithm;

            interface ICompressor;

            interface IDecompressor;

            interface ICompressorFactory;

            interface IDecompressorFactory;

            runtimeclass Compressor;

            runtimeclass Decompressor;
        }
    }
}

// Generic instantiations

// Type definition
namespace Windows
{
    namespace Storage
    {
        namespace Compression
        {
            [version(0x06020000)]
            enum CompressAlgorithm
            {
                InvalidAlgorithm = 0,
                NullAlgorithm    = 1,
                Mszip            = 2,
                Xpress           = 3,
                XpressHuff       = 4,
                Lzms             = 5
            };

            [exclusiveto(Windows.Storage.Compression.Compressor)]
            [uuid(0AC3645A-57AC-4EE1-B702-84D39D5424E0)]
            [version(0x06020000)]
            interface ICompressor : IInspectable
                requires
                    Windows.Storage.Streams.IOutputStream,
                    Windows.Foundation.IClosable
            {
                HRESULT FinishAsync([out] [retval] Windows.Foundation.IAsyncOperation<boolean>** operation);
                HRESULT DetachStream([out] [retval] Windows.Storage.Streams.IOutputStream** stream);
            }

            [exclusiveto(Windows.Storage.Compression.Decompressor)]
            [uuid(B883FE46-D68A-4C8B-ADA0-4EE813FC5283)]
            [version(0x06020000)]
            interface IDecompressor : IInspectable
                requires
                    Windows.Storage.Streams.IInputStream,
                    Windows.Foundation.IClosable
            {
                HRESULT DetachStream([out] [retval] Windows.Storage.Streams.IInputStream** stream);
            }

            [exclusiveto(Windows.Storage.Compression.Compressor)]
            [uuid(5F3D96A4-2CFB-442C-A8BA-D7D11B039DA0)]
            [version(0x06020000)]
            interface ICompressorFactory : IInspectable
            {
                HRESULT CreateCompressor([in] Windows.Storage.Streams.IOutputStream* underlyingStream, [out] [retval] Windows.Storage.Compression.Compressor** createdCompressor);
                HRESULT CreateCompressorEx([in] Windows.Storage.Streams.IOutputStream* underlyingStream, [in] Windows.Storage.Compression.CompressAlgorithm algorithm, [in] UINT32 blockSize, [out] [retval] Windows.Storage.Compression.Compressor** createdCompressor);
            }

            [exclusiveto(Windows.Storage.Compression.Decompressor)]
            [uuid(5337E252-1DA2-42E1-8834-0379D28D742F)]
            [version(0x06020000)]
            interface IDecompressorFactory : IInspectable
            {
                HRESULT CreateDecompressor([in] Windows.Storage.Streams.IInputStream* underlyingStream, [out] [retval] Windows.Storage.Compression.Decompressor** createdDecompressor);
            }

            [activatable(Windows.Storage.Compression.ICompressorFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass Compressor
            {
                [default] interface Windows.Storage.Compression.ICompressor;
                interface Windows.Storage.Streams.IOutputStream;
                interface Windows.Foundation.IClosable;
            }

            [activatable(Windows.Storage.Compression.IDecompressorFactory, 0x06020000)]
            [marshaling_behavior(agile)]
            [version(0x06020000)]
            runtimeclass Decompressor
            {
                [default] interface Windows.Storage.Compression.IDecompressor;
                interface Windows.Storage.Streams.IInputStream;
                interface Windows.Foundation.IClosable;
            }
        }
    }
}
