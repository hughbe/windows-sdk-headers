//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Storage.Streams.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#include <Windows.Storage.Streams.h>")
cpp_quote("#endif // !defined(__windows2Estorage2Estreams_h__)")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace ApplicationModel
    {
        namespace LockScreen
        {
            interface ILockScreenBadge;

            interface ILockScreenInfo;

            interface ILockScreenUnlockingDeferral;

            interface ILockScreenUnlockingEventArgs;

            interface ILockApplicationHost;

            interface ILockApplicationHostStatics;

            runtimeclass LockScreenInfo;

            runtimeclass LockScreenBadge;

            runtimeclass LockScreenUnlockingDeferral;

            runtimeclass LockApplicationHost;

            runtimeclass LockScreenUnlockingEventArgs;
        }
    }
}

// Generic instantiations
namespace Windows
{
    namespace ApplicationModel
    {
        namespace LockScreen
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.LockScreen.LockScreenBadge*>;

                interface Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.LockScreen.LockScreenBadge*>;

                interface Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.LockScreen.LockScreenBadge*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockApplicationHost*, Windows.ApplicationModel.LockScreen.LockScreenUnlockingEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockScreenInfo*, IInspectable*>;
            }
        }
    }
}

// Type definition
namespace Windows
{
    namespace ApplicationModel
    {
        namespace LockScreen
        {
            [exclusiveto(Windows.ApplicationModel.LockScreen.LockScreenBadge)]
            [uuid(E95105D9-2BFF-4DB0-9B4F-3824778B9C9A)]
            [version(0x0A000000)]
            interface ILockScreenBadge : IInspectable
            {
                [propget] HRESULT Logo([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
                [propget] HRESULT Glyph([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
                [propget] HRESULT Number([out] [retval] Windows.Foundation.IReference<UINT32>** value);
                [propget] HRESULT AutomationName([out] [retval] HSTRING* value);
                HRESULT LaunchApp();
            }

            [exclusiveto(Windows.ApplicationModel.LockScreen.LockScreenInfo)]
            [uuid(F59AA65C-9711-4DC9-A630-95B6CB8CDAD0)]
            [version(0x0A000000)]
            interface ILockScreenInfo : IInspectable
            {
                [eventadd] HRESULT LockScreenImageChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockScreenInfo*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT LockScreenImageChanged([in] EventRegistrationToken token);
                [propget] HRESULT LockScreenImage([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
                [eventadd] HRESULT BadgesChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockScreenInfo*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT BadgesChanged([in] EventRegistrationToken token);
                [propget] HRESULT Badges([out] [retval] Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.LockScreen.LockScreenBadge*>** value);
                [eventadd] HRESULT DetailTextChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockScreenInfo*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT DetailTextChanged([in] EventRegistrationToken token);
                [propget] HRESULT DetailText([out] [retval] Windows.Foundation.Collections.IVectorView<HSTRING>** value);
                [eventadd] HRESULT AlarmIconChanged([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockScreenInfo*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT AlarmIconChanged([in] EventRegistrationToken token);
                [propget] HRESULT AlarmIcon([out] [retval] Windows.Storage.Streams.IRandomAccessStream** value);
            }

            [exclusiveto(Windows.ApplicationModel.LockScreen.LockScreenUnlockingDeferral)]
            [uuid(7E7D1AD6-5203-43E7-9BD6-7C3947D1E3FE)]
            [version(0x0A000000)]
            interface ILockScreenUnlockingDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [exclusiveto(Windows.ApplicationModel.LockScreen.LockScreenUnlockingEventArgs)]
            [uuid(44E6C007-75FB-4ABB-9F8B-824748900C71)]
            [version(0x0A000000)]
            interface ILockScreenUnlockingEventArgs : IInspectable
            {
                HRESULT GetDeferral([out] [retval] Windows.ApplicationModel.LockScreen.LockScreenUnlockingDeferral** deferral);
                [propget] HRESULT Deadline([out] [retval] Windows.Foundation.DateTime* value);
            }

            [exclusiveto(Windows.ApplicationModel.LockScreen.LockApplicationHost)]
            [uuid(38EE31AD-D94F-4E7C-81FA-4F4436506281)]
            [version(0x0A000000)]
            interface ILockApplicationHost : IInspectable
            {
                HRESULT RequestUnlock();
                [eventadd] HRESULT Unlocking([in] Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.LockScreen.LockApplicationHost*, Windows.ApplicationModel.LockScreen.LockScreenUnlockingEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Unlocking([in] EventRegistrationToken token);
            }

            [exclusiveto(Windows.ApplicationModel.LockScreen.LockApplicationHost)]
            [uuid(F48FAB8E-23D7-4E63-96A1-666FF52D3B2C)]
            [version(0x0A000000)]
            interface ILockApplicationHostStatics : IInspectable
            {
                HRESULT GetForCurrentView([out] [retval] Windows.ApplicationModel.LockScreen.LockApplicationHost** result);
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass LockScreenInfo
            {
                [default] interface Windows.ApplicationModel.LockScreen.ILockScreenInfo;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass LockScreenBadge
            {
                [default] interface Windows.ApplicationModel.LockScreen.ILockScreenBadge;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass LockScreenUnlockingDeferral
            {
                [default] interface Windows.ApplicationModel.LockScreen.ILockScreenUnlockingDeferral;
            }

            [marshaling_behavior(agile)]
            [static(Windows.ApplicationModel.LockScreen.ILockApplicationHostStatics, 0x0A000000)]
            [version(0x0A000000)]
            runtimeclass LockApplicationHost
            {
                [default] interface Windows.ApplicationModel.LockScreen.ILockApplicationHost;
            }

            [marshaling_behavior(agile)]
            [version(0x0A000000)]
            runtimeclass LockScreenUnlockingEventArgs
            {
                [default] interface Windows.ApplicationModel.LockScreen.ILockScreenUnlockingEventArgs;
            }
        }
    }
}
