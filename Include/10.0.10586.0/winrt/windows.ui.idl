//
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
//
// File generated by WinMDIDL version 8.00.0014
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
// Additional imports to ensure that all required headers are included
cpp_quote("#if defined(__cplusplus)")
cpp_quote("}")
cpp_quote("#endif // defined(__cplusplus)")
cpp_quote("#include <Windows.Foundation.h>")
cpp_quote("#if defined(__cplusplus)")
cpp_quote("extern \"C\" {")
cpp_quote("#endif // defined(__cplusplus)")

// Forward Declare
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;

        interface IColorHelper;

        interface IColorHelperStatics;

        interface IColors;

        interface IColorsStatics;

        runtimeclass ColorHelper;

        runtimeclass Colors;
    }
}

// Generic instantiations
namespace Windows
{
    namespace UI
    {
        declare
        {
            interface Windows.Foundation.Collections.IIterable<Windows.UI.Color>;

            interface Windows.Foundation.Collections.IIterator<Windows.UI.Color>;

            interface Windows.Foundation.IReference<Windows.UI.Color>;
        }
    }
}

// Type definition
namespace Windows
{
    namespace UI
    {
        [version(0x06020000)]
        struct Color
        {
            BYTE A;
            BYTE R;
            BYTE G;
            BYTE B;
        };

        [exclusiveto(Windows.UI.ColorHelper)]
        [uuid(193CFBE7-65C7-4540-AD08-6283BA76879A)]
        [version(0x06020000)]
        interface IColorHelper : IInspectable
        {
        }

        [exclusiveto(Windows.UI.ColorHelper)]
        [uuid(8504DBEA-FB6A-4144-A6C2-33499C9284F5)]
        [version(0x06020000)]
        interface IColorHelperStatics : IInspectable
        {
            HRESULT FromArgb([in] BYTE a, [in] BYTE r, [in] BYTE g, [in] BYTE b, [out] [retval] Windows.UI.Color* returnValue);
        }

        [exclusiveto(Windows.UI.Colors)]
        [uuid(9B8C9326-4CA6-4CE5-8994-9EFF65CABDCC)]
        [version(0x06020000)]
        interface IColors : IInspectable
        {
        }

        [exclusiveto(Windows.UI.Colors)]
        [uuid(CFF52E04-CCA6-4614-A17E-754910C84A99)]
        [version(0x06020000)]
        interface IColorsStatics : IInspectable
        {
            [propget] HRESULT AliceBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT AntiqueWhite([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Aqua([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Aquamarine([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Azure([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Beige([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Bisque([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Black([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT BlanchedAlmond([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Blue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT BlueViolet([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Brown([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT BurlyWood([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT CadetBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Chartreuse([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Chocolate([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Coral([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT CornflowerBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Cornsilk([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Crimson([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Cyan([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkCyan([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkGoldenrod([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkKhaki([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkMagenta([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkOliveGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkOrange([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkOrchid([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkRed([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkSalmon([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkSeaGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkSlateBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkSlateGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkTurquoise([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DarkViolet([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DeepPink([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DeepSkyBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DimGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT DodgerBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Firebrick([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT FloralWhite([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT ForestGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Fuchsia([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Gainsboro([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT GhostWhite([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Gold([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Goldenrod([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Gray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Green([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT GreenYellow([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Honeydew([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT HotPink([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT IndianRed([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Indigo([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Ivory([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Khaki([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Lavender([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LavenderBlush([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LawnGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LemonChiffon([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightCoral([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightCyan([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightGoldenrodYellow([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightPink([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightSalmon([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightSeaGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightSkyBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightSlateGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightSteelBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LightYellow([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Lime([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT LimeGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Linen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Magenta([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Maroon([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumAquamarine([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumOrchid([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumPurple([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumSeaGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumSlateBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumSpringGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumTurquoise([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MediumVioletRed([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MidnightBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MintCream([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT MistyRose([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Moccasin([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT NavajoWhite([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Navy([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT OldLace([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Olive([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT OliveDrab([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Orange([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT OrangeRed([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Orchid([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PaleGoldenrod([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PaleGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PaleTurquoise([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PaleVioletRed([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PapayaWhip([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PeachPuff([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Peru([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Pink([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Plum([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT PowderBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Purple([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Red([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT RosyBrown([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT RoyalBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SaddleBrown([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Salmon([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SandyBrown([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SeaGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SeaShell([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Sienna([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Silver([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SkyBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SlateBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SlateGray([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Snow([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SpringGreen([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT SteelBlue([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Tan([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Teal([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Thistle([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Tomato([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Transparent([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Turquoise([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Violet([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Wheat([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT White([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT WhiteSmoke([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT Yellow([out] [retval] Windows.UI.Color* value);
            [propget] HRESULT YellowGreen([out] [retval] Windows.UI.Color* value);
        }

        [marshaling_behavior(agile)]
        [static(Windows.UI.IColorHelperStatics, 0x06020000)]
        [threading(both)]
        [version(0x06020000)]
        runtimeclass ColorHelper
        {
            [default] interface Windows.UI.IColorHelper;
        }

        [marshaling_behavior(agile)]
        [static(Windows.UI.IColorsStatics, 0x06020000)]
        [threading(both)]
        [version(0x06020000)]
        runtimeclass Colors
        {
            [default] interface Windows.UI.IColors;
        }
    }
}
